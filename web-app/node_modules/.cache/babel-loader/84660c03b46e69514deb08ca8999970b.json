{"remainingRequest":"/root/lockhash/web-app/node_modules/thread-loader/dist/cjs.js!/root/lockhash/web-app/node_modules/babel-loader/lib/index.js!/root/lockhash/web-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/root/lockhash/web-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/root/lockhash/web-app/src/modules/threads/form.vue?vue&type=script&lang=js&","dependencies":[{"path":"/root/lockhash/web-app/src/modules/threads/form.vue","mtime":1553930101455},{"path":"/root/lockhash/web-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/root/lockhash/web-app/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/root/lockhash/web-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/root/lockhash/web-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/root/lockhash/web-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.object.to-string\";\nimport _Object$assign from \"/root/lockhash/web-app/node_modules/@babel/runtime-corejs2/core-js/object/assign\";\nimport _typeof from \"/root/lockhash/web-app/node_modules/@babel/runtime-corejs2/helpers/esm/typeof\";\nimport \"core-js/modules/es6.function.name\";\nimport _objectSpread from \"/root/lockhash/web-app/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport Editor from '$components/editor';\nimport UserLocked from '$components/user-locked';\nimport localforage from 'localforage';\nimport Alert from '$icons/Alert';\nimport { Select as ElSelect, Option as ElOption } from 'element-ui';\nimport 'element-ui/lib/theme-chalk/select.css';\nexport default {\n  name: 'thread-form',\n  components: {\n    Editor: Editor,\n    Alert: Alert,\n    ElSelect: ElSelect,\n    ElOption: ElOption,\n    UserLocked: UserLocked\n  },\n  data: function data() {\n    return {\n      ready: false,\n      nodes: [],\n      busing: false,\n      form: {\n        node_id: null,\n        type: 'markdown',\n        is_draft: true,\n        title: '',\n        content: {\n          markdown: '',\n          body: ''\n        },\n        ticket: null,\n        randstr: null\n      }\n    };\n  },\n  watch: {\n    form: {\n      deep: true,\n      handler: function handler() {\n        localforage.setItem('thread.form', this.form);\n      }\n    }\n  },\n  computed: _objectSpread({}, mapGetters(['currentUser']), {\n    formReady: function formReady() {\n      return !this.busing && this.form.title.length >= 5 && this.form.node_id > 0 && this.form.content.markdown && this.form.content.markdown.length >= 30;\n    }\n  }),\n  mounted: function mounted() {\n    var _this = this;\n\n    this.loadNodes();\n\n    if (this.$route.name == 'threads.edit') {\n      this.loadThread(this.$route.params.id).then(this.syncFromCache).then(function () {\n        _this.ready = true;\n      });\n    } else {\n      this.syncFromCache();\n      this.ready = true;\n    }\n\n    this.$nextTick(function () {\n      _this.$refs['title_input'].focus();\n    });\n  },\n  methods: {\n    syncFromCache: function syncFromCache() {\n      var _this2 = this;\n\n      localforage.getItem('thread.form', function (err, form) {\n        if (!err && _typeof(form) === 'object') {\n          _this2.form = _Object$assign(_this2.form, form);\n        }\n      });\n    },\n    clearCache: function clearCache() {\n      localforage.removeItem('thread.form');\n    },\n    loadNodes: function loadNodes() {\n      var _this3 = this;\n\n      this.busing = true;\n      return this.$http.get('nodes').then(function (response) {\n        _this3.nodes = response.data;\n        _this3.busing = false;\n      }).finally(function () {\n        return _this3.busing = false;\n      });\n    },\n    loadThread: function loadThread(id) {\n      var _this4 = this;\n\n      return this.$http.get(\"threads/\".concat(id)).then(function (thread) {\n        return _this4.form = _Object$assign(_this4.form, thread);\n      });\n    },\n    showCaptcha: function showCaptcha(draft) {\n      var _this5 = this;\n\n      var captcha = new TencentCaptcha(process.env.VUE_APP_CAPTCHA_ID_PUBLISH, function (res) {\n        if (res.ret === 0) {\n          _this5.form.ticket = res.ticket;\n          _this5.form.randstr = res.randstr;\n\n          _this5.submit(draft);\n        } else {\n          return _this5.$message.error('请先完成验证！');\n        }\n      });\n      captcha.show();\n    },\n    submit: function submit() {\n      var _this6 = this;\n\n      var draft = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      if (!this.form.ticket) {\n        return this.$message.error('请先完成验证！');\n      }\n\n      this.form.is_draft = draft;\n      this.busing = true;\n      var promise = null;\n      var isEdit = this.$route.name == 'threads.edit';\n\n      if (isEdit) {\n        promise = this.$http.patch(\"threads/\".concat(this.$route.params.id)).patch(this.form);\n      } else {\n        promise = this.$http.post('threads', this.form);\n      }\n\n      promise.then(function (response) {\n        _this6.$message.success('内容已' + (draft ? '保存为草稿' : isEdit ? '更新' : '发布'));\n\n        _this6.$router.replace({\n          name: 'threads.show',\n          params: {\n            id: response.id\n          }\n        });\n\n        _this6.clearCache();\n      }).finally(function () {\n        return _this6.busing = false;\n      });\n    }\n  }\n};",{"version":3,"sources":["form.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"page-threads-show\" v-if=\"ready\">\n    <div v-if=\"currentUser.has_banned\">\n      <user-locked />\n    </div>\n    <div v-else-if=\"$user() && !$user().has_activated\">\n      <div class=\"box-body py-4 text-center\">\n        <h1 class=\"display-4 text-gray-40\">\n          <alert />\n        </h1>\n        您需要先激活账户以使用此功能\n      </div>\n    </div>\n    <div class=\"row\" v-else>\n      <div class=\"col-md-9 m-auto\">\n        <div class=\"box box-flush\">\n          <form>\n            <div class=\"card\">\n              <div class=\"card-header pt-3 border-bottom-0\">\n                <div class=\"input-group input-group\">\n                  <input type=\"text\" ref=\"title_input\" class=\"form-control form-control-lg\" v-model=\"form.title\" placeholder=\"请在这里输入标题（请精准表达）\">\n                </div>\n              </div>\n              <editor v-model=\"form.content.markdown\" :toolbar=\"false\" :options=\"{maxLines: Infinity}\" placeholder=\"请使用 Markdown 格式详细并精准的表达，不得少于30个字符~\"></editor>\n              <div class=\"card-footer border-top p-2 d-flex justify-content-between\">\n                <div class=\"left-actions d-flex align-items-center\">\n                  <span class=\"text-muted\">发布到</span>\n                  <div class=\"dropdown ml-1\">\n                    <el-select filterable v-model=\"form.node_id\">\n                      <el-option v-for=\"item in nodes\" :key=\"item.id\" :value=\"item.id\" :label=\"item.title\"></el-option>\n                    </el-select>\n                  </div>\n                </div>\n                <div class=\"right-actions\">\n                  <button type=\"button\" class=\"btn btn-primary\" :disabled=\"!formReady\" @click=\"showCaptcha(false)\">立即发布</button>\n                  <button type=\"button\" class=\"btn btn-secondary ml-1\" :disabled=\"!formReady\" @click=\"submit(true)\">保存为草稿</button>\n                </div>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nimport Editor from '$components/editor'\nimport UserLocked from '$components/user-locked'\nimport localforage from 'localforage'\nimport Alert from '$icons/Alert'\nimport { Select as ElSelect, Option as ElOption } from 'element-ui'\nimport 'element-ui/lib/theme-chalk/select.css'\n\nexport default {\n  name: 'thread-form',\n  components: {\n    Editor,\n    Alert,\n    ElSelect,\n    ElOption,\n    UserLocked\n  },\n  data () {\n    return {\n      ready: false,\n      nodes: [],\n      busing: false,\n      form: {\n        node_id: null,\n        type: 'markdown',\n        is_draft: true,\n        title: '',\n        content: {\n          markdown: '',\n          body: ''\n        },\n        ticket: null,\n        randstr: null\n      }\n    }\n  },\n  watch: {\n    form: {\n      deep: true,\n      handler () {\n        localforage.setItem('thread.form', this.form)\n      }\n    }\n  },\n  computed: {\n    ...mapGetters(['currentUser']),\n    formReady () {\n      return (\n        !this.busing &&\n        this.form.title.length >= 5 &&\n        this.form.node_id > 0 &&\n        this.form.content.markdown &&\n        this.form.content.markdown.length >= 30\n      )\n    }\n  },\n  mounted () {\n    this.loadNodes()\n    if (this.$route.name == 'threads.edit') {\n      this.loadThread(this.$route.params.id)\n        .then(this.syncFromCache)\n        .then(() => {\n          this.ready = true\n        })\n    } else {\n      this.syncFromCache()\n      this.ready = true\n    }\n    this.$nextTick(() => {\n      this.$refs['title_input'].focus()\n    })\n  },\n  methods: {\n    syncFromCache () {\n      localforage.getItem('thread.form', (err, form) => {\n        if (!err && typeof form === 'object') {\n          this.form = Object.assign(this.form, form)\n        }\n      })\n    },\n    clearCache () {\n      localforage.removeItem('thread.form')\n    },\n    loadNodes () {\n      this.busing = true\n      return this.$http\n        .get('nodes')\n        .then(response => {\n          this.nodes = response.data\n          this.busing = false\n        })\n        .finally(() => (this.busing = false))\n    },\n    loadThread (id) {\n      return this.$http\n        .get(`threads/${id}`)\n        .then(thread => (this.form = Object.assign(this.form, thread)))\n    },\n    showCaptcha (draft) {\n      let captcha = new TencentCaptcha(\n        process.env.VUE_APP_CAPTCHA_ID_PUBLISH,\n        res => {\n          if (res.ret === 0) {\n            this.form.ticket = res.ticket\n            this.form.randstr = res.randstr\n            this.submit(draft)\n          } else {\n            return this.$message.error('请先完成验证！')\n          }\n        }\n      )\n      captcha.show()\n    },\n    submit (draft = true) {\n      if (!this.form.ticket) {\n        return this.$message.error('请先完成验证！')\n      }\n      this.form.is_draft = draft\n      this.busing = true\n      let promise = null\n      let isEdit = this.$route.name == 'threads.edit'\n\n      if (isEdit) {\n        promise = this.$http\n          .patch(`threads/${this.$route.params.id}`)\n          .patch(this.form)\n      } else {\n        promise = this.$http.post('threads', this.form)\n      }\n\n      promise\n        .then(response => {\n          this.$message.success(\n            '内容已' + (draft ? '保存为草稿' : isEdit ? '更新' : '发布')\n          )\n          this.$router.replace({\n            name: 'threads.show',\n            params: { id: response.id }\n          })\n          this.clearCache()\n        })\n        .finally(() => (this.busing = false))\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.editor-container {\n  overflow: auto;\n  height: calc(100vh - 370px);\n}\n</style>\n"],"sourceRoot":"src/modules/threads"}]}
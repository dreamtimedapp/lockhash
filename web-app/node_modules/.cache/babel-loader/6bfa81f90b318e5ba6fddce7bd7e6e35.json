{"remainingRequest":"/root/lockhash/web-app/node_modules/thread-loader/dist/cjs.js!/root/lockhash/web-app/node_modules/babel-loader/lib/index.js!/root/lockhash/web-app/node_modules/eslint-loader/index.js??ref--13-0!/root/lockhash/web-app/src/modules/auth/vuex/plugin.js","dependencies":[{"path":"/root/lockhash/web-app/src/modules/auth/vuex/plugin.js","mtime":1553930101455},{"path":"/root/lockhash/web-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/root/lockhash/web-app/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/root/lockhash/web-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/root/lockhash/web-app/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["// plugins and src are alias. see client/build/webpack.base.conf.js\nimport { userTokenStorageKey } from '$config';\nimport { setToken as httpSetToken } from '$utils/http';\nimport localforage from 'localforage';\nimport * as TYPES from './mutations-types';\n\nvar subscribe = function subscribe(store) {\n  store.subscribe(function (mutation, _ref) {\n    var Auth = _ref.Auth;\n\n    if (TYPES.SET_TOKEN === mutation.type) {\n      /**\n       * Set the Axios Authorization header with the token\n       */\n      httpSetToken(Auth.token);\n      /**\n       * Sets the token to the local storage\n       * for auto-login purpose\n       */\n\n      localforage.setItem(userTokenStorageKey, Auth.token);\n    }\n  });\n};\n\nexport default (function (store) {\n  subscribe(store);\n});",{"version":3,"sources":["/root/lockhash/web-app/src/modules/auth/vuex/plugin.js"],"names":["userTokenStorageKey","setToken","httpSetToken","localforage","TYPES","subscribe","store","mutation","Auth","SET_TOKEN","type","token","setItem"],"mappings":"AAAA;AACA,SAASA,mBAAT,QAAoC,SAApC;AACA,SAASC,QAAQ,IAAIC,YAArB,QAAyC,aAAzC;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAO,KAAKC,KAAZ,MAAuB,mBAAvB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,KAAK,EAAI;AACzBA,EAAAA,KAAK,CAACD,SAAN,CAAgB,UAACE,QAAD,QAAwB;AAAA,QAAXC,IAAW,QAAXA,IAAW;;AACtC,QAAIJ,KAAK,CAACK,SAAN,KAAoBF,QAAQ,CAACG,IAAjC,EAAuC;AACrC;;;AAGAR,MAAAA,YAAY,CAACM,IAAI,CAACG,KAAN,CAAZ;AACA;;;;;AAIAR,MAAAA,WAAW,CAACS,OAAZ,CAAoBZ,mBAApB,EAAyCQ,IAAI,CAACG,KAA9C;AACD;AACF,GAZD;AAaD,CAdD;;AAgBA,gBAAe,UAAAL,KAAK,EAAI;AACtBD,EAAAA,SAAS,CAACC,KAAD,CAAT;AACD,CAFD","sourcesContent":["// plugins and src are alias. see client/build/webpack.base.conf.js\nimport { userTokenStorageKey } from '$config'\nimport { setToken as httpSetToken } from '$utils/http'\nimport localforage from 'localforage'\nimport * as TYPES from './mutations-types'\n\nconst subscribe = store => {\n  store.subscribe((mutation, { Auth }) => {\n    if (TYPES.SET_TOKEN === mutation.type) {\n      /**\n       * Set the Axios Authorization header with the token\n       */\n      httpSetToken(Auth.token)\n      /**\n       * Sets the token to the local storage\n       * for auto-login purpose\n       */\n      localforage.setItem(userTokenStorageKey, Auth.token)\n    }\n  })\n}\n\nexport default store => {\n  subscribe(store)\n}\n"]}]}
{"remainingRequest":"/root/lockhash/web-app/node_modules/thread-loader/dist/cjs.js!/root/lockhash/web-app/node_modules/babel-loader/lib/index.js!/root/lockhash/web-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/root/lockhash/web-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/root/lockhash/web-app/src/modules/auth/register.vue?vue&type=script&lang=js&","dependencies":[{"path":"/root/lockhash/web-app/src/modules/auth/register.vue","mtime":1553930633241},{"path":"/root/lockhash/web-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/root/lockhash/web-app/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/root/lockhash/web-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/root/lockhash/web-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/root/lockhash/web-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/root/lockhash/web-app/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/root/lockhash/web-app/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/es6.regexp.match\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions } from 'vuex';\nimport GooglePlus from '$icons/GooglePlus';\nimport FacebookIcon from '$icons/Facebook';\nimport QqIcon from '$icons/Qqchat';\nimport GithubIcon from '$icons/GithubCircle';\nimport qs from 'qs';\nexport default {\n  name: 'register',\n  components: {\n    GooglePlus: GooglePlus,\n    FacebookIcon: FacebookIcon,\n    QqIcon: QqIcon,\n    GithubIcon: GithubIcon\n  },\n  data: function data() {\n    return {\n      username: '',\n      email: '',\n      password: '',\n      ticket: null,\n      randstr: null,\n      error: true,\n      regex: {\n        email: /^[a-zA-Z0-9-_.]+@[a-zA-Z0-9-.]+.(com|io|cc|co|li|it|sh|cn|net|org|jp|tw|me|info|us|in|la|pro|im|so|at|my)$/,\n        username: /^[a-zA-Z]+[a-zA-Z0-9_-]+$/\n      }\n    };\n  },\n  watch: {\n    username: function username() {\n      this.$refs['usernameInput'].classList.remove('is-invalid');\n    },\n    email: function email() {\n      this.$refs['emailInput'].classList.remove('is-invalid');\n    }\n  },\n  computed: {\n    formReady: function formReady() {\n      return !this.error && this.email.match(this.regex.email) && this.username.match(this.regex.username) && this.username.length >= 5 && this.username.length <= 12 && this.password.length >= 6 && this.password.length <= 32;\n    }\n  },\n  methods: _objectSpread({}, mapActions(['attemptRegister']), {\n    validateUsername: function validateUsername() {\n      var _this = this;\n\n      this.error = false;\n\n      if (!this.username.match(this.regex.username) || this.username.length < 5) {\n        this.error = true;\n        this.$refs['usernameInput'].classList.add('is-invalid');\n        return this.$message.error('请输入 5 ~ 12 位正确格式用户名');\n      }\n\n      this.$http.post('user/exists', qs.stringify({\n        username: this.username\n      })).then(function (response) {\n        if (!response.success) {\n          _this.error = true;\n\n          _this.$refs['usernameInput'].classList.add('is-invalid');\n\n          return _this.$message.error('用户名已经存在！');\n        }\n      });\n    },\n    validateEmail: function validateEmail() {\n      var _this2 = this;\n\n      this.error = false;\n\n      if (!this.email.match(this.regex.email)) {\n        this.error = true;\n        this.$refs['emailInput'].classList.add('is-invalid');\n        return this.$message.error('请输入正确的邮箱地址');\n      }\n\n      this.$http.post('user/exists', qs.stringify({\n        email: this.email\n      })).then(function (response) {\n        if (!response.success) {\n          _this2.error = true;\n\n          _this2.$refs['emailInput'].classList.add('is-invalid');\n\n          return _this2.$message.error('邮箱已经存在！');\n        }\n      });\n    },\n    showCaptcha: function showCaptcha() {\n      var _this3 = this;\n\n      var captcha = new window.TencentCaptcha('2024993958', function (res) {\n        if (res.ret === 0) {\n          _this3.ticket = res.ticket;\n          _this3.randstr = res.randstr;\n\n          _this3.submit();\n        } else {\n          return _this3.$message.error('请先完成验证！');\n        }\n      });\n      captcha.show();\n    },\n    submit: function () {\n      var _submit = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.ticket) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this.$message.error('请先完成验证！'));\n\n              case 2:\n                _context.prev = 2;\n                _context.next = 5;\n                return this.attemptRegister(this.$data);\n\n              case 5:\n                this.$message.warning('注册成功，请先验证你邮箱地址！');\n                this.$router.push({\n                  name: 'home'\n                });\n                _context.next = 12;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](2);\n\n                if (_context.t0.status !== 422) {\n                  this.$message.error('注册失败！');\n                }\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 9]]);\n      }));\n\n      function submit() {\n        return _submit.apply(this, arguments);\n      }\n\n      return submit;\n    }()\n  })\n};",{"version":3,"sources":["register.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"row pt-3\">\n    <div class=\"offset-sm-4 col-sm-4\">\n      <div class=\"box\">\n        <h4 class=\"text-center font-weight-normal mt-2\">用户注册</h4>\n        <form @submit.prevent=\"showCaptcha\">\n          <div class=\"form-group\">\n            <label>邮箱地址</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              ref=\"emailInput\"\n              placeholder=\"example@yike.io\"\n              v-model=\"email\"\n              @blur=\"validateEmail\"\n              required\n            >\n          </div>\n          <div class=\"form-group\">\n            <label>用户名</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              ref=\"usernameInput\"\n              placeholder=\"5 ~ 12 位字母或数字\"\n              v-model=\"username\"\n              @blur=\"validateUsername\"\n              required\n            >\n          </div>\n          <div class=\"form-group\">\n            <label>密码</label>\n            <input\n              type=\"password\"\n              class=\"form-control\"\n              ref=\"passwordInput\"\n              placeholder=\"6 ~ 32 位安全密码\"\n              v-model=\"password\"\n              required\n            >\n          </div>\n          <button type=\"submit\" :disabled=\"!formReady\" class=\"my-2 btn btn-primary w-100\">注册</button>\n        </form>\n      </div>\n    </div>\n    <div class=\"offset-sm-3 col-sm-6 text-center mt-2\">\n      <p>\n        已有账号？\n        <router-link class=\"text-blue\" :to=\"{ name: 'auth.login' }\">快速登录</router-link>\n      </p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapActions } from 'vuex'\nimport GooglePlus from '$icons/GooglePlus'\nimport FacebookIcon from '$icons/Facebook'\nimport QqIcon from '$icons/Qqchat'\nimport GithubIcon from '$icons/GithubCircle'\nimport qs from 'qs'\n\nexport default {\n  name: 'register',\n  components: { GooglePlus, FacebookIcon, QqIcon, GithubIcon },\n  data () {\n    return {\n      username: '',\n      email: '',\n      password: '',\n      ticket: null,\n      randstr: null,\n      error: true,\n      regex: {\n        email: /^[a-zA-Z0-9-_.]+@[a-zA-Z0-9-.]+.(com|io|cc|co|li|it|sh|cn|net|org|jp|tw|me|info|us|in|la|pro|im|so|at|my)$/,\n        username: /^[a-zA-Z]+[a-zA-Z0-9_-]+$/\n      }\n    }\n  },\n  watch: {\n    username () {\n      this.$refs['usernameInput'].classList.remove('is-invalid')\n    },\n    email () {\n      this.$refs['emailInput'].classList.remove('is-invalid')\n    }\n  },\n  computed: {\n    formReady () {\n      return (\n        !this.error &&\n        this.email.match(this.regex.email) &&\n        this.username.match(this.regex.username) &&\n        this.username.length >= 5 &&\n        this.username.length <= 12 &&\n        this.password.length >= 6 &&\n        this.password.length <= 32\n      )\n    }\n  },\n  methods: {\n    ...mapActions(['attemptRegister']),\n    validateUsername () {\n      this.error = false\n\n      if (\n        !this.username.match(this.regex.username) ||\n        this.username.length < 5\n      ) {\n        this.error = true\n        this.$refs['usernameInput'].classList.add('is-invalid')\n        return this.$message.error('请输入 5 ~ 12 位正确格式用户名')\n      }\n\n      this.$http\n        .post('user/exists',qs.stringify({ username: this.username }))\n        .then(response => {\n          if (!response.success) {\n            this.error = true\n            this.$refs['usernameInput'].classList.add('is-invalid')\n            return this.$message.error('用户名已经存在！')\n          }\n        })\n    },\n    validateEmail () {\n      this.error = false\n\n      if (!this.email.match(this.regex.email)) {\n        this.error = true\n        this.$refs['emailInput'].classList.add('is-invalid')\n        return this.$message.error('请输入正确的邮箱地址')\n      }\n\n      this.$http.post('user/exists', qs.stringify({ email: this.email }),).then(response => {\n        if (!response.success) {\n          this.error = true\n          this.$refs['emailInput'].classList.add('is-invalid')\n          return this.$message.error('邮箱已经存在！')\n        }\n      })\n    },\n    showCaptcha () {\n      let captcha = new window.TencentCaptcha(\n        '2024993958',\n        res => {\n          if (res.ret === 0) {\n            this.ticket = res.ticket\n            this.randstr = res.randstr\n            this.submit()\n          } else {\n            return this.$message.error('请先完成验证！')\n          }\n        }\n      )\n      captcha.show()\n    },\n    async submit () {\n      if (!this.ticket) {\n        return this.$message.error('请先完成验证！')\n      }\n\n      try {\n        await this.attemptRegister(this.$data)\n        this.$message.warning('注册成功，请先验证你邮箱地址！')\n        this.$router.push({ name: 'home' })\n      } catch (e) {\n        if (e.status !== 422) {\n          this.$message.error('注册失败！')\n        }\n      }\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/modules/auth"}]}
{"map":"{\"version\":3,\"sources\":[\"/root/lockhash/web-app/node_modules/popper.js/dist/esm/popper.js\"],\"names\":[\"__webpack_require__\",\"r\",\"__webpack_exports__\",\"global\",\"isBrowser\",\"window\",\"document\",\"longerTimeoutBrowsers\",\"timeoutDuration\",\"i\",\"length\",\"navigator\",\"userAgent\",\"indexOf\",\"microtaskDebounce\",\"fn\",\"called\",\"Promise\",\"resolve\",\"then\",\"taskDebounce\",\"scheduled\",\"setTimeout\",\"supportsMicroTasks\",\"debounce\",\"isFunction\",\"functionToCheck\",\"getType\",\"toString\",\"call\",\"getStyleComputedProperty\",\"element\",\"property\",\"nodeType\",\"ownerDocument\",\"defaultView\",\"css\",\"getComputedStyle\",\"getParentNode\",\"nodeName\",\"parentNode\",\"host\",\"getScrollParent\",\"body\",\"_getStyleComputedProp\",\"overflow\",\"overflowX\",\"overflowY\",\"test\",\"isIE11\",\"MSInputMethodContext\",\"documentMode\",\"isIE10\",\"isIE\",\"version\",\"getOffsetParent\",\"documentElement\",\"noOffsetParent\",\"offsetParent\",\"nextElementSibling\",\"isOffsetContainer\",\"firstElementChild\",\"getRoot\",\"node\",\"findCommonOffsetParent\",\"element1\",\"element2\",\"order\",\"compareDocumentPosition\",\"Node\",\"DOCUMENT_POSITION_FOLLOWING\",\"start\",\"end\",\"range\",\"createRange\",\"setStart\",\"setEnd\",\"commonAncestorContainer\",\"contains\",\"element1root\",\"getScroll\",\"side\",\"arguments\",\"undefined\",\"upperSide\",\"html\",\"scrollingElement\",\"includeScroll\",\"rect\",\"subtract\",\"scrollTop\",\"scrollLeft\",\"modifier\",\"top\",\"bottom\",\"left\",\"right\",\"getBordersSize\",\"styles\",\"axis\",\"sideA\",\"sideB\",\"parseFloat\",\"getSize\",\"computedStyle\",\"Math\",\"max\",\"parseInt\",\"getWindowSizes\",\"height\",\"width\",\"classCallCheck\",\"instance\",\"Constructor\",\"TypeError\",\"createClass\",\"defineProperties\",\"target\",\"props\",\"descriptor\",\"enumerable\",\"configurable\",\"writable\",\"Object\",\"defineProperty\",\"key\",\"protoProps\",\"staticProps\",\"prototype\",\"obj\",\"value\",\"_extends\",\"assign\",\"source\",\"hasOwnProperty\",\"getClientRect\",\"offsets\",\"getBoundingClientRect\",\"e\",\"result\",\"sizes\",\"clientWidth\",\"clientHeight\",\"horizScrollbar\",\"offsetWidth\",\"vertScrollbar\",\"offsetHeight\",\"getOffsetRectRelativeToArbitraryNode\",\"children\",\"parent\",\"fixedPosition\",\"isHTML\",\"childrenRect\",\"parentRect\",\"scrollParent\",\"borderTopWidth\",\"borderLeftWidth\",\"marginTop\",\"marginLeft\",\"getViewportOffsetRectRelativeToArtbitraryNode\",\"excludeScroll\",\"relativeOffset\",\"innerWidth\",\"innerHeight\",\"offset\",\"isFixed\",\"getFixedPositionOffsetParent\",\"parentElement\",\"el\",\"getBoundaries\",\"popper\",\"reference\",\"padding\",\"boundariesElement\",\"boundaries\",\"boundariesNode\",\"_getWindowSizes\",\"isPaddingNumber\",\"getArea\",\"_ref\",\"computeAutoPlacement\",\"placement\",\"refRect\",\"rects\",\"sortedAreas\",\"keys\",\"map\",\"area\",\"sort\",\"a\",\"b\",\"filteredAreas\",\"filter\",\"_ref2\",\"computedPlacement\",\"variation\",\"split\",\"getReferenceOffsets\",\"state\",\"commonOffsetParent\",\"getOuterSizes\",\"x\",\"marginBottom\",\"y\",\"marginRight\",\"getOppositePlacement\",\"hash\",\"replace\",\"matched\",\"getPopperOffsets\",\"referenceOffsets\",\"popperRect\",\"popperOffsets\",\"isHoriz\",\"mainSide\",\"secondarySide\",\"measurement\",\"secondaryMeasurement\",\"find\",\"arr\",\"check\",\"Array\",\"findIndex\",\"prop\",\"cur\",\"match\",\"runModifiers\",\"modifiers\",\"data\",\"ends\",\"modifiersToRun\",\"slice\",\"forEach\",\"console\",\"warn\",\"enabled\",\"update\",\"this\",\"isDestroyed\",\"arrowStyles\",\"attributes\",\"flipped\",\"options\",\"positionFixed\",\"flip\",\"originalPlacement\",\"position\",\"isCreated\",\"onUpdate\",\"onCreate\",\"isModifierEnabled\",\"modifierName\",\"some\",\"name\",\"getSupportedPropertyName\",\"prefixes\",\"upperProp\",\"charAt\",\"toUpperCase\",\"prefix\",\"toCheck\",\"style\",\"destroy\",\"removeAttribute\",\"willChange\",\"disableEventListeners\",\"removeOnDestroy\",\"removeChild\",\"getWindow\",\"attachToScrollParents\",\"event\",\"callback\",\"scrollParents\",\"isBody\",\"addEventListener\",\"passive\",\"push\",\"setupEventListeners\",\"updateBound\",\"scrollElement\",\"eventsEnabled\",\"enableEventListeners\",\"scheduleUpdate\",\"removeEventListeners\",\"removeEventListener\",\"cancelAnimationFrame\",\"isNumeric\",\"n\",\"isNaN\",\"isFinite\",\"setStyles\",\"unit\",\"setAttributes\",\"setAttribute\",\"applyStyle\",\"arrowElement\",\"applyStyleOnLoad\",\"modifierOptions\",\"getRoundedOffsets\",\"shouldRound\",\"_data$offsets\",\"round\",\"floor\",\"noRound\",\"v\",\"referenceWidth\",\"popperWidth\",\"isVertical\",\"isVariation\",\"sameWidthParity\",\"bothOddWidth\",\"horizontalToInteger\",\"verticalToInteger\",\"isFirefox\",\"computeStyle\",\"legacyGpuAccelerationOption\",\"gpuAcceleration\",\"offsetParentRect\",\"devicePixelRatio\",\"prefixedProperty\",\"invertTop\",\"invertLeft\",\"x-placement\",\"arrow\",\"isModifierRequired\",\"requestingName\",\"requestedName\",\"requesting\",\"isRequired\",\"_requesting\",\"requested\",\"_data$offsets$arrow\",\"querySelector\",\"len\",\"sideCapitalized\",\"toLowerCase\",\"altSide\",\"opSide\",\"arrowElementSize\",\"center\",\"popperMarginSide\",\"popperBorderSide\",\"sideValue\",\"min\",\"getOppositeVariation\",\"placements\",\"validPlacements\",\"clockwise\",\"counter\",\"index\",\"concat\",\"reverse\",\"BEHAVIORS\",\"FLIP\",\"CLOCKWISE\",\"COUNTERCLOCKWISE\",\"placementOpposite\",\"flipOrder\",\"behavior\",\"step\",\"refOffsets\",\"overlapsRef\",\"overflowsLeft\",\"overflowsRight\",\"overflowsTop\",\"overflowsBottom\",\"overflowsBoundaries\",\"flippedVariation\",\"flipVariations\",\"keepTogether\",\"toValue\",\"str\",\"size\",\"parseOffset\",\"basePlacement\",\"useHeight\",\"fragments\",\"frag\",\"trim\",\"divider\",\"search\",\"splitRegex\",\"ops\",\"op\",\"mergeWithPrevious\",\"reduce\",\"index2\",\"preventOverflow\",\"transformProp\",\"popperStyles\",\"transform\",\"priority\",\"primary\",\"escapeWithReference\",\"secondary\",\"shift\",\"shiftvariation\",\"shiftOffsets\",\"hide\",\"bound\",\"inner\",\"subtractLength\",\"onLoad\",\"Defaults\",\"Popper\",\"_this\",\"requestAnimationFrame\",\"bind\",\"jquery\",\"Utils\",\"PopperUtils\"],\"mappings\":\"gHAAAA,EAAAC,EAAAC,GAAA,SAAAC,GA4BA;;;;;;;;;;;;;;;;;;;;;;;;;AAJA,IAAAC,EAAA,qBAAAC,QAAA,qBAAAC,SAEAC,EAAA,CAAA,OAAA,UAAA,WACAC,EAAA,EACAC,EAAA,EAAeA,EAAAF,EAAAG,OAAkCD,GAAA,EACjD,GAAAL,GAAAO,UAAAC,UAAAC,QAAAN,EAAAE,KAAA,EAAA,CACAD,EAAA,EACA,MAIA,SAAAM,EAAAC,GACA,IAAAC,GAAA,EACA,OAAA,WACAA,IAGAA,GAAA,EACAX,OAAAY,QAAAC,UAAAC,KAAA,WACAH,GAAA,EACAD,QAKA,SAAAK,EAAAL,GACA,IAAAM,GAAA,EACA,OAAA,WACAA,IACAA,GAAA,EACAC,WAAA,WACAD,GAAA,EACAN,KACOP,KAKP,IAAAe,EAAAnB,GAAAC,OAAAY,QAWAO,EAAAD,EAAAT,EAAAM,EASA,SAAAK,EAAAC,GACA,IAAAC,EAAA,GACA,OAAAD,GAAA,sBAAAC,EAAAC,SAAAC,KAAAH,GAUA,SAAAI,EAAAC,EAAAC,GACA,GAAA,IAAAD,EAAAE,SACA,MAAA,GAGA,IAAA5B,EAAA0B,EAAAG,cAAAC,YACAC,EAAA/B,EAAAgC,iBAAAN,EAAA,MACA,OAAAC,EAAAI,EAAAJ,GAAAI,EAUA,SAAAE,EAAAP,GACA,MAAA,SAAAA,EAAAQ,SACAR,EAEAA,EAAAS,YAAAT,EAAAU,KAUA,SAAAC,EAAAX,GAEA,IAAAA,EACA,OAAAzB,SAAAqC,KAGA,OAAAZ,EAAAQ,UACA,IAAA,OACA,IAAA,OACA,OAAAR,EAAAG,cAAAS,KACA,IAAA,YACA,OAAAZ,EAAAY,KAKA,IAAAC,EAAAd,EAAAC,GACAc,EAAAD,EAAAC,SACAC,EAAAF,EAAAE,UACAC,EAAAH,EAAAG,UAEA,MAAA,wBAAAC,KAAAH,EAAAE,EAAAD,GACAf,EAGAW,EAAAJ,EAAAP,IAGA,IAAAkB,EAAA7C,MAAAC,OAAA6C,uBAAA5C,SAAA6C,cACAC,EAAAhD,GAAA,UAAA4C,KAAArC,UAAAC,WASA,SAAAyC,EAAAC,GACA,OAAA,KAAAA,EACAL,EAEA,KAAAK,EACAF,EAEAH,GAAAG,EAUA,SAAAG,EAAAxB,GACA,IAAAA,EACA,OAAAzB,SAAAkD,gBAGA,IAAAC,EAAAJ,EAAA,IAAA/C,SAAAqC,KAAA,KAGAe,EAAA3B,EAAA2B,cAAA,KAEA,MAAAA,IAAAD,GAAA1B,EAAA4B,mBACAD,GAAA3B,EAAAA,EAAA4B,oBAAAD,aAGA,IAAAnB,EAAAmB,GAAAA,EAAAnB,SAEA,OAAAA,GAAA,SAAAA,GAAA,SAAAA,GAMA,IAAA,CAAA,KAAA,KAAA,SAAA1B,QAAA6C,EAAAnB,WAAA,WAAAT,EAAA4B,EAAA,YACAH,EAAAG,GAGAA,EATA3B,EAAAA,EAAAG,cAAAsB,gBAAAlD,SAAAkD,gBAYA,SAAAI,EAAA7B,GACA,IAAAQ,EAAAR,EAAAQ,SAEA,MAAA,SAAAA,IAGA,SAAAA,GAAAgB,EAAAxB,EAAA8B,qBAAA9B,GAUA,SAAA+B,EAAAC,GACA,OAAA,OAAAA,EAAAvB,WACAsB,EAAAC,EAAAvB,YAGAuB,EAWA,SAAAC,EAAAC,EAAAC,GAEA,IAAAD,IAAAA,EAAAhC,WAAAiC,IAAAA,EAAAjC,SACA,OAAA3B,SAAAkD,gBAIA,IAAAW,EAAAF,EAAAG,wBAAAF,GAAAG,KAAAC,4BACAC,EAAAJ,EAAAF,EAAAC,EACAM,EAAAL,EAAAD,EAAAD,EAGAQ,EAAAnE,SAAAoE,cACAD,EAAAE,SAAAJ,EAAA,GACAE,EAAAG,OAAAJ,EAAA,GACA,IAAAK,EAAAJ,EAAAI,wBAIA,GAAAZ,IAAAY,GAAAX,IAAAW,GAAAN,EAAAO,SAAAN,GACA,OAAAZ,EAAAiB,GACAA,EAGAtB,EAAAsB,GAIA,IAAAE,EAAAjB,EAAAG,GACA,OAAAc,EAAAtC,KACAuB,EAAAe,EAAAtC,KAAAyB,GAEAF,EAAAC,EAAAH,EAAAI,GAAAzB,MAYA,SAAAuC,EAAAjD,GACA,IAAAkD,EAAAC,UAAAxE,OAAA,QAAAyE,IAAAD,UAAA,GAAAA,UAAA,GAAA,MAEAE,EAAA,QAAAH,EAAA,YAAA,aACA1C,EAAAR,EAAAQ,SAEA,GAAA,SAAAA,GAAA,SAAAA,EAAA,CACA,IAAA8C,EAAAtD,EAAAG,cAAAsB,gBACA8B,EAAAvD,EAAAG,cAAAoD,kBAAAD,EACA,OAAAC,EAAAF,GAGA,OAAArD,EAAAqD,GAYA,SAAAG,EAAAC,EAAAzD,GACA,IAAA0D,EAAAP,UAAAxE,OAAA,QAAAyE,IAAAD,UAAA,IAAAA,UAAA,GAEAQ,EAAAV,EAAAjD,EAAA,OACA4D,EAAAX,EAAAjD,EAAA,QACA6D,EAAAH,GAAA,EAAA,EAKA,OAJAD,EAAAK,KAAAH,EAAAE,EACAJ,EAAAM,QAAAJ,EAAAE,EACAJ,EAAAO,MAAAJ,EAAAC,EACAJ,EAAAQ,OAAAL,EAAAC,EACAJ,EAaA,SAAAS,EAAAC,EAAAC,GACA,IAAAC,EAAA,MAAAD,EAAA,OAAA,MACAE,EAAA,SAAAD,EAAA,QAAA,SAEA,OAAAE,WAAAJ,EAAA,SAAAE,EAAA,SAAA,IAAAE,WAAAJ,EAAA,SAAAG,EAAA,SAAA,IAGA,SAAAE,EAAAJ,EAAAxD,EAAA0C,EAAAmB,GACA,OAAAC,KAAAC,IAAA/D,EAAA,SAAAwD,GAAAxD,EAAA,SAAAwD,GAAAd,EAAA,SAAAc,GAAAd,EAAA,SAAAc,GAAAd,EAAA,SAAAc,GAAA9C,EAAA,IAAAsD,SAAAtB,EAAA,SAAAc,IAAAQ,SAAAH,EAAA,UAAA,WAAAL,EAAA,MAAA,UAAAQ,SAAAH,EAAA,UAAA,WAAAL,EAAA,SAAA,WAAA,GAGA,SAAAS,EAAAtG,GACA,IAAAqC,EAAArC,EAAAqC,KACA0C,EAAA/E,EAAAkD,gBACAgD,EAAAnD,EAAA,KAAAhB,iBAAAgD,GAEA,MAAA,CACAwB,OAAAN,EAAA,SAAA5D,EAAA0C,EAAAmB,GACAM,MAAAP,EAAA,QAAA5D,EAAA0C,EAAAmB,IAIA,IAAAO,EAAA,SAAAC,EAAAC,GACA,KAAAD,aAAAC,GACA,MAAA,IAAAC,UAAA,sCAIAC,EAAA,WACA,SAAAC,EAAAC,EAAAC,GACA,IAAA,IAAA7G,EAAA,EAAmBA,EAAA6G,EAAA5G,OAAkBD,IAAA,CACrC,IAAA8G,EAAAD,EAAA7G,GACA8G,EAAAC,WAAAD,EAAAC,aAAA,EACAD,EAAAE,cAAA,EACA,UAAAF,IAAAA,EAAAG,UAAA,GACAC,OAAAC,eAAAP,EAAAE,EAAAM,IAAAN,IAIA,OAAA,SAAAN,EAAAa,EAAAC,GAGA,OAFAD,GAAAV,EAAAH,EAAAe,UAAAF,GACAC,GAAAX,EAAAH,EAAAc,GACAd,GAdA,GAsBAW,EAAA,SAAAK,EAAAJ,EAAAK,GAYA,OAXAL,KAAAI,EACAN,OAAAC,eAAAK,EAAAJ,EAAA,CACAK,MAAAA,EACAV,YAAA,EACAC,cAAA,EACAC,UAAA,IAGAO,EAAAJ,GAAAK,EAGAD,GAGAE,EAAAR,OAAAS,QAAA,SAAAf,GACA,IAAA,IAAA5G,EAAA,EAAiBA,EAAAyE,UAAAxE,OAAsBD,IAAA,CACvC,IAAA4H,EAAAnD,UAAAzE,GAEA,IAAA,IAAAoH,KAAAQ,EACAV,OAAAK,UAAAM,eAAAzG,KAAAwG,EAAAR,KACAR,EAAAQ,GAAAQ,EAAAR,IAKA,OAAAR,GAUA,SAAAkB,EAAAC,GACA,OAAAL,EAAA,GAAoBK,EAAA,CACpBxC,MAAAwC,EAAAzC,KAAAyC,EAAA1B,MACAhB,OAAA0C,EAAA3C,IAAA2C,EAAA3B,SAWA,SAAA4B,EAAA1G,GACA,IAAAyD,EAAA,GAKA,IACA,GAAAnC,EAAA,IAAA,CACAmC,EAAAzD,EAAA0G,wBACA,IAAA/C,EAAAV,EAAAjD,EAAA,OACA4D,EAAAX,EAAAjD,EAAA,QACAyD,EAAAK,KAAAH,EACAF,EAAAO,MAAAJ,EACAH,EAAAM,QAAAJ,EACAF,EAAAQ,OAAAL,OAEAH,EAAAzD,EAAA0G,wBAEG,MAAAC,IAEH,IAAAC,EAAA,CACA5C,KAAAP,EAAAO,KACAF,IAAAL,EAAAK,IACAiB,MAAAtB,EAAAQ,MAAAR,EAAAO,KACAc,OAAArB,EAAAM,OAAAN,EAAAK,KAIA+C,EAAA,SAAA7G,EAAAQ,SAAAqE,EAAA7E,EAAAG,eAAA,GACA4E,EAAA8B,EAAA9B,OAAA/E,EAAA8G,aAAAF,EAAA3C,MAAA2C,EAAA5C,KACAc,EAAA+B,EAAA/B,QAAA9E,EAAA+G,cAAAH,EAAA7C,OAAA6C,EAAA9C,IAEAkD,EAAAhH,EAAAiH,YAAAlC,EACAmC,EAAAlH,EAAAmH,aAAArC,EAIA,GAAAkC,GAAAE,EAAA,CACA,IAAA/C,EAAApE,EAAAC,GACAgH,GAAA9C,EAAAC,EAAA,KACA+C,GAAAhD,EAAAC,EAAA,KAEAyC,EAAA7B,OAAAiC,EACAJ,EAAA9B,QAAAoC,EAGA,OAAAV,EAAAI,GAGA,SAAAQ,EAAAC,EAAAC,GACA,IAAAC,EAAApE,UAAAxE,OAAA,QAAAyE,IAAAD,UAAA,IAAAA,UAAA,GAEA9B,EAAAC,EAAA,IACAkG,EAAA,SAAAF,EAAA9G,SACAiH,EAAAf,EAAAW,GACAK,EAAAhB,EAAAY,GACAK,EAAAhH,EAAA0G,GAEAlD,EAAApE,EAAAuH,GACAM,EAAArD,WAAAJ,EAAAyD,eAAA,IACAC,EAAAtD,WAAAJ,EAAA0D,gBAAA,IAGAN,GAAAC,IACAE,EAAA5D,IAAAY,KAAAC,IAAA+C,EAAA5D,IAAA,GACA4D,EAAA1D,KAAAU,KAAAC,IAAA+C,EAAA1D,KAAA,IAEA,IAAAyC,EAAAD,EAAA,CACA1C,IAAA2D,EAAA3D,IAAA4D,EAAA5D,IAAA8D,EACA5D,KAAAyD,EAAAzD,KAAA0D,EAAA1D,KAAA6D,EACA9C,MAAA0C,EAAA1C,MACAD,OAAA2C,EAAA3C,SASA,GAPA2B,EAAAqB,UAAA,EACArB,EAAAsB,WAAA,GAMA1G,GAAAmG,EAAA,CACA,IAAAM,EAAAvD,WAAAJ,EAAA2D,UAAA,IACAC,EAAAxD,WAAAJ,EAAA4D,WAAA,IAEAtB,EAAA3C,KAAA8D,EAAAE,EACArB,EAAA1C,QAAA6D,EAAAE,EACArB,EAAAzC,MAAA6D,EAAAE,EACAtB,EAAAxC,OAAA4D,EAAAE,EAGAtB,EAAAqB,UAAAA,EACArB,EAAAsB,WAAAA,EAOA,OAJA1G,IAAAkG,EAAAD,EAAAvE,SAAA4E,GAAAL,IAAAK,GAAA,SAAAA,EAAAnH,YACAiG,EAAAjD,EAAAiD,EAAAa,IAGAb,EAGA,SAAAuB,EAAAhI,GACA,IAAAiI,EAAA9E,UAAAxE,OAAA,QAAAyE,IAAAD,UAAA,IAAAA,UAAA,GAEAG,EAAAtD,EAAAG,cAAAsB,gBACAyG,EAAAd,EAAApH,EAAAsD,GACAyB,EAAAL,KAAAC,IAAArB,EAAAwD,YAAAxI,OAAA6J,YAAA,GACArD,EAAAJ,KAAAC,IAAArB,EAAAyD,aAAAzI,OAAA8J,aAAA,GAEAzE,EAAAsE,EAAA,EAAAhF,EAAAK,GACAM,EAAAqE,EAAA,EAAAhF,EAAAK,EAAA,QAEA+E,EAAA,CACAvE,IAAAH,EAAAuE,EAAApE,IAAAoE,EAAAJ,UACA9D,KAAAJ,EAAAsE,EAAAlE,KAAAkE,EAAAH,WACAhD,MAAAA,EACAD,OAAAA,GAGA,OAAA0B,EAAA6B,GAWA,SAAAC,EAAAtI,GACA,IAAAQ,EAAAR,EAAAQ,SACA,GAAA,SAAAA,GAAA,SAAAA,EACA,OAAA,EAEA,GAAA,UAAAT,EAAAC,EAAA,YACA,OAAA,EAEA,IAAAS,EAAAF,EAAAP,GACA,QAAAS,GAGA6H,EAAA7H,GAWA,SAAA8H,EAAAvI,GAEA,IAAAA,IAAAA,EAAAwI,eAAAlH,IACA,OAAA/C,SAAAkD,gBAEA,IAAAgH,EAAAzI,EAAAwI,cACA,MAAAC,GAAA,SAAA1I,EAAA0I,EAAA,aACAA,EAAAA,EAAAD,cAEA,OAAAC,GAAAlK,SAAAkD,gBAcA,SAAAiH,EAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAAvB,EAAApE,UAAAxE,OAAA,QAAAyE,IAAAD,UAAA,IAAAA,UAAA,GAIA4F,EAAA,CAAoBjF,IAAA,EAAAE,KAAA,GACpBrC,EAAA4F,EAAAgB,EAAAI,GAAA1G,EAAA0G,EAAAC,GAGA,GAAA,aAAAE,EACAC,EAAAf,EAAArG,EAAA4F,OACG,CAEH,IAAAyB,OAAA,EACA,iBAAAF,GACAE,EAAArI,EAAAJ,EAAAqI,IACA,SAAAI,EAAAxI,WACAwI,EAAAL,EAAAxI,cAAAsB,kBAGAuH,EADK,WAAAF,EACLH,EAAAxI,cAAAsB,gBAEAqH,EAGA,IAAArC,EAAAW,EAAA4B,EAAArH,EAAA4F,GAGA,GAAA,SAAAyB,EAAAxI,UAAA8H,EAAA3G,GAWAoH,EAAAtC,MAXA,CACA,IAAAwC,EAAApE,EAAA8D,EAAAxI,eACA2E,EAAAmE,EAAAnE,OACAC,EAAAkE,EAAAlE,MAEAgE,EAAAjF,KAAA2C,EAAA3C,IAAA2C,EAAAqB,UACAiB,EAAAhF,OAAAe,EAAA2B,EAAA3C,IACAiF,EAAA/E,MAAAyC,EAAAzC,KAAAyC,EAAAsB,WACAgB,EAAA9E,MAAAc,EAAA0B,EAAAzC,MAQA6E,EAAAA,GAAA,EACA,IAAAK,EAAA,kBAAAL,EAMA,OALAE,EAAA/E,MAAAkF,EAAAL,EAAAA,EAAA7E,MAAA,EACA+E,EAAAjF,KAAAoF,EAAAL,EAAAA,EAAA/E,KAAA,EACAiF,EAAA9E,OAAAiF,EAAAL,EAAAA,EAAA5E,OAAA,EACA8E,EAAAhF,QAAAmF,EAAAL,EAAAA,EAAA9E,QAAA,EAEAgF,EAGA,SAAAI,EAAAC,GACA,IAAArE,EAAAqE,EAAArE,MACAD,EAAAsE,EAAAtE,OAEA,OAAAC,EAAAD,EAYA,SAAAuE,EAAAC,EAAAC,EAAAZ,EAAAC,EAAAE,GACA,IAAAD,EAAA1F,UAAAxE,OAAA,QAAAyE,IAAAD,UAAA,GAAAA,UAAA,GAAA,EAEA,IAAA,IAAAmG,EAAAxK,QAAA,QACA,OAAAwK,EAGA,IAAAP,EAAAL,EAAAC,EAAAC,EAAAC,EAAAC,GAEAU,EAAA,CACA1F,IAAA,CACAiB,MAAAgE,EAAAhE,MACAD,OAAAyE,EAAAzF,IAAAiF,EAAAjF,KAEAG,MAAA,CACAc,MAAAgE,EAAA9E,MAAAsF,EAAAtF,MACAa,OAAAiE,EAAAjE,QAEAf,OAAA,CACAgB,MAAAgE,EAAAhE,MACAD,OAAAiE,EAAAhF,OAAAwF,EAAAxF,QAEAC,KAAA,CACAe,MAAAwE,EAAAvF,KAAA+E,EAAA/E,KACAc,OAAAiE,EAAAjE,SAIA2E,EAAA7D,OAAA8D,KAAAF,GAAAG,IAAA,SAAA7D,GACA,OAAAM,EAAA,CACAN,IAAAA,GACK0D,EAAA1D,GAAA,CACL8D,KAAAT,EAAAK,EAAA1D,QAEG+D,KAAA,SAAAC,EAAAC,GACH,OAAAA,EAAAH,KAAAE,EAAAF,OAGAI,EAAAP,EAAAQ,OAAA,SAAAC,GACA,IAAAnF,EAAAmF,EAAAnF,MACAD,EAAAoF,EAAApF,OACA,OAAAC,GAAA4D,EAAA7B,aAAAhC,GAAA6D,EAAA5B,eAGAoD,EAAAH,EAAArL,OAAA,EAAAqL,EAAA,GAAAlE,IAAA2D,EAAA,GAAA3D,IAEAsE,EAAAd,EAAAe,MAAA,KAAA,GAEA,OAAAF,GAAAC,EAAA,IAAAA,EAAA,IAaA,SAAAE,EAAAC,EAAA5B,EAAAC,GACA,IAAArB,EAAApE,UAAAxE,OAAA,QAAAyE,IAAAD,UAAA,GAAAA,UAAA,GAAA,KAEAqH,EAAAjD,EAAAgB,EAAAI,GAAA1G,EAAA0G,EAAAC,GACA,OAAAxB,EAAAwB,EAAA4B,EAAAjD,GAUA,SAAAkD,EAAAzK,GACA,IAAA1B,EAAA0B,EAAAG,cAAAC,YACA+D,EAAA7F,EAAAgC,iBAAAN,GACA0K,EAAAnG,WAAAJ,EAAA2D,WAAA,GAAAvD,WAAAJ,EAAAwG,cAAA,GACAC,EAAArG,WAAAJ,EAAA4D,YAAA,GAAAxD,WAAAJ,EAAA0G,aAAA,GACAjE,EAAA,CACA7B,MAAA/E,EAAAiH,YAAA2D,EACA9F,OAAA9E,EAAAmH,aAAAuD,GAEA,OAAA9D,EAUA,SAAAkE,EAAAxB,GACA,IAAAyB,EAAA,CAAc/G,KAAA,QAAAC,MAAA,OAAAF,OAAA,MAAAD,IAAA,UACd,OAAAwF,EAAA0B,QAAA,yBAAA,SAAAC,GACA,OAAAF,EAAAE,KAcA,SAAAC,EAAAvC,EAAAwC,EAAA7B,GACAA,EAAAA,EAAAe,MAAA,KAAA,GAGA,IAAAe,EAAAX,EAAA9B,GAGA0C,EAAA,CACAtG,MAAAqG,EAAArG,MACAD,OAAAsG,EAAAtG,QAIAwG,GAAA,IAAA,CAAA,QAAA,QAAAxM,QAAAwK,GACAiC,EAAAD,EAAA,MAAA,OACAE,EAAAF,EAAA,OAAA,MACAG,EAAAH,EAAA,SAAA,QACAI,EAAAJ,EAAA,QAAA,SASA,OAPAD,EAAAE,GAAAJ,EAAAI,GAAAJ,EAAAM,GAAA,EAAAL,EAAAK,GAAA,EAEAJ,EAAAG,GADAlC,IAAAkC,EACAL,EAAAK,GAAAJ,EAAAM,GAEAP,EAAAL,EAAAU,IAGAH,EAYA,SAAAM,EAAAC,EAAAC,GAEA,OAAAC,MAAA7F,UAAA0F,KACAC,EAAAD,KAAAE,GAIAD,EAAA3B,OAAA4B,GAAA,GAYA,SAAAE,EAAAH,EAAAI,EAAA7F,GAEA,GAAA2F,MAAA7F,UAAA8F,UACA,OAAAH,EAAAG,UAAA,SAAAE,GACA,OAAAA,EAAAD,KAAA7F,IAKA,IAAA+F,EAAAP,EAAAC,EAAA,SAAA1F,GACA,OAAAA,EAAA8F,KAAA7F,IAEA,OAAAyF,EAAA9M,QAAAoN,GAaA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAAC,OAAAnJ,IAAAkJ,EAAAF,EAAAA,EAAAI,MAAA,EAAAT,EAAAK,EAAA,OAAAE,IAmBA,OAjBAC,EAAAE,QAAA,SAAA5I,GACAA,EAAA,aAEA6I,QAAAC,KAAA,yDAEA,IAAA3N,EAAA6E,EAAA,aAAAA,EAAA7E,GACA6E,EAAA+I,SAAAlN,EAAAV,KAIAqN,EAAA5F,QAAAkC,OAAAnC,EAAA6F,EAAA5F,QAAAkC,QACA0D,EAAA5F,QAAAmC,UAAApC,EAAA6F,EAAA5F,QAAAmC,WAEAyD,EAAArN,EAAAqN,EAAAxI,MAIAwI,EAUA,SAAAQ,IAEA,IAAAC,KAAAvC,MAAAwC,YAAA,CAIA,IAAAV,EAAA,CACApH,SAAA6H,KACA3I,OAAA,GACA6I,YAAA,GACAC,WAAA,GACAC,SAAA,EACAzG,QAAA,IAIA4F,EAAA5F,QAAAmC,UAAA0B,EAAAwC,KAAAvC,MAAAuC,KAAAnE,OAAAmE,KAAAlE,UAAAkE,KAAAK,QAAAC,eAKAf,EAAA/C,UAAAD,EAAAyD,KAAAK,QAAA7D,UAAA+C,EAAA5F,QAAAmC,UAAAkE,KAAAnE,OAAAmE,KAAAlE,UAAAkE,KAAAK,QAAAf,UAAAiB,KAAAvE,kBAAAgE,KAAAK,QAAAf,UAAAiB,KAAAxE,SAGAwD,EAAAiB,kBAAAjB,EAAA/C,UAEA+C,EAAAe,cAAAN,KAAAK,QAAAC,cAGAf,EAAA5F,QAAAkC,OAAAuC,EAAA4B,KAAAnE,OAAA0D,EAAA5F,QAAAmC,UAAAyD,EAAA/C,WAEA+C,EAAA5F,QAAAkC,OAAA4E,SAAAT,KAAAK,QAAAC,cAAA,QAAA,WAGAf,EAAAF,EAAAW,KAAAV,UAAAC,GAIAS,KAAAvC,MAAAiD,UAIAV,KAAAK,QAAAM,SAAApB,IAHAS,KAAAvC,MAAAiD,WAAA,EACAV,KAAAK,QAAAO,SAAArB,KAYA,SAAAsB,EAAAvB,EAAAwB,GACA,OAAAxB,EAAAyB,KAAA,SAAAzE,GACA,IAAA0E,EAAA1E,EAAA0E,KACAlB,EAAAxD,EAAAwD,QACA,OAAAA,GAAAkB,IAAAF,IAWA,SAAAG,EAAA9N,GAIA,IAHA,IAAA+N,EAAA,EAAA,EAAA,KAAA,SAAA,MAAA,KACAC,EAAAhO,EAAAiO,OAAA,GAAAC,cAAAlO,EAAAuM,MAAA,GAEA9N,EAAA,EAAiBA,EAAAsP,EAAArP,OAAqBD,IAAA,CACtC,IAAA0P,EAAAJ,EAAAtP,GACA2P,EAAAD,EAAA,GAAAA,EAAAH,EAAAhO,EACA,GAAA,qBAAA1B,SAAAqC,KAAA0N,MAAAD,GACA,OAAAA,EAGA,OAAA,KAQA,SAAAE,IAsBA,OArBAzB,KAAAvC,MAAAwC,aAAA,EAGAY,EAAAb,KAAAV,UAAA,gBACAU,KAAAnE,OAAA6F,gBAAA,eACA1B,KAAAnE,OAAA2F,MAAAf,SAAA,GACAT,KAAAnE,OAAA2F,MAAAxK,IAAA,GACAgJ,KAAAnE,OAAA2F,MAAAtK,KAAA,GACA8I,KAAAnE,OAAA2F,MAAArK,MAAA,GACA6I,KAAAnE,OAAA2F,MAAAvK,OAAA,GACA+I,KAAAnE,OAAA2F,MAAAG,WAAA,GACA3B,KAAAnE,OAAA2F,MAAAP,EAAA,cAAA,IAGAjB,KAAA4B,wBAIA5B,KAAAK,QAAAwB,iBACA7B,KAAAnE,OAAAlI,WAAAmO,YAAA9B,KAAAnE,QAEAmE,KAQA,SAAA+B,EAAA7O,GACA,IAAAG,EAAAH,EAAAG,cACA,OAAAA,EAAAA,EAAAC,YAAA9B,OAGA,SAAAwQ,EAAAnH,EAAAoH,EAAAC,EAAAC,GACA,IAAAC,EAAA,SAAAvH,EAAAnH,SACA8E,EAAA4J,EAAAvH,EAAAxH,cAAAC,YAAAuH,EACArC,EAAA6J,iBAAAJ,EAAAC,EAAA,CAA4CI,SAAA,IAE5CF,GACAJ,EAAAnO,EAAA2E,EAAA7E,YAAAsO,EAAAC,EAAAC,GAEAA,EAAAI,KAAA/J,GASA,SAAAgK,EAAA1G,EAAAuE,EAAA5C,EAAAgF,GAEAhF,EAAAgF,YAAAA,EACAV,EAAAjG,GAAAuG,iBAAA,SAAA5E,EAAAgF,YAAA,CAAsEH,SAAA,IAGtE,IAAAI,EAAA7O,EAAAiI,GAKA,OAJAkG,EAAAU,EAAA,SAAAjF,EAAAgF,YAAAhF,EAAA0E,eACA1E,EAAAiF,cAAAA,EACAjF,EAAAkF,eAAA,EAEAlF,EASA,SAAAmF,IACA5C,KAAAvC,MAAAkF,gBACA3C,KAAAvC,MAAA+E,EAAAxC,KAAAlE,UAAAkE,KAAAK,QAAAL,KAAAvC,MAAAuC,KAAA6C,iBAUA,SAAAC,GAAAhH,EAAA2B,GAcA,OAZAsE,EAAAjG,GAAAiH,oBAAA,SAAAtF,EAAAgF,aAGAhF,EAAA0E,cAAAxC,QAAA,SAAAnH,GACAA,EAAAuK,oBAAA,SAAAtF,EAAAgF,eAIAhF,EAAAgF,YAAA,KACAhF,EAAA0E,cAAA,GACA1E,EAAAiF,cAAA,KACAjF,EAAAkF,eAAA,EACAlF,EAUA,SAAAmE,KACA5B,KAAAvC,MAAAkF,gBACAK,qBAAAhD,KAAA6C,gBACA7C,KAAAvC,MAAAqF,GAAA9C,KAAAlE,UAAAkE,KAAAvC,QAWA,SAAAwF,GAAAC,GACA,MAAA,KAAAA,IAAAC,MAAA1L,WAAAyL,KAAAE,SAAAF,GAWA,SAAAG,GAAAnQ,EAAAmE,GACAyB,OAAA8D,KAAAvF,GAAAsI,QAAA,SAAAT,GACA,IAAAoE,EAAA,IAEA,IAAA,CAAA,QAAA,SAAA,MAAA,QAAA,SAAA,QAAAtR,QAAAkN,IAAA+D,GAAA5L,EAAA6H,MACAoE,EAAA,MAEApQ,EAAAsO,MAAAtC,GAAA7H,EAAA6H,GAAAoE,IAYA,SAAAC,GAAArQ,EAAAiN,GACArH,OAAA8D,KAAAuD,GAAAR,QAAA,SAAAT,GACA,IAAA7F,EAAA8G,EAAAjB,IACA,IAAA7F,EACAnG,EAAAsQ,aAAAtE,EAAAiB,EAAAjB,IAEAhM,EAAAwO,gBAAAxC,KAcA,SAAAuE,GAAAlE,GAgBA,OAXA8D,GAAA9D,EAAApH,SAAA0D,OAAA0D,EAAAlI,QAIAkM,GAAAhE,EAAApH,SAAA0D,OAAA0D,EAAAY,YAGAZ,EAAAmE,cAAA5K,OAAA8D,KAAA2C,EAAAW,aAAArO,QACAwR,GAAA9D,EAAAmE,aAAAnE,EAAAW,aAGAX,EAaA,SAAAoE,GAAA7H,EAAAD,EAAAwE,EAAAuD,EAAAnG,GAEA,IAAAY,EAAAb,EAAAC,EAAA5B,EAAAC,EAAAuE,EAAAC,eAKA9D,EAAAD,EAAA8D,EAAA7D,UAAA6B,EAAAxC,EAAAC,EAAAuE,EAAAf,UAAAiB,KAAAvE,kBAAAqE,EAAAf,UAAAiB,KAAAxE,SAQA,OANAF,EAAA2H,aAAA,cAAAhH,GAIA6G,GAAAxH,EAAA,CAAqB4E,SAAAJ,EAAAC,cAAA,QAAA,aAErBD,EAsBA,SAAAwD,GAAAtE,EAAAuE,GACA,IAAAC,EAAAxE,EAAA5F,QACAkC,EAAAkI,EAAAlI,OACAC,EAAAiI,EAAAjI,UACAkI,EAAApM,KAAAoM,MACAC,EAAArM,KAAAqM,MAEAC,EAAA,SAAAC,GACA,OAAAA,GAGAC,EAAAJ,EAAAlI,EAAA7D,OACAoM,EAAAL,EAAAnI,EAAA5D,OAEAqM,GAAA,IAAA,CAAA,OAAA,SAAAtS,QAAAuN,EAAA/C,WACA+H,GAAA,IAAAhF,EAAA/C,UAAAxK,QAAA,KACAwS,EAAAJ,EAAA,IAAAC,EAAA,EACAI,EAAAL,EAAA,IAAA,GAAAC,EAAA,IAAA,EAEAK,EAAAZ,EAAAQ,GAAAC,GAAAC,EAAAR,EAAAC,EAAAC,EACAS,EAAAb,EAAAE,EAAAE,EAEA,MAAA,CACAhN,KAAAwN,EAAAD,IAAAF,GAAAT,EAAAjI,EAAA3E,KAAA,EAAA2E,EAAA3E,MACAF,IAAA2N,EAAA9I,EAAA7E,KACAC,OAAA0N,EAAA9I,EAAA5E,QACAE,MAAAuN,EAAA7I,EAAA1E,QAIA,IAAAyN,GAAArT,GAAA,WAAA4C,KAAArC,UAAAC,WASA,SAAA8S,GAAAtF,EAAAc,GACA,IAAAzC,EAAAyC,EAAAzC,EACAE,EAAAuC,EAAAvC,EACAjC,EAAA0D,EAAA5F,QAAAkC,OAIAiJ,EAAAjG,EAAAU,EAAApH,SAAAmH,UAAA,SAAAvI,GACA,MAAA,eAAAA,EAAAiK,OACG+D,qBACHzO,IAAAwO,GACAlF,QAAAC,KAAA,iIAEA,IAAAkF,OAAAzO,IAAAwO,EAAAA,EAAAzE,EAAA0E,gBAEAlQ,EAAAH,EAAA6K,EAAApH,SAAA0D,QACAmJ,EAAApL,EAAA/E,GAGAwC,EAAA,CACAoJ,SAAA5E,EAAA4E,UAGA9G,EAAAkK,GAAAtE,EAAA/N,OAAAyT,iBAAA,IAAAL,IAEArN,EAAA,WAAAqG,EAAA,MAAA,SACApG,EAAA,UAAAsG,EAAA,OAAA,QAKAoH,EAAAjE,EAAA,aAWA/J,OAAA,EACAF,OAAA,EAqBA,GAhBAA,EAJA,WAAAO,EAGA,SAAA1C,EAAAnB,UACAmB,EAAAoF,aAAAN,EAAA1C,QAEA+N,EAAAhN,OAAA2B,EAAA1C,OAGA0C,EAAA3C,IAIAE,EAFA,UAAAM,EACA,SAAA3C,EAAAnB,UACAmB,EAAAmF,YAAAL,EAAAxC,OAEA6N,EAAA/M,MAAA0B,EAAAxC,MAGAwC,EAAAzC,KAEA6N,GAAAG,EACA7N,EAAA6N,GAAA,eAAAhO,EAAA,OAAAF,EAAA,SACAK,EAAAE,GAAA,EACAF,EAAAG,GAAA,EACAH,EAAAsK,WAAA,gBACG,CAEH,IAAAwD,EAAA,WAAA5N,GAAA,EAAA,EACA6N,EAAA,UAAA5N,GAAA,EAAA,EACAH,EAAAE,GAAAP,EAAAmO,EACA9N,EAAAG,GAAAN,EAAAkO,EACA/N,EAAAsK,WAAApK,EAAA,KAAAC,EAIA,IAAA2I,EAAA,CACAkF,cAAA9F,EAAA/C,WAQA,OAJA+C,EAAAY,WAAA7G,EAAA,GAA+B6G,EAAAZ,EAAAY,YAC/BZ,EAAAlI,OAAAiC,EAAA,GAA2BjC,EAAAkI,EAAAlI,QAC3BkI,EAAAW,YAAA5G,EAAA,GAAgCiG,EAAA5F,QAAA2L,MAAA/F,EAAAW,aAEhCX,EAaA,SAAAgG,GAAAjG,EAAAkG,EAAAC,GACA,IAAAC,EAAA7G,EAAAS,EAAA,SAAAhD,GACA,IAAA0E,EAAA1E,EAAA0E,KACA,OAAAA,IAAAwE,IAGAG,IAAAD,GAAApG,EAAAyB,KAAA,SAAAhK,GACA,OAAAA,EAAAiK,OAAAyE,GAAA1O,EAAA+I,SAAA/I,EAAAzB,MAAAoQ,EAAApQ,QAGA,IAAAqQ,EAAA,CACA,IAAAC,EAAA,IAAAJ,EAAA,IACAK,EAAA,IAAAJ,EAAA,IACA7F,QAAAC,KAAAgG,EAAA,4BAAAD,EAAA,4DAAAA,EAAA,KAEA,OAAAD,EAUA,SAAAL,GAAA/F,EAAAc,GACA,IAAAyF,EAGA,IAAAP,GAAAhG,EAAApH,SAAAmH,UAAA,QAAA,gBACA,OAAAC,EAGA,IAAAmE,EAAArD,EAAAnN,QAGA,GAAA,kBAAAwQ,GAIA,GAHAA,EAAAnE,EAAApH,SAAA0D,OAAAkK,cAAArC,IAGAA,EACA,OAAAnE,OAKA,IAAAA,EAAApH,SAAA0D,OAAA5F,SAAAyN,GAEA,OADA9D,QAAAC,KAAA,iEACAN,EAIA,IAAA/C,EAAA+C,EAAA/C,UAAAe,MAAA,KAAA,GACAwG,EAAAxE,EAAA5F,QACAkC,EAAAkI,EAAAlI,OACAC,EAAAiI,EAAAjI,UAEAwI,GAAA,IAAA,CAAA,OAAA,SAAAtS,QAAAwK,GAEAwJ,EAAA1B,EAAA,SAAA,QACA2B,EAAA3B,EAAA,MAAA,OACAlO,EAAA6P,EAAAC,cACAC,EAAA7B,EAAA,OAAA,MACA8B,EAAA9B,EAAA,SAAA,QACA+B,EAAA1I,EAAA+F,GAAAsC,GAQAlK,EAAAsK,GAAAC,EAAAxK,EAAAzF,KACAmJ,EAAA5F,QAAAkC,OAAAzF,IAAAyF,EAAAzF,IAAA0F,EAAAsK,GAAAC,IAGAvK,EAAA1F,GAAAiQ,EAAAxK,EAAAuK,KACA7G,EAAA5F,QAAAkC,OAAAzF,IAAA0F,EAAA1F,GAAAiQ,EAAAxK,EAAAuK,IAEA7G,EAAA5F,QAAAkC,OAAAnC,EAAA6F,EAAA5F,QAAAkC,QAGA,IAAAyK,EAAAxK,EAAA1F,GAAA0F,EAAAkK,GAAA,EAAAK,EAAA,EAIA9S,EAAAN,EAAAsM,EAAApH,SAAA0D,QACA0K,EAAA9O,WAAAlE,EAAA,SAAA0S,GAAA,IACAO,EAAA/O,WAAAlE,EAAA,SAAA0S,EAAA,SAAA,IACAQ,EAAAH,EAAA/G,EAAA5F,QAAAkC,OAAAzF,GAAAmQ,EAAAC,EAQA,OALAC,EAAA7O,KAAAC,IAAAD,KAAA8O,IAAA7K,EAAAmK,GAAAK,EAAAI,GAAA,GAEAlH,EAAAmE,aAAAA,EACAnE,EAAA5F,QAAA2L,OAAAQ,EAAA,GAAgD/M,EAAA+M,EAAA1P,EAAAwB,KAAAoM,MAAAyC,IAAA1N,EAAA+M,EAAAK,EAAA,IAAAL,GAEhDvG,EAUA,SAAAoH,GAAArJ,GACA,MAAA,QAAAA,EACA,QACG,UAAAA,EACH,MAEAA,EAkCA,IAAAsJ,GAAA,CAAA,aAAA,OAAA,WAAA,YAAA,MAAA,UAAA,cAAA,QAAA,YAAA,aAAA,SAAA,eAAA,WAAA,OAAA,cAGAC,GAAAD,GAAAlH,MAAA,GAYA,SAAAoH,GAAAtK,GACA,IAAAuK,EAAA1Q,UAAAxE,OAAA,QAAAyE,IAAAD,UAAA,IAAAA,UAAA,GAEA2Q,EAAAH,GAAA7U,QAAAwK,GACAsC,EAAA+H,GAAAnH,MAAAsH,EAAA,GAAAC,OAAAJ,GAAAnH,MAAA,EAAAsH,IACA,OAAAD,EAAAjI,EAAAoI,UAAApI,EAGA,IAAAqI,GAAA,CACAC,KAAA,OACAC,UAAA,YACAC,iBAAA,oBAUA,SAAA/G,GAAAhB,EAAAc,GAEA,GAAAQ,EAAAtB,EAAApH,SAAAmH,UAAA,SACA,OAAAC,EAGA,GAAAA,EAAAa,SAAAb,EAAA/C,YAAA+C,EAAAiB,kBAEA,OAAAjB,EAGA,IAAAtD,EAAAL,EAAA2D,EAAApH,SAAA0D,OAAA0D,EAAApH,SAAA2D,UAAAuE,EAAAtE,QAAAsE,EAAArE,kBAAAuD,EAAAe,eAEA9D,EAAA+C,EAAA/C,UAAAe,MAAA,KAAA,GACAgK,EAAAvJ,EAAAxB,GACAc,EAAAiC,EAAA/C,UAAAe,MAAA,KAAA,IAAA,GAEAiK,EAAA,GAEA,OAAAnH,EAAAoH,UACA,KAAAN,GAAAC,KACAI,EAAA,CAAAhL,EAAA+K,GACA,MACA,KAAAJ,GAAAE,UACAG,EAAAV,GAAAtK,GACA,MACA,KAAA2K,GAAAG,iBACAE,EAAAV,GAAAtK,GAAA,GACA,MACA,QACAgL,EAAAnH,EAAAoH,SAkDA,OA/CAD,EAAA7H,QAAA,SAAA+H,EAAAV,GACA,GAAAxK,IAAAkL,GAAAF,EAAA3V,SAAAmV,EAAA,EACA,OAAAzH,EAGA/C,EAAA+C,EAAA/C,UAAAe,MAAA,KAAA,GACAgK,EAAAvJ,EAAAxB,GAEA,IAAA+B,EAAAgB,EAAA5F,QAAAkC,OACA8L,EAAApI,EAAA5F,QAAAmC,UAGAmI,EAAArM,KAAAqM,MACA2D,EAAA,SAAApL,GAAAyH,EAAA1F,EAAApH,OAAA8M,EAAA0D,EAAAzQ,OAAA,UAAAsF,GAAAyH,EAAA1F,EAAArH,MAAA+M,EAAA0D,EAAAxQ,QAAA,QAAAqF,GAAAyH,EAAA1F,EAAAtH,QAAAgN,EAAA0D,EAAA3Q,MAAA,WAAAwF,GAAAyH,EAAA1F,EAAAvH,KAAAiN,EAAA0D,EAAA1Q,QAEA4Q,EAAA5D,EAAA1F,EAAArH,MAAA+M,EAAAhI,EAAA/E,MACA4Q,EAAA7D,EAAA1F,EAAApH,OAAA8M,EAAAhI,EAAA9E,OACA4Q,EAAA9D,EAAA1F,EAAAvH,KAAAiN,EAAAhI,EAAAjF,KACAgR,EAAA/D,EAAA1F,EAAAtH,QAAAgN,EAAAhI,EAAAhF,QAEAgR,EAAA,SAAAzL,GAAAqL,GAAA,UAAArL,GAAAsL,GAAA,QAAAtL,GAAAuL,GAAA,WAAAvL,GAAAwL,EAGA1D,GAAA,IAAA,CAAA,MAAA,UAAAtS,QAAAwK,GACA0L,IAAA7H,EAAA8H,iBAAA7D,GAAA,UAAAhH,GAAAuK,GAAAvD,GAAA,QAAAhH,GAAAwK,IAAAxD,GAAA,UAAAhH,GAAAyK,IAAAzD,GAAA,QAAAhH,GAAA0K,IAEAJ,GAAAK,GAAAC,KAEA3I,EAAAa,SAAA,GAEAwH,GAAAK,KACAzL,EAAAgL,EAAAR,EAAA,IAGAkB,IACA5K,EAAAqJ,GAAArJ,IAGAiC,EAAA/C,UAAAA,GAAAc,EAAA,IAAAA,EAAA,IAIAiC,EAAA5F,QAAAkC,OAAAvC,EAAA,GAAuCiG,EAAA5F,QAAAkC,OAAAuC,EAAAmB,EAAApH,SAAA0D,OAAA0D,EAAA5F,QAAAmC,UAAAyD,EAAA/C,YAEvC+C,EAAAF,EAAAE,EAAApH,SAAAmH,UAAAC,EAAA,WAGAA,EAUA,SAAA6I,GAAA7I,GACA,IAAAwE,EAAAxE,EAAA5F,QACAkC,EAAAkI,EAAAlI,OACAC,EAAAiI,EAAAjI,UAEAU,EAAA+C,EAAA/C,UAAAe,MAAA,KAAA,GACA0G,EAAArM,KAAAqM,MACAK,GAAA,IAAA,CAAA,MAAA,UAAAtS,QAAAwK,GACApG,EAAAkO,EAAA,QAAA,SACA8B,EAAA9B,EAAA,OAAA,MACA3F,EAAA2F,EAAA,QAAA,SASA,OAPAzI,EAAAzF,GAAA6N,EAAAnI,EAAAsK,MACA7G,EAAA5F,QAAAkC,OAAAuK,GAAAnC,EAAAnI,EAAAsK,IAAAvK,EAAA8C,IAEA9C,EAAAuK,GAAAnC,EAAAnI,EAAA1F,MACAmJ,EAAA5F,QAAAkC,OAAAuK,GAAAnC,EAAAnI,EAAA1F,KAGAmJ,EAeA,SAAA8I,GAAAC,EAAA3J,EAAAJ,EAAAF,GAEA,IAAAd,EAAA+K,EAAAlJ,MAAA,6BACA/F,GAAAkE,EAAA,GACA+F,EAAA/F,EAAA,GAGA,IAAAlE,EACA,OAAAiP,EAGA,GAAA,IAAAhF,EAAAtR,QAAA,KAAA,CACA,IAAAkB,OAAA,EACA,OAAAoQ,GACA,IAAA,KACApQ,EAAAqL,EACA,MACA,IAAA,IACA,IAAA,KACA,QACArL,EAAAmL,EAGA,IAAA1H,EAAA+C,EAAAxG,GACA,OAAAyD,EAAAgI,GAAA,IAAAtF,EACG,GAAA,OAAAiK,GAAA,OAAAA,EAAA,CAEH,IAAAiF,OAAA,EAMA,OAJAA,EADA,OAAAjF,EACA1L,KAAAC,IAAApG,SAAAkD,gBAAAsF,aAAAzI,OAAA8J,aAAA,GAEA1D,KAAAC,IAAApG,SAAAkD,gBAAAqF,YAAAxI,OAAA6J,YAAA,GAEAkN,EAAA,IAAAlP,EAIA,OAAAA,EAeA,SAAAmP,GAAAjN,EAAAgD,EAAAF,EAAAoK,GACA,IAAA9O,EAAA,CAAA,EAAA,GAKA+O,GAAA,IAAA,CAAA,QAAA,QAAA1W,QAAAyW,GAIAE,EAAApN,EAAAgC,MAAA,WAAAV,IAAA,SAAA+L,GACA,OAAAA,EAAAC,SAKAC,EAAAH,EAAA3W,QAAA6M,EAAA8J,EAAA,SAAAC,GACA,OAAA,IAAAA,EAAAG,OAAA,WAGAJ,EAAAG,KAAA,IAAAH,EAAAG,GAAA9W,QAAA,MACA4N,QAAAC,KAAA,gFAKA,IAAAmJ,EAAA,cACAC,GAAA,IAAAH,EAAA,CAAAH,EAAAjJ,MAAA,EAAAoJ,GAAA7B,OAAA,CAAA0B,EAAAG,GAAAvL,MAAAyL,GAAA,KAAA,CAAAL,EAAAG,GAAAvL,MAAAyL,GAAA,IAAA/B,OAAA0B,EAAAjJ,MAAAoJ,EAAA,KAAA,CAAAH,GAqCA,OAlCAM,EAAAA,EAAApM,IAAA,SAAAqM,EAAAlC,GAEA,IAAArI,GAAA,IAAAqI,GAAA0B,EAAAA,GAAA,SAAA,QACAS,GAAA,EACA,OAAAD,EAGAE,OAAA,SAAApM,EAAAC,GACA,MAAA,KAAAD,EAAAA,EAAAnL,OAAA,KAAA,IAAA,CAAA,IAAA,KAAAG,QAAAiL,IACAD,EAAAA,EAAAnL,OAAA,GAAAoL,EACAkM,GAAA,EACAnM,GACOmM,GACPnM,EAAAA,EAAAnL,OAAA,IAAAoL,EACAkM,GAAA,EACAnM,GAEAA,EAAAiK,OAAAhK,IAEK,IAELJ,IAAA,SAAAyL,GACA,OAAAD,GAAAC,EAAA3J,EAAAJ,EAAAF,OAKA4K,EAAAtJ,QAAA,SAAAuJ,EAAAlC,GACAkC,EAAAvJ,QAAA,SAAAiJ,EAAAS,GACApG,GAAA2F,KACAjP,EAAAqN,IAAA4B,GAAA,MAAAM,EAAAG,EAAA,IAAA,EAAA,QAIA1P,EAYA,SAAA4B,GAAAgE,EAAAjD,GACA,IAAAf,EAAAe,EAAAf,OACAiB,EAAA+C,EAAA/C,UACAuH,EAAAxE,EAAA5F,QACAkC,EAAAkI,EAAAlI,OACAC,EAAAiI,EAAAjI,UAEA2M,EAAAjM,EAAAe,MAAA,KAAA,GAEA5D,OAAA,EAsBA,OApBAA,EADAsJ,IAAA1H,GACA,EAAAA,EAAA,GAEAiN,GAAAjN,EAAAM,EAAAC,EAAA2M,GAGA,SAAAA,GACA5M,EAAA7E,KAAA2C,EAAA,GACAkC,EAAA3E,MAAAyC,EAAA,IACG,UAAA8O,GACH5M,EAAA7E,KAAA2C,EAAA,GACAkC,EAAA3E,MAAAyC,EAAA,IACG,QAAA8O,GACH5M,EAAA3E,MAAAyC,EAAA,GACAkC,EAAA7E,KAAA2C,EAAA,IACG,WAAA8O,IACH5M,EAAA3E,MAAAyC,EAAA,GACAkC,EAAA7E,KAAA2C,EAAA,IAGA4F,EAAA1D,OAAAA,EACA0D,EAUA,SAAA+J,GAAA/J,EAAAc,GACA,IAAArE,EAAAqE,EAAArE,mBAAAtH,EAAA6K,EAAApH,SAAA0D,QAKA0D,EAAApH,SAAA2D,YAAAE,IACAA,EAAAtH,EAAAsH,IAMA,IAAAuN,EAAAtI,EAAA,aACAuI,EAAAjK,EAAApH,SAAA0D,OAAA2F,MACAxK,EAAAwS,EAAAxS,IACAE,EAAAsS,EAAAtS,KACAuS,EAAAD,EAAAD,GAEAC,EAAAxS,IAAA,GACAwS,EAAAtS,KAAA,GACAsS,EAAAD,GAAA,GAEA,IAAAtN,EAAAL,EAAA2D,EAAApH,SAAA0D,OAAA0D,EAAApH,SAAA2D,UAAAuE,EAAAtE,QAAAC,EAAAuD,EAAAe,eAIAkJ,EAAAxS,IAAAA,EACAwS,EAAAtS,KAAAA,EACAsS,EAAAD,GAAAE,EAEApJ,EAAApE,WAAAA,EAEA,IAAA3G,EAAA+K,EAAAqJ,SACA7N,EAAA0D,EAAA5F,QAAAkC,OAEAkD,EAAA,CACA4K,QAAA,SAAAnN,GACA,IAAAnD,EAAAwC,EAAAW,GAIA,OAHAX,EAAAW,GAAAP,EAAAO,KAAA6D,EAAAuJ,sBACAvQ,EAAAzB,KAAAC,IAAAgE,EAAAW,GAAAP,EAAAO,KAEAzD,EAAA,GAA8ByD,EAAAnD,IAE9BwQ,UAAA,SAAArN,GACA,IAAAiC,EAAA,UAAAjC,EAAA,OAAA,MACAnD,EAAAwC,EAAA4C,GAIA,OAHA5C,EAAAW,GAAAP,EAAAO,KAAA6D,EAAAuJ,sBACAvQ,EAAAzB,KAAA8O,IAAA7K,EAAA4C,GAAAxC,EAAAO,IAAA,UAAAA,EAAAX,EAAA5D,MAAA4D,EAAA7D,UAEAe,EAAA,GAA8B0F,EAAApF,KAW9B,OAPA/D,EAAAqK,QAAA,SAAAnD,GACA,IAAApG,GAAA,IAAA,CAAA,OAAA,OAAApE,QAAAwK,GAAA,UAAA,YACAX,EAAAvC,EAAA,GAAwBuC,EAAAkD,EAAA3I,GAAAoG,MAGxB+C,EAAA5F,QAAAkC,OAAAA,EAEA0D,EAUA,SAAAuK,GAAAvK,GACA,IAAA/C,EAAA+C,EAAA/C,UACAiM,EAAAjM,EAAAe,MAAA,KAAA,GACAwM,EAAAvN,EAAAe,MAAA,KAAA,GAGA,GAAAwM,EAAA,CACA,IAAAhG,EAAAxE,EAAA5F,QACAmC,EAAAiI,EAAAjI,UACAD,EAAAkI,EAAAlI,OAEAyI,GAAA,IAAA,CAAA,SAAA,OAAAtS,QAAAyW,GACArS,EAAAkO,EAAA,OAAA,MACA3F,EAAA2F,EAAA,QAAA,SAEA0F,EAAA,CACAtU,MAAAqD,EAAA,GAA8B3C,EAAA0F,EAAA1F,IAC9BT,IAAAoD,EAAA,GAA4B3C,EAAA0F,EAAA1F,GAAA0F,EAAA6C,GAAA9C,EAAA8C,KAG5BY,EAAA5F,QAAAkC,OAAAvC,EAAA,GAAqCuC,EAAAmO,EAAAD,IAGrC,OAAAxK,EAUA,SAAA0K,GAAA1K,GACA,IAAAgG,GAAAhG,EAAApH,SAAAmH,UAAA,OAAA,mBACA,OAAAC,EAGA,IAAA9C,EAAA8C,EAAA5F,QAAAmC,UACAoO,EAAArL,EAAAU,EAAApH,SAAAmH,UAAA,SAAAvI,GACA,MAAA,oBAAAA,EAAAiK,OACG/E,WAEH,GAAAQ,EAAAxF,OAAAiT,EAAAlT,KAAAyF,EAAAvF,KAAAgT,EAAA/S,OAAAsF,EAAAzF,IAAAkT,EAAAjT,QAAAwF,EAAAtF,MAAA+S,EAAAhT,KAAA,CAEA,IAAA,IAAAqI,EAAA0K,KACA,OAAA1K,EAGAA,EAAA0K,MAAA,EACA1K,EAAAY,WAAA,uBAAA,OACG,CAEH,IAAA,IAAAZ,EAAA0K,KACA,OAAA1K,EAGAA,EAAA0K,MAAA,EACA1K,EAAAY,WAAA,wBAAA,EAGA,OAAAZ,EAUA,SAAA4K,GAAA5K,GACA,IAAA/C,EAAA+C,EAAA/C,UACAiM,EAAAjM,EAAAe,MAAA,KAAA,GACAwG,EAAAxE,EAAA5F,QACAkC,EAAAkI,EAAAlI,OACAC,EAAAiI,EAAAjI,UAEA0C,GAAA,IAAA,CAAA,OAAA,SAAAxM,QAAAyW,GAEA2B,GAAA,IAAA,CAAA,MAAA,QAAApY,QAAAyW,GAOA,OALA5M,EAAA2C,EAAA,OAAA,OAAA1C,EAAA2M,IAAA2B,EAAAvO,EAAA2C,EAAA,QAAA,UAAA,GAEAe,EAAA/C,UAAAwB,EAAAxB,GACA+C,EAAA5F,QAAAkC,OAAAnC,EAAAmC,GAEA0D,EAwBA,IAAAD,GAAA,CASAwK,MAAA,CAEAxU,MAAA,IAEAwK,SAAA,EAEA5N,GAAA4X,IAyCAvO,OAAA,CAEAjG,MAAA,IAEAwK,SAAA,EAEA5N,GAAAqJ,GAIAA,OAAA,GAoBA+N,gBAAA,CAEAhU,MAAA,IAEAwK,SAAA,EAEA5N,GAAAoX,GAMAI,SAAA,CAAA,OAAA,QAAA,MAAA,UAOA3N,QAAA,EAMAC,kBAAA,gBAYAoM,aAAA,CAEA9S,MAAA,IAEAwK,SAAA,EAEA5N,GAAAkW,IAaA9C,MAAA,CAEAhQ,MAAA,IAEAwK,SAAA,EAEA5N,GAAAoT,GAEApS,QAAA,aAcAqN,KAAA,CAEAjL,MAAA,IAEAwK,SAAA,EAEA5N,GAAAqO,GAOAkH,SAAA,OAKA1L,QAAA,EAOAC,kBAAA,YAUAmO,MAAA,CAEA7U,MAAA,IAEAwK,SAAA,EAEA5N,GAAAiY,IAaAF,KAAA,CAEA3U,MAAA,IAEAwK,SAAA,EAEA5N,GAAA+X,IAkBApF,aAAA,CAEAvP,MAAA,IAEAwK,SAAA,EAEA5N,GAAA2S,GAMAE,iBAAA,EAMAnH,EAAA,SAMAE,EAAA,SAkBA2F,WAAA,CAEAnO,MAAA,IAEAwK,SAAA,EAEA5N,GAAAuR,GAEA4G,OAAA1G,GAOAoB,qBAAAzO,IAuCAgU,GAAA,CAKA9N,UAAA,SAMA8D,eAAA,EAMAqC,eAAA,EAOAd,iBAAA,EAQAjB,SAAA,aAUAD,SAAA,aAOArB,UAAAA,IAeAiL,GAAA,WASA,SAAAA,EAAAzO,EAAAD,GACA,IAAA2O,EAAAxK,KAEAK,EAAAhK,UAAAxE,OAAA,QAAAyE,IAAAD,UAAA,GAAAA,UAAA,GAAA,GACA6B,EAAA8H,KAAAuK,GAEAvK,KAAA6C,eAAA,WACA,OAAA4H,sBAAAD,EAAAzK,SAIAC,KAAAD,OAAApN,EAAAqN,KAAAD,OAAA2K,KAAA1K,OAGAA,KAAAK,QAAA/G,EAAA,GAA8BiR,EAAAD,SAAAjK,GAG9BL,KAAAvC,MAAA,CACAwC,aAAA,EACAS,WAAA,EACAyB,cAAA,IAIAnC,KAAAlE,UAAAA,GAAAA,EAAA6O,OAAA7O,EAAA,GAAAA,EACAkE,KAAAnE,OAAAA,GAAAA,EAAA8O,OAAA9O,EAAA,GAAAA,EAGAmE,KAAAK,QAAAf,UAAA,GACAxG,OAAA8D,KAAAtD,EAAA,GAA2BiR,EAAAD,SAAAhL,UAAAe,EAAAf,YAAAK,QAAA,SAAAqB,GAC3BwJ,EAAAnK,QAAAf,UAAA0B,GAAA1H,EAAA,GAAiDiR,EAAAD,SAAAhL,UAAA0B,IAAA,GAAuCX,EAAAf,UAAAe,EAAAf,UAAA0B,GAAA,MAIxFhB,KAAAV,UAAAxG,OAAA8D,KAAAoD,KAAAK,QAAAf,WAAAzC,IAAA,SAAAmE,GACA,OAAA1H,EAAA,CACA0H,KAAAA,GACOwJ,EAAAnK,QAAAf,UAAA0B,MAGPjE,KAAA,SAAAC,EAAAC,GACA,OAAAD,EAAA1H,MAAA2H,EAAA3H,QAOA0K,KAAAV,UAAAK,QAAA,SAAAiE,GACAA,EAAA9D,SAAAlN,EAAAgR,EAAAyG,SACAzG,EAAAyG,OAAAG,EAAA1O,UAAA0O,EAAA3O,OAAA2O,EAAAnK,QAAAuD,EAAA4G,EAAA/M,SAKAuC,KAAAD,SAEA,IAAA4C,EAAA3C,KAAAK,QAAAsC,cACAA,GAEA3C,KAAA4C,uBAGA5C,KAAAvC,MAAAkF,cAAAA,EAqDA,OA9CArK,EAAAiS,EAAA,CAAA,CACAvR,IAAA,SACAK,MAAA,WACA,OAAA0G,EAAA/M,KAAAgN,QAEG,CACHhH,IAAA,UACAK,MAAA,WACA,OAAAoI,EAAAzO,KAAAgN,QAEG,CACHhH,IAAA,uBACAK,MAAA,WACA,OAAAuJ,EAAA5P,KAAAgN,QAEG,CACHhH,IAAA,wBACAK,MAAA,WACA,OAAAuI,GAAA5O,KAAAgN,UA4BAuK,EA7HA,GAqJAA,GAAAK,OAAA,qBAAApZ,OAAAA,OAAAF,GAAAuZ,YACAN,GAAA3D,WAAAA,GACA2D,GAAAD,SAAAA,GAEejZ,EAAA,WAAA\",\"sourcesContent\":[\"/**!\\n * @fileOverview Kickass library to create and place poppers near their reference elements.\\n * @version 1.14.7\\n * @license\\n * Copyright (c) 2016 Federico Zivolo and contributors\\n *\\n * Permission is hereby granted, free of charge, to any person obtaining a copy\\n * of this software and associated documentation files (the \\\"Software\\\"), to deal\\n * in the Software without restriction, including without limitation the rights\\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n * copies of the Software, and to permit persons to whom the Software is\\n * furnished to do so, subject to the following conditions:\\n *\\n * The above copyright notice and this permission notice shall be included in all\\n * copies or substantial portions of the Software.\\n *\\n * THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\n * SOFTWARE.\\n */\\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';\\n\\nvar longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\\nvar timeoutDuration = 0;\\nfor (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {\\n  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\\n    timeoutDuration = 1;\\n    break;\\n  }\\n}\\n\\nfunction microtaskDebounce(fn) {\\n  var called = false;\\n  return function () {\\n    if (called) {\\n      return;\\n    }\\n    called = true;\\n    window.Promise.resolve().then(function () {\\n      called = false;\\n      fn();\\n    });\\n  };\\n}\\n\\nfunction taskDebounce(fn) {\\n  var scheduled = false;\\n  return function () {\\n    if (!scheduled) {\\n      scheduled = true;\\n      setTimeout(function () {\\n        scheduled = false;\\n        fn();\\n      }, timeoutDuration);\\n    }\\n  };\\n}\\n\\nvar supportsMicroTasks = isBrowser && window.Promise;\\n\\n/**\\n* Create a debounced version of a method, that's asynchronously deferred\\n* but called in the minimum time possible.\\n*\\n* @method\\n* @memberof Popper.Utils\\n* @argument {Function} fn\\n* @returns {Function}\\n*/\\nvar debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;\\n\\n/**\\n * Check if the given variable is a function\\n * @method\\n * @memberof Popper.Utils\\n * @argument {Any} functionToCheck - variable to check\\n * @returns {Boolean} answer to: is a function?\\n */\\nfunction isFunction(functionToCheck) {\\n  var getType = {};\\n  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\\n}\\n\\n/**\\n * Get CSS computed property of the given element\\n * @method\\n * @memberof Popper.Utils\\n * @argument {Eement} element\\n * @argument {String} property\\n */\\nfunction getStyleComputedProperty(element, property) {\\n  if (element.nodeType !== 1) {\\n    return [];\\n  }\\n  // NOTE: 1 DOM access here\\n  var window = element.ownerDocument.defaultView;\\n  var css = window.getComputedStyle(element, null);\\n  return property ? css[property] : css;\\n}\\n\\n/**\\n * Returns the parentNode or the host of the element\\n * @method\\n * @memberof Popper.Utils\\n * @argument {Element} element\\n * @returns {Element} parent\\n */\\nfunction getParentNode(element) {\\n  if (element.nodeName === 'HTML') {\\n    return element;\\n  }\\n  return element.parentNode || element.host;\\n}\\n\\n/**\\n * Returns the scrolling parent of the given element\\n * @method\\n * @memberof Popper.Utils\\n * @argument {Element} element\\n * @returns {Element} scroll parent\\n */\\nfunction getScrollParent(element) {\\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\\n  if (!element) {\\n    return document.body;\\n  }\\n\\n  switch (element.nodeName) {\\n    case 'HTML':\\n    case 'BODY':\\n      return element.ownerDocument.body;\\n    case '#document':\\n      return element.body;\\n  }\\n\\n  // Firefox want us to check `-x` and `-y` variations as well\\n\\n  var _getStyleComputedProp = getStyleComputedProperty(element),\\n      overflow = _getStyleComputedProp.overflow,\\n      overflowX = _getStyleComputedProp.overflowX,\\n      overflowY = _getStyleComputedProp.overflowY;\\n\\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\\n    return element;\\n  }\\n\\n  return getScrollParent(getParentNode(element));\\n}\\n\\nvar isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\\nvar isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\\n\\n/**\\n * Determines if the browser is Internet Explorer\\n * @method\\n * @memberof Popper.Utils\\n * @param {Number} version to check\\n * @returns {Boolean} isIE\\n */\\nfunction isIE(version) {\\n  if (version === 11) {\\n    return isIE11;\\n  }\\n  if (version === 10) {\\n    return isIE10;\\n  }\\n  return isIE11 || isIE10;\\n}\\n\\n/**\\n * Returns the offset parent of the given element\\n * @method\\n * @memberof Popper.Utils\\n * @argument {Element} element\\n * @returns {Element} offset parent\\n */\\nfunction getOffsetParent(element) {\\n  if (!element) {\\n    return document.documentElement;\\n  }\\n\\n  var noOffsetParent = isIE(10) ? document.body : null;\\n\\n  // NOTE: 1 DOM access here\\n  var offsetParent = element.offsetParent || null;\\n  // Skip hidden elements which don't have an offsetParent\\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\\n    offsetParent = (element = element.nextElementSibling).offsetParent;\\n  }\\n\\n  var nodeName = offsetParent && offsetParent.nodeName;\\n\\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\\n    return element ? element.ownerDocument.documentElement : document.documentElement;\\n  }\\n\\n  // .offsetParent will return the closest TH, TD or TABLE in case\\n  // no offsetParent is present, I hate this job...\\n  if (['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {\\n    return getOffsetParent(offsetParent);\\n  }\\n\\n  return offsetParent;\\n}\\n\\nfunction isOffsetContainer(element) {\\n  var nodeName = element.nodeName;\\n\\n  if (nodeName === 'BODY') {\\n    return false;\\n  }\\n  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;\\n}\\n\\n/**\\n * Finds the root node (document, shadowDOM root) of the given element\\n * @method\\n * @memberof Popper.Utils\\n * @argument {Element} node\\n * @returns {Element} root node\\n */\\nfunction getRoot(node) {\\n  if (node.parentNode !== null) {\\n    return getRoot(node.parentNode);\\n  }\\n\\n  return node;\\n}\\n\\n/**\\n * Finds the offset parent common to the two provided nodes\\n * @method\\n * @memberof Popper.Utils\\n * @argument {Element} element1\\n * @argument {Element} element2\\n * @returns {Element} common offset parent\\n */\\nfunction findCommonOffsetParent(element1, element2) {\\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\\n    return document.documentElement;\\n  }\\n\\n  // Here we make sure to give as \\\"start\\\" the element that comes first in the DOM\\n  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\\n  var start = order ? element1 : element2;\\n  var end = order ? element2 : element1;\\n\\n  // Get common ancestor container\\n  var range = document.createRange();\\n  range.setStart(start, 0);\\n  range.setEnd(end, 0);\\n  var commonAncestorContainer = range.commonAncestorContainer;\\n\\n  // Both nodes are inside #document\\n\\n  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {\\n    if (isOffsetContainer(commonAncestorContainer)) {\\n      return commonAncestorContainer;\\n    }\\n\\n    return getOffsetParent(commonAncestorContainer);\\n  }\\n\\n  // one of the nodes is inside shadowDOM, find which one\\n  var element1root = getRoot(element1);\\n  if (element1root.host) {\\n    return findCommonOffsetParent(element1root.host, element2);\\n  } else {\\n    return findCommonOffsetParent(element1, getRoot(element2).host);\\n  }\\n}\\n\\n/**\\n * Gets the scroll value of the given element in the given side (top and left)\\n * @method\\n * @memberof Popper.Utils\\n * @argument {Element} element\\n * @argument {String} side `top` or `left`\\n * @returns {number} amount of scrolled pixels\\n */\\nfunction getScroll(element) {\\n  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';\\n\\n  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\\n  var nodeName = element.nodeName;\\n\\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\\n    var html = element.ownerDocument.documentElement;\\n    var scrollingElement = element.ownerDocument.scrollingElement || html;\\n    return scrollingElement[upperSide];\\n  }\\n\\n  return element[upperSide];\\n}\\n\\n/*\\n * Sum or subtract the element scroll values (left and top) from a given rect object\\n * @method\\n * @memberof Popper.Utils\\n * @param {Object} rect - Rect object you want to change\\n * @param {HTMLElement} element - The element from the function reads the scroll values\\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\\n * @return {Object} rect - The modifier rect object\\n */\\nfunction includeScroll(rect, element) {\\n  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\\n\\n  var scrollTop = getScroll(element, 'top');\\n  var scrollLeft = getScroll(element, 'left');\\n  var modifier = subtract ? -1 : 1;\\n  rect.top += scrollTop * modifier;\\n  rect.bottom += scrollTop * modifier;\\n  rect.left += scrollLeft * modifier;\\n  rect.right += scrollLeft * modifier;\\n  return rect;\\n}\\n\\n/*\\n * Helper to detect borders of a given element\\n * @method\\n * @memberof Popper.Utils\\n * @param {CSSStyleDeclaration} styles\\n * Result of `getStyleComputedProperty` on the given element\\n * @param {String} axis - `x` or `y`\\n * @return {number} borders - The borders size of the given axis\\n */\\n\\nfunction getBordersSize(styles, axis) {\\n  var sideA = axis === 'x' ? 'Left' : 'Top';\\n  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';\\n\\n  return parseFloat(styles['border' + sideA + 'Width'], 10) + parseFloat(styles['border' + sideB + 'Width'], 10);\\n}\\n\\nfunction getSize(axis, body, html, computedStyle) {\\n  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? parseInt(html['offset' + axis]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')]) : 0);\\n}\\n\\nfunction getWindowSizes(document) {\\n  var body = document.body;\\n  var html = document.documentElement;\\n  var computedStyle = isIE(10) && getComputedStyle(html);\\n\\n  return {\\n    height: getSize('Height', body, html, computedStyle),\\n    width: getSize('Width', body, html, computedStyle)\\n  };\\n}\\n\\nvar classCallCheck = function (instance, Constructor) {\\n  if (!(instance instanceof Constructor)) {\\n    throw new TypeError(\\\"Cannot call a class as a function\\\");\\n  }\\n};\\n\\nvar createClass = function () {\\n  function defineProperties(target, props) {\\n    for (var i = 0; i < props.length; i++) {\\n      var descriptor = props[i];\\n      descriptor.enumerable = descriptor.enumerable || false;\\n      descriptor.configurable = true;\\n      if (\\\"value\\\" in descriptor) descriptor.writable = true;\\n      Object.defineProperty(target, descriptor.key, descriptor);\\n    }\\n  }\\n\\n  return function (Constructor, protoProps, staticProps) {\\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\\n    if (staticProps) defineProperties(Constructor, staticProps);\\n    return Constructor;\\n  };\\n}();\\n\\n\\n\\n\\n\\nvar defineProperty = function (obj, key, value) {\\n  if (key in obj) {\\n    Object.defineProperty(obj, key, {\\n      value: value,\\n      enumerable: true,\\n      configurable: true,\\n      writable: true\\n    });\\n  } else {\\n    obj[key] = value;\\n  }\\n\\n  return obj;\\n};\\n\\nvar _extends = Object.assign || function (target) {\\n  for (var i = 1; i < arguments.length; i++) {\\n    var source = arguments[i];\\n\\n    for (var key in source) {\\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\\n        target[key] = source[key];\\n      }\\n    }\\n  }\\n\\n  return target;\\n};\\n\\n/**\\n * Given element offsets, generate an output similar to getBoundingClientRect\\n * @method\\n * @memberof Popper.Utils\\n * @argument {Object} offsets\\n * @returns {Object} ClientRect like output\\n */\\nfunction getClientRect(offsets) {\\n  return _extends({}, offsets, {\\n    right: offsets.left + offsets.width,\\n    bottom: offsets.top + offsets.height\\n  });\\n}\\n\\n/**\\n * Get bounding client rect of given element\\n * @method\\n * @memberof Popper.Utils\\n * @param {HTMLElement} element\\n * @return {Object} client rect\\n */\\nfunction getBoundingClientRect(element) {\\n  var rect = {};\\n\\n  // IE10 10 FIX: Please, don't ask, the element isn't\\n  // considered in DOM in some circumstances...\\n  // This isn't reproducible in IE10 compatibility mode of IE11\\n  try {\\n    if (isIE(10)) {\\n      rect = element.getBoundingClientRect();\\n      var scrollTop = getScroll(element, 'top');\\n      var scrollLeft = getScroll(element, 'left');\\n      rect.top += scrollTop;\\n      rect.left += scrollLeft;\\n      rect.bottom += scrollTop;\\n      rect.right += scrollLeft;\\n    } else {\\n      rect = element.getBoundingClientRect();\\n    }\\n  } catch (e) {}\\n\\n  var result = {\\n    left: rect.left,\\n    top: rect.top,\\n    width: rect.right - rect.left,\\n    height: rect.bottom - rect.top\\n  };\\n\\n  // subtract scrollbar size from sizes\\n  var sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\\n  var width = sizes.width || element.clientWidth || result.right - result.left;\\n  var height = sizes.height || element.clientHeight || result.bottom - result.top;\\n\\n  var horizScrollbar = element.offsetWidth - width;\\n  var vertScrollbar = element.offsetHeight - height;\\n\\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\\n  // we make this check conditional for performance reasons\\n  if (horizScrollbar || vertScrollbar) {\\n    var styles = getStyleComputedProperty(element);\\n    horizScrollbar -= getBordersSize(styles, 'x');\\n    vertScrollbar -= getBordersSize(styles, 'y');\\n\\n    result.width -= horizScrollbar;\\n    result.height -= vertScrollbar;\\n  }\\n\\n  return getClientRect(result);\\n}\\n\\nfunction getOffsetRectRelativeToArbitraryNode(children, parent) {\\n  var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\\n\\n  var isIE10 = isIE(10);\\n  var isHTML = parent.nodeName === 'HTML';\\n  var childrenRect = getBoundingClientRect(children);\\n  var parentRect = getBoundingClientRect(parent);\\n  var scrollParent = getScrollParent(children);\\n\\n  var styles = getStyleComputedProperty(parent);\\n  var borderTopWidth = parseFloat(styles.borderTopWidth, 10);\\n  var borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);\\n\\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\\n  if (fixedPosition && isHTML) {\\n    parentRect.top = Math.max(parentRect.top, 0);\\n    parentRect.left = Math.max(parentRect.left, 0);\\n  }\\n  var offsets = getClientRect({\\n    top: childrenRect.top - parentRect.top - borderTopWidth,\\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\\n    width: childrenRect.width,\\n    height: childrenRect.height\\n  });\\n  offsets.marginTop = 0;\\n  offsets.marginLeft = 0;\\n\\n  // Subtract margins of documentElement in case it's being used as parent\\n  // we do this only on HTML because it's the only element that behaves\\n  // differently when margins are applied to it. The margins are included in\\n  // the box of the documentElement, in the other cases not.\\n  if (!isIE10 && isHTML) {\\n    var marginTop = parseFloat(styles.marginTop, 10);\\n    var marginLeft = parseFloat(styles.marginLeft, 10);\\n\\n    offsets.top -= borderTopWidth - marginTop;\\n    offsets.bottom -= borderTopWidth - marginTop;\\n    offsets.left -= borderLeftWidth - marginLeft;\\n    offsets.right -= borderLeftWidth - marginLeft;\\n\\n    // Attach marginTop and marginLeft because in some circumstances we may need them\\n    offsets.marginTop = marginTop;\\n    offsets.marginLeft = marginLeft;\\n  }\\n\\n  if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {\\n    offsets = includeScroll(offsets, parent);\\n  }\\n\\n  return offsets;\\n}\\n\\nfunction getViewportOffsetRectRelativeToArtbitraryNode(element) {\\n  var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\\n\\n  var html = element.ownerDocument.documentElement;\\n  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\\n  var width = Math.max(html.clientWidth, window.innerWidth || 0);\\n  var height = Math.max(html.clientHeight, window.innerHeight || 0);\\n\\n  var scrollTop = !excludeScroll ? getScroll(html) : 0;\\n  var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\\n\\n  var offset = {\\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\\n    width: width,\\n    height: height\\n  };\\n\\n  return getClientRect(offset);\\n}\\n\\n/**\\n * Check if the given element is fixed or is inside a fixed parent\\n * @method\\n * @memberof Popper.Utils\\n * @argument {Element} element\\n * @argument {Element} customContainer\\n * @returns {Boolean} answer to \\\"isFixed?\\\"\\n */\\nfunction isFixed(element) {\\n  var nodeName = element.nodeName;\\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\\n    return false;\\n  }\\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\\n    return true;\\n  }\\n  var parentNode = getParentNode(element);\\n  if (!parentNode) {\\n    return false;\\n  }\\n  return isFixed(parentNode);\\n}\\n\\n/**\\n * Finds the first parent of an element that has a transformed property defined\\n * @method\\n * @memberof Popper.Utils\\n * @argument {Element} element\\n * @returns {Element} first transformed parent or documentElement\\n */\\n\\nfunction getFixedPositionOffsetParent(element) {\\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\\n  if (!element || !element.parentElement || isIE()) {\\n    return document.documentElement;\\n  }\\n  var el = element.parentElement;\\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\\n    el = el.parentElement;\\n  }\\n  return el || document.documentElement;\\n}\\n\\n/**\\n * Computed the boundaries limits and return them\\n * @method\\n * @memberof Popper.Utils\\n * @param {HTMLElement} popper\\n * @param {HTMLElement} reference\\n * @param {number} padding\\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\\n * @param {Boolean} fixedPosition - Is in fixed position mode\\n * @returns {Object} Coordinates of the boundaries\\n */\\nfunction getBoundaries(popper, reference, padding, boundariesElement) {\\n  var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\\n\\n  // NOTE: 1 DOM access here\\n\\n  var boundaries = { top: 0, left: 0 };\\n  var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\\n\\n  // Handle viewport case\\n  if (boundariesElement === 'viewport') {\\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\\n  } else {\\n    // Handle other cases based on DOM element used as boundaries\\n    var boundariesNode = void 0;\\n    if (boundariesElement === 'scrollParent') {\\n      boundariesNode = getScrollParent(getParentNode(reference));\\n      if (boundariesNode.nodeName === 'BODY') {\\n        boundariesNode = popper.ownerDocument.documentElement;\\n      }\\n    } else if (boundariesElement === 'window') {\\n      boundariesNode = popper.ownerDocument.documentElement;\\n    } else {\\n      boundariesNode = boundariesElement;\\n    }\\n\\n    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);\\n\\n    // In case of HTML, we need a different computation\\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\\n      var _getWindowSizes = getWindowSizes(popper.ownerDocument),\\n          height = _getWindowSizes.height,\\n          width = _getWindowSizes.width;\\n\\n      boundaries.top += offsets.top - offsets.marginTop;\\n      boundaries.bottom = height + offsets.top;\\n      boundaries.left += offsets.left - offsets.marginLeft;\\n      boundaries.right = width + offsets.left;\\n    } else {\\n      // for all the other DOM elements, this one is good\\n      boundaries = offsets;\\n    }\\n  }\\n\\n  // Add paddings\\n  padding = padding || 0;\\n  var isPaddingNumber = typeof padding === 'number';\\n  boundaries.left += isPaddingNumber ? padding : padding.left || 0;\\n  boundaries.top += isPaddingNumber ? padding : padding.top || 0;\\n  boundaries.right -= isPaddingNumber ? padding : padding.right || 0;\\n  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;\\n\\n  return boundaries;\\n}\\n\\nfunction getArea(_ref) {\\n  var width = _ref.width,\\n      height = _ref.height;\\n\\n  return width * height;\\n}\\n\\n/**\\n * Utility used to transform the `auto` placement to the placement with more\\n * available space.\\n * @method\\n * @memberof Popper.Utils\\n * @argument {Object} data - The data object generated by update method\\n * @argument {Object} options - Modifiers configuration and options\\n * @returns {Object} The data object, properly modified\\n */\\nfunction computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {\\n  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\\n\\n  if (placement.indexOf('auto') === -1) {\\n    return placement;\\n  }\\n\\n  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);\\n\\n  var rects = {\\n    top: {\\n      width: boundaries.width,\\n      height: refRect.top - boundaries.top\\n    },\\n    right: {\\n      width: boundaries.right - refRect.right,\\n      height: boundaries.height\\n    },\\n    bottom: {\\n      width: boundaries.width,\\n      height: boundaries.bottom - refRect.bottom\\n    },\\n    left: {\\n      width: refRect.left - boundaries.left,\\n      height: boundaries.height\\n    }\\n  };\\n\\n  var sortedAreas = Object.keys(rects).map(function (key) {\\n    return _extends({\\n      key: key\\n    }, rects[key], {\\n      area: getArea(rects[key])\\n    });\\n  }).sort(function (a, b) {\\n    return b.area - a.area;\\n  });\\n\\n  var filteredAreas = sortedAreas.filter(function (_ref2) {\\n    var width = _ref2.width,\\n        height = _ref2.height;\\n    return width >= popper.clientWidth && height >= popper.clientHeight;\\n  });\\n\\n  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;\\n\\n  var variation = placement.split('-')[1];\\n\\n  return computedPlacement + (variation ? '-' + variation : '');\\n}\\n\\n/**\\n * Get offsets to the reference element\\n * @method\\n * @memberof Popper.Utils\\n * @param {Object} state\\n * @param {Element} popper - the popper element\\n * @param {Element} reference - the reference element (the popper will be relative to this)\\n * @param {Element} fixedPosition - is in fixed position mode\\n * @returns {Object} An object containing the offsets which will be applied to the popper\\n */\\nfunction getReferenceOffsets(state, popper, reference) {\\n  var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\\n\\n  var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\\n}\\n\\n/**\\n * Get the outer sizes of the given element (offset size + margins)\\n * @method\\n * @memberof Popper.Utils\\n * @argument {Element} element\\n * @returns {Object} object containing width and height properties\\n */\\nfunction getOuterSizes(element) {\\n  var window = element.ownerDocument.defaultView;\\n  var styles = window.getComputedStyle(element);\\n  var x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);\\n  var y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);\\n  var result = {\\n    width: element.offsetWidth + y,\\n    height: element.offsetHeight + x\\n  };\\n  return result;\\n}\\n\\n/**\\n * Get the opposite placement of the given one\\n * @method\\n * @memberof Popper.Utils\\n * @argument {String} placement\\n * @returns {String} flipped placement\\n */\\nfunction getOppositePlacement(placement) {\\n  var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\\n    return hash[matched];\\n  });\\n}\\n\\n/**\\n * Get offsets to the popper\\n * @method\\n * @memberof Popper.Utils\\n * @param {Object} position - CSS position the Popper will get applied\\n * @param {HTMLElement} popper - the popper element\\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\\n * @param {String} placement - one of the valid placement options\\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\\n */\\nfunction getPopperOffsets(popper, referenceOffsets, placement) {\\n  placement = placement.split('-')[0];\\n\\n  // Get popper node sizes\\n  var popperRect = getOuterSizes(popper);\\n\\n  // Add position, width and height to our offsets object\\n  var popperOffsets = {\\n    width: popperRect.width,\\n    height: popperRect.height\\n  };\\n\\n  // depending by the popper placement we have to compute its offsets slightly differently\\n  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;\\n  var mainSide = isHoriz ? 'top' : 'left';\\n  var secondarySide = isHoriz ? 'left' : 'top';\\n  var measurement = isHoriz ? 'height' : 'width';\\n  var secondaryMeasurement = !isHoriz ? 'height' : 'width';\\n\\n  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;\\n  if (placement === secondarySide) {\\n    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\\n  } else {\\n    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];\\n  }\\n\\n  return popperOffsets;\\n}\\n\\n/**\\n * Mimics the `find` method of Array\\n * @method\\n * @memberof Popper.Utils\\n * @argument {Array} arr\\n * @argument prop\\n * @argument value\\n * @returns index or -1\\n */\\nfunction find(arr, check) {\\n  // use native find if supported\\n  if (Array.prototype.find) {\\n    return arr.find(check);\\n  }\\n\\n  // use `filter` to obtain the same behavior of `find`\\n  return arr.filter(check)[0];\\n}\\n\\n/**\\n * Return the index of the matching object\\n * @method\\n * @memberof Popper.Utils\\n * @argument {Array} arr\\n * @argument prop\\n * @argument value\\n * @returns index or -1\\n */\\nfunction findIndex(arr, prop, value) {\\n  // use native findIndex if supported\\n  if (Array.prototype.findIndex) {\\n    return arr.findIndex(function (cur) {\\n      return cur[prop] === value;\\n    });\\n  }\\n\\n  // use `find` + `indexOf` if `findIndex` isn't supported\\n  var match = find(arr, function (obj) {\\n    return obj[prop] === value;\\n  });\\n  return arr.indexOf(match);\\n}\\n\\n/**\\n * Loop trough the list of modifiers and run them in order,\\n * each of them will then edit the data object.\\n * @method\\n * @memberof Popper.Utils\\n * @param {dataObject} data\\n * @param {Array} modifiers\\n * @param {String} ends - Optional modifier name used as stopper\\n * @returns {dataObject}\\n */\\nfunction runModifiers(modifiers, data, ends) {\\n  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));\\n\\n  modifiersToRun.forEach(function (modifier) {\\n    if (modifier['function']) {\\n      // eslint-disable-line dot-notation\\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\\n    }\\n    var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\\n    if (modifier.enabled && isFunction(fn)) {\\n      // Add properties to offsets to make them a complete clientRect object\\n      // we do this before each modifier to make sure the previous one doesn't\\n      // mess with these values\\n      data.offsets.popper = getClientRect(data.offsets.popper);\\n      data.offsets.reference = getClientRect(data.offsets.reference);\\n\\n      data = fn(data, modifier);\\n    }\\n  });\\n\\n  return data;\\n}\\n\\n/**\\n * Updates the position of the popper, computing the new offsets and applying\\n * the new style.<br />\\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\\n * @method\\n * @memberof Popper\\n */\\nfunction update() {\\n  // if popper is destroyed, don't perform any further update\\n  if (this.state.isDestroyed) {\\n    return;\\n  }\\n\\n  var data = {\\n    instance: this,\\n    styles: {},\\n    arrowStyles: {},\\n    attributes: {},\\n    flipped: false,\\n    offsets: {}\\n  };\\n\\n  // compute reference element offsets\\n  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed);\\n\\n  // compute auto placement, store placement inside the data object,\\n  // modifiers will be able to edit `placement` if needed\\n  // and refer to originalPlacement to know the original value\\n  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);\\n\\n  // store the computed placement inside `originalPlacement`\\n  data.originalPlacement = data.placement;\\n\\n  data.positionFixed = this.options.positionFixed;\\n\\n  // compute the popper offsets\\n  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);\\n\\n  data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute';\\n\\n  // run the modifiers\\n  data = runModifiers(this.modifiers, data);\\n\\n  // the first `update` will call `onCreate` callback\\n  // the other ones will call `onUpdate` callback\\n  if (!this.state.isCreated) {\\n    this.state.isCreated = true;\\n    this.options.onCreate(data);\\n  } else {\\n    this.options.onUpdate(data);\\n  }\\n}\\n\\n/**\\n * Helper used to know if the given modifier is enabled.\\n * @method\\n * @memberof Popper.Utils\\n * @returns {Boolean}\\n */\\nfunction isModifierEnabled(modifiers, modifierName) {\\n  return modifiers.some(function (_ref) {\\n    var name = _ref.name,\\n        enabled = _ref.enabled;\\n    return enabled && name === modifierName;\\n  });\\n}\\n\\n/**\\n * Get the prefixed supported property name\\n * @method\\n * @memberof Popper.Utils\\n * @argument {String} property (camelCase)\\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\\n */\\nfunction getSupportedPropertyName(property) {\\n  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\\n  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);\\n\\n  for (var i = 0; i < prefixes.length; i++) {\\n    var prefix = prefixes[i];\\n    var toCheck = prefix ? '' + prefix + upperProp : property;\\n    if (typeof document.body.style[toCheck] !== 'undefined') {\\n      return toCheck;\\n    }\\n  }\\n  return null;\\n}\\n\\n/**\\n * Destroys the popper.\\n * @method\\n * @memberof Popper\\n */\\nfunction destroy() {\\n  this.state.isDestroyed = true;\\n\\n  // touch DOM only if `applyStyle` modifier is enabled\\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\\n    this.popper.removeAttribute('x-placement');\\n    this.popper.style.position = '';\\n    this.popper.style.top = '';\\n    this.popper.style.left = '';\\n    this.popper.style.right = '';\\n    this.popper.style.bottom = '';\\n    this.popper.style.willChange = '';\\n    this.popper.style[getSupportedPropertyName('transform')] = '';\\n  }\\n\\n  this.disableEventListeners();\\n\\n  // remove the popper if user explicity asked for the deletion on destroy\\n  // do not use `remove` because IE11 doesn't support it\\n  if (this.options.removeOnDestroy) {\\n    this.popper.parentNode.removeChild(this.popper);\\n  }\\n  return this;\\n}\\n\\n/**\\n * Get the window associated with the element\\n * @argument {Element} element\\n * @returns {Window}\\n */\\nfunction getWindow(element) {\\n  var ownerDocument = element.ownerDocument;\\n  return ownerDocument ? ownerDocument.defaultView : window;\\n}\\n\\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\\n  var isBody = scrollParent.nodeName === 'BODY';\\n  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\\n  target.addEventListener(event, callback, { passive: true });\\n\\n  if (!isBody) {\\n    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);\\n  }\\n  scrollParents.push(target);\\n}\\n\\n/**\\n * Setup needed event listeners used to update the popper position\\n * @method\\n * @memberof Popper.Utils\\n * @private\\n */\\nfunction setupEventListeners(reference, options, state, updateBound) {\\n  // Resize event listener on window\\n  state.updateBound = updateBound;\\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\\n\\n  // Scroll event listener on scroll parents\\n  var scrollElement = getScrollParent(reference);\\n  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);\\n  state.scrollElement = scrollElement;\\n  state.eventsEnabled = true;\\n\\n  return state;\\n}\\n\\n/**\\n * It will add resize/scroll events and start recalculating\\n * position of the popper element when they are triggered.\\n * @method\\n * @memberof Popper\\n */\\nfunction enableEventListeners() {\\n  if (!this.state.eventsEnabled) {\\n    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);\\n  }\\n}\\n\\n/**\\n * Remove event listeners used to update the popper position\\n * @method\\n * @memberof Popper.Utils\\n * @private\\n */\\nfunction removeEventListeners(reference, state) {\\n  // Remove resize event listener on window\\n  getWindow(reference).removeEventListener('resize', state.updateBound);\\n\\n  // Remove scroll event listener on scroll parents\\n  state.scrollParents.forEach(function (target) {\\n    target.removeEventListener('scroll', state.updateBound);\\n  });\\n\\n  // Reset state\\n  state.updateBound = null;\\n  state.scrollParents = [];\\n  state.scrollElement = null;\\n  state.eventsEnabled = false;\\n  return state;\\n}\\n\\n/**\\n * It will remove resize/scroll events and won't recalculate popper position\\n * when they are triggered. It also won't trigger `onUpdate` callback anymore,\\n * unless you call `update` method manually.\\n * @method\\n * @memberof Popper\\n */\\nfunction disableEventListeners() {\\n  if (this.state.eventsEnabled) {\\n    cancelAnimationFrame(this.scheduleUpdate);\\n    this.state = removeEventListeners(this.reference, this.state);\\n  }\\n}\\n\\n/**\\n * Tells if a given input is a number\\n * @method\\n * @memberof Popper.Utils\\n * @param {*} input to check\\n * @return {Boolean}\\n */\\nfunction isNumeric(n) {\\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\\n}\\n\\n/**\\n * Set the style to the given popper\\n * @method\\n * @memberof Popper.Utils\\n * @argument {Element} element - Element to apply the style to\\n * @argument {Object} styles\\n * Object with a list of properties and values which will be applied to the element\\n */\\nfunction setStyles(element, styles) {\\n  Object.keys(styles).forEach(function (prop) {\\n    var unit = '';\\n    // add unit if the value is numeric and is one of the following\\n    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {\\n      unit = 'px';\\n    }\\n    element.style[prop] = styles[prop] + unit;\\n  });\\n}\\n\\n/**\\n * Set the attributes to the given popper\\n * @method\\n * @memberof Popper.Utils\\n * @argument {Element} element - Element to apply the attributes to\\n * @argument {Object} styles\\n * Object with a list of properties and values which will be applied to the element\\n */\\nfunction setAttributes(element, attributes) {\\n  Object.keys(attributes).forEach(function (prop) {\\n    var value = attributes[prop];\\n    if (value !== false) {\\n      element.setAttribute(prop, attributes[prop]);\\n    } else {\\n      element.removeAttribute(prop);\\n    }\\n  });\\n}\\n\\n/**\\n * @function\\n * @memberof Modifiers\\n * @argument {Object} data - The data object generated by `update` method\\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\\n * @argument {Object} options - Modifiers configuration and options\\n * @returns {Object} The same data object\\n */\\nfunction applyStyle(data) {\\n  // any property present in `data.styles` will be applied to the popper,\\n  // in this way we can make the 3rd party modifiers add custom styles to it\\n  // Be aware, modifiers could override the properties defined in the previous\\n  // lines of this modifier!\\n  setStyles(data.instance.popper, data.styles);\\n\\n  // any property present in `data.attributes` will be applied to the popper,\\n  // they will be set as HTML attributes of the element\\n  setAttributes(data.instance.popper, data.attributes);\\n\\n  // if arrowElement is defined and arrowStyles has some properties\\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\\n    setStyles(data.arrowElement, data.arrowStyles);\\n  }\\n\\n  return data;\\n}\\n\\n/**\\n * Set the x-placement attribute before everything else because it could be used\\n * to add margins to the popper margins needs to be calculated to get the\\n * correct popper offsets.\\n * @method\\n * @memberof Popper.modifiers\\n * @param {HTMLElement} reference - The reference element used to position the popper\\n * @param {HTMLElement} popper - The HTML element used as popper\\n * @param {Object} options - Popper.js options\\n */\\nfunction applyStyleOnLoad(reference, popper, options, modifierOptions, state) {\\n  // compute reference element offsets\\n  var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\\n\\n  // compute auto placement, store placement inside the data object,\\n  // modifiers will be able to edit `placement` if needed\\n  // and refer to originalPlacement to know the original value\\n  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);\\n\\n  popper.setAttribute('x-placement', placement);\\n\\n  // Apply `position` to popper before anything else because\\n  // without the position applied we can't guarantee correct computations\\n  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });\\n\\n  return options;\\n}\\n\\n/**\\n * @function\\n * @memberof Popper.Utils\\n * @argument {Object} data - The data object generated by `update` method\\n * @argument {Boolean} shouldRound - If the offsets should be rounded at all\\n * @returns {Object} The popper's position offsets rounded\\n *\\n * The tale of pixel-perfect positioning. It's still not 100% perfect, but as\\n * good as it can be within reason.\\n * Discussion here: https://github.com/FezVrasta/popper.js/pull/715\\n *\\n * Low DPI screens cause a popper to be blurry if not using full pixels (Safari\\n * as well on High DPI screens).\\n *\\n * Firefox prefers no rounding for positioning and does not have blurriness on\\n * high DPI screens.\\n *\\n * Only horizontal placement and left/right values need to be considered.\\n */\\nfunction getRoundedOffsets(data, shouldRound) {\\n  var _data$offsets = data.offsets,\\n      popper = _data$offsets.popper,\\n      reference = _data$offsets.reference;\\n  var round = Math.round,\\n      floor = Math.floor;\\n\\n  var noRound = function noRound(v) {\\n    return v;\\n  };\\n\\n  var referenceWidth = round(reference.width);\\n  var popperWidth = round(popper.width);\\n\\n  var isVertical = ['left', 'right'].indexOf(data.placement) !== -1;\\n  var isVariation = data.placement.indexOf('-') !== -1;\\n  var sameWidthParity = referenceWidth % 2 === popperWidth % 2;\\n  var bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;\\n\\n  var horizontalToInteger = !shouldRound ? noRound : isVertical || isVariation || sameWidthParity ? round : floor;\\n  var verticalToInteger = !shouldRound ? noRound : round;\\n\\n  return {\\n    left: horizontalToInteger(bothOddWidth && !isVariation && shouldRound ? popper.left - 1 : popper.left),\\n    top: verticalToInteger(popper.top),\\n    bottom: verticalToInteger(popper.bottom),\\n    right: horizontalToInteger(popper.right)\\n  };\\n}\\n\\nvar isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);\\n\\n/**\\n * @function\\n * @memberof Modifiers\\n * @argument {Object} data - The data object generated by `update` method\\n * @argument {Object} options - Modifiers configuration and options\\n * @returns {Object} The data object, properly modified\\n */\\nfunction computeStyle(data, options) {\\n  var x = options.x,\\n      y = options.y;\\n  var popper = data.offsets.popper;\\n\\n  // Remove this legacy support in Popper.js v2\\n\\n  var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {\\n    return modifier.name === 'applyStyle';\\n  }).gpuAcceleration;\\n  if (legacyGpuAccelerationOption !== undefined) {\\n    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');\\n  }\\n  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;\\n\\n  var offsetParent = getOffsetParent(data.instance.popper);\\n  var offsetParentRect = getBoundingClientRect(offsetParent);\\n\\n  // Styles\\n  var styles = {\\n    position: popper.position\\n  };\\n\\n  var offsets = getRoundedOffsets(data, window.devicePixelRatio < 2 || !isFirefox);\\n\\n  var sideA = x === 'bottom' ? 'top' : 'bottom';\\n  var sideB = y === 'right' ? 'left' : 'right';\\n\\n  // if gpuAcceleration is set to `true` and transform is supported,\\n  //  we use `translate3d` to apply the position to the popper we\\n  // automatically use the supported prefixed version if needed\\n  var prefixedProperty = getSupportedPropertyName('transform');\\n\\n  // now, let's make a step back and look at this code closely (wtf?)\\n  // If the content of the popper grows once it's been positioned, it\\n  // may happen that the popper gets misplaced because of the new content\\n  // overflowing its reference element\\n  // To avoid this problem, we provide two options (x and y), which allow\\n  // the consumer to define the offset origin.\\n  // If we position a popper on top of a reference element, we can set\\n  // `x` to `top` to make the popper grow towards its top instead of\\n  // its bottom.\\n  var left = void 0,\\n      top = void 0;\\n  if (sideA === 'bottom') {\\n    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)\\n    // and not the bottom of the html element\\n    if (offsetParent.nodeName === 'HTML') {\\n      top = -offsetParent.clientHeight + offsets.bottom;\\n    } else {\\n      top = -offsetParentRect.height + offsets.bottom;\\n    }\\n  } else {\\n    top = offsets.top;\\n  }\\n  if (sideB === 'right') {\\n    if (offsetParent.nodeName === 'HTML') {\\n      left = -offsetParent.clientWidth + offsets.right;\\n    } else {\\n      left = -offsetParentRect.width + offsets.right;\\n    }\\n  } else {\\n    left = offsets.left;\\n  }\\n  if (gpuAcceleration && prefixedProperty) {\\n    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\\n    styles[sideA] = 0;\\n    styles[sideB] = 0;\\n    styles.willChange = 'transform';\\n  } else {\\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\\n    var invertTop = sideA === 'bottom' ? -1 : 1;\\n    var invertLeft = sideB === 'right' ? -1 : 1;\\n    styles[sideA] = top * invertTop;\\n    styles[sideB] = left * invertLeft;\\n    styles.willChange = sideA + ', ' + sideB;\\n  }\\n\\n  // Attributes\\n  var attributes = {\\n    'x-placement': data.placement\\n  };\\n\\n  // Update `data` attributes, styles and arrowStyles\\n  data.attributes = _extends({}, attributes, data.attributes);\\n  data.styles = _extends({}, styles, data.styles);\\n  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);\\n\\n  return data;\\n}\\n\\n/**\\n * Helper used to know if the given modifier depends from another one.<br />\\n * It checks if the needed modifier is listed and enabled.\\n * @method\\n * @memberof Popper.Utils\\n * @param {Array} modifiers - list of modifiers\\n * @param {String} requestingName - name of requesting modifier\\n * @param {String} requestedName - name of requested modifier\\n * @returns {Boolean}\\n */\\nfunction isModifierRequired(modifiers, requestingName, requestedName) {\\n  var requesting = find(modifiers, function (_ref) {\\n    var name = _ref.name;\\n    return name === requestingName;\\n  });\\n\\n  var isRequired = !!requesting && modifiers.some(function (modifier) {\\n    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;\\n  });\\n\\n  if (!isRequired) {\\n    var _requesting = '`' + requestingName + '`';\\n    var requested = '`' + requestedName + '`';\\n    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');\\n  }\\n  return isRequired;\\n}\\n\\n/**\\n * @function\\n * @memberof Modifiers\\n * @argument {Object} data - The data object generated by update method\\n * @argument {Object} options - Modifiers configuration and options\\n * @returns {Object} The data object, properly modified\\n */\\nfunction arrow(data, options) {\\n  var _data$offsets$arrow;\\n\\n  // arrow depends on keepTogether in order to work\\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\\n    return data;\\n  }\\n\\n  var arrowElement = options.element;\\n\\n  // if arrowElement is a string, suppose it's a CSS selector\\n  if (typeof arrowElement === 'string') {\\n    arrowElement = data.instance.popper.querySelector(arrowElement);\\n\\n    // if arrowElement is not found, don't run the modifier\\n    if (!arrowElement) {\\n      return data;\\n    }\\n  } else {\\n    // if the arrowElement isn't a query selector we must check that the\\n    // provided DOM node is child of its popper node\\n    if (!data.instance.popper.contains(arrowElement)) {\\n      console.warn('WARNING: `arrow.element` must be child of its popper element!');\\n      return data;\\n    }\\n  }\\n\\n  var placement = data.placement.split('-')[0];\\n  var _data$offsets = data.offsets,\\n      popper = _data$offsets.popper,\\n      reference = _data$offsets.reference;\\n\\n  var isVertical = ['left', 'right'].indexOf(placement) !== -1;\\n\\n  var len = isVertical ? 'height' : 'width';\\n  var sideCapitalized = isVertical ? 'Top' : 'Left';\\n  var side = sideCapitalized.toLowerCase();\\n  var altSide = isVertical ? 'left' : 'top';\\n  var opSide = isVertical ? 'bottom' : 'right';\\n  var arrowElementSize = getOuterSizes(arrowElement)[len];\\n\\n  //\\n  // extends keepTogether behavior making sure the popper and its\\n  // reference have enough pixels in conjunction\\n  //\\n\\n  // top/left side\\n  if (reference[opSide] - arrowElementSize < popper[side]) {\\n    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);\\n  }\\n  // bottom/right side\\n  if (reference[side] + arrowElementSize > popper[opSide]) {\\n    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];\\n  }\\n  data.offsets.popper = getClientRect(data.offsets.popper);\\n\\n  // compute center of the popper\\n  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\\n\\n  // Compute the sideValue using the updated popper offsets\\n  // take popper margin in account because we don't have this info available\\n  var css = getStyleComputedProperty(data.instance.popper);\\n  var popperMarginSide = parseFloat(css['margin' + sideCapitalized], 10);\\n  var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width'], 10);\\n  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\\n\\n  // prevent arrowElement from being placed not contiguously to its popper\\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\\n\\n  data.arrowElement = arrowElement;\\n  data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);\\n\\n  return data;\\n}\\n\\n/**\\n * Get the opposite placement variation of the given one\\n * @method\\n * @memberof Popper.Utils\\n * @argument {String} placement variation\\n * @returns {String} flipped placement variation\\n */\\nfunction getOppositeVariation(variation) {\\n  if (variation === 'end') {\\n    return 'start';\\n  } else if (variation === 'start') {\\n    return 'end';\\n  }\\n  return variation;\\n}\\n\\n/**\\n * List of accepted placements to use as values of the `placement` option.<br />\\n * Valid placements are:\\n * - `auto`\\n * - `top`\\n * - `right`\\n * - `bottom`\\n * - `left`\\n *\\n * Each placement can have a variation from this list:\\n * - `-start`\\n * - `-end`\\n *\\n * Variations are interpreted easily if you think of them as the left to right\\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\\n * is right.<br />\\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\\n *\\n * Some valid examples are:\\n * - `top-end` (on top of reference, right aligned)\\n * - `right-start` (on right of reference, top aligned)\\n * - `bottom` (on bottom, centered)\\n * - `auto-end` (on the side with more space available, alignment depends by placement)\\n *\\n * @static\\n * @type {Array}\\n * @enum {String}\\n * @readonly\\n * @method placements\\n * @memberof Popper\\n */\\nvar placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];\\n\\n// Get rid of `auto` `auto-start` and `auto-end`\\nvar validPlacements = placements.slice(3);\\n\\n/**\\n * Given an initial placement, returns all the subsequent placements\\n * clockwise (or counter-clockwise).\\n *\\n * @method\\n * @memberof Popper.Utils\\n * @argument {String} placement - A valid placement (it accepts variations)\\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\\n * @returns {Array} placements including their variations\\n */\\nfunction clockwise(placement) {\\n  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\\n\\n  var index = validPlacements.indexOf(placement);\\n  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));\\n  return counter ? arr.reverse() : arr;\\n}\\n\\nvar BEHAVIORS = {\\n  FLIP: 'flip',\\n  CLOCKWISE: 'clockwise',\\n  COUNTERCLOCKWISE: 'counterclockwise'\\n};\\n\\n/**\\n * @function\\n * @memberof Modifiers\\n * @argument {Object} data - The data object generated by update method\\n * @argument {Object} options - Modifiers configuration and options\\n * @returns {Object} The data object, properly modified\\n */\\nfunction flip(data, options) {\\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\\n    return data;\\n  }\\n\\n  if (data.flipped && data.placement === data.originalPlacement) {\\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\\n    return data;\\n  }\\n\\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);\\n\\n  var placement = data.placement.split('-')[0];\\n  var placementOpposite = getOppositePlacement(placement);\\n  var variation = data.placement.split('-')[1] || '';\\n\\n  var flipOrder = [];\\n\\n  switch (options.behavior) {\\n    case BEHAVIORS.FLIP:\\n      flipOrder = [placement, placementOpposite];\\n      break;\\n    case BEHAVIORS.CLOCKWISE:\\n      flipOrder = clockwise(placement);\\n      break;\\n    case BEHAVIORS.COUNTERCLOCKWISE:\\n      flipOrder = clockwise(placement, true);\\n      break;\\n    default:\\n      flipOrder = options.behavior;\\n  }\\n\\n  flipOrder.forEach(function (step, index) {\\n    if (placement !== step || flipOrder.length === index + 1) {\\n      return data;\\n    }\\n\\n    placement = data.placement.split('-')[0];\\n    placementOpposite = getOppositePlacement(placement);\\n\\n    var popperOffsets = data.offsets.popper;\\n    var refOffsets = data.offsets.reference;\\n\\n    // using floor because the reference offsets may contain decimals we are not going to consider here\\n    var floor = Math.floor;\\n    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);\\n\\n    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\\n    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\\n    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\\n    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);\\n\\n    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;\\n\\n    // flip the variation if required\\n    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\\n    var flippedVariation = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);\\n\\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\\n      // this boolean to detect any flip loop\\n      data.flipped = true;\\n\\n      if (overlapsRef || overflowsBoundaries) {\\n        placement = flipOrder[index + 1];\\n      }\\n\\n      if (flippedVariation) {\\n        variation = getOppositeVariation(variation);\\n      }\\n\\n      data.placement = placement + (variation ? '-' + variation : '');\\n\\n      // this object contains `position`, we want to preserve it along with\\n      // any additional property we may add in the future\\n      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));\\n\\n      data = runModifiers(data.instance.modifiers, data, 'flip');\\n    }\\n  });\\n  return data;\\n}\\n\\n/**\\n * @function\\n * @memberof Modifiers\\n * @argument {Object} data - The data object generated by update method\\n * @argument {Object} options - Modifiers configuration and options\\n * @returns {Object} The data object, properly modified\\n */\\nfunction keepTogether(data) {\\n  var _data$offsets = data.offsets,\\n      popper = _data$offsets.popper,\\n      reference = _data$offsets.reference;\\n\\n  var placement = data.placement.split('-')[0];\\n  var floor = Math.floor;\\n  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\\n  var side = isVertical ? 'right' : 'bottom';\\n  var opSide = isVertical ? 'left' : 'top';\\n  var measurement = isVertical ? 'width' : 'height';\\n\\n  if (popper[side] < floor(reference[opSide])) {\\n    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];\\n  }\\n  if (popper[opSide] > floor(reference[side])) {\\n    data.offsets.popper[opSide] = floor(reference[side]);\\n  }\\n\\n  return data;\\n}\\n\\n/**\\n * Converts a string containing value + unit into a px value number\\n * @function\\n * @memberof {modifiers~offset}\\n * @private\\n * @argument {String} str - Value + unit string\\n * @argument {String} measurement - `height` or `width`\\n * @argument {Object} popperOffsets\\n * @argument {Object} referenceOffsets\\n * @returns {Number|String}\\n * Value in pixels, or original string if no values were extracted\\n */\\nfunction toValue(str, measurement, popperOffsets, referenceOffsets) {\\n  // separate value from unit\\n  var split = str.match(/((?:\\\\-|\\\\+)?\\\\d*\\\\.?\\\\d*)(.*)/);\\n  var value = +split[1];\\n  var unit = split[2];\\n\\n  // If it's not a number it's an operator, I guess\\n  if (!value) {\\n    return str;\\n  }\\n\\n  if (unit.indexOf('%') === 0) {\\n    var element = void 0;\\n    switch (unit) {\\n      case '%p':\\n        element = popperOffsets;\\n        break;\\n      case '%':\\n      case '%r':\\n      default:\\n        element = referenceOffsets;\\n    }\\n\\n    var rect = getClientRect(element);\\n    return rect[measurement] / 100 * value;\\n  } else if (unit === 'vh' || unit === 'vw') {\\n    // if is a vh or vw, we calculate the size based on the viewport\\n    var size = void 0;\\n    if (unit === 'vh') {\\n      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\\n    } else {\\n      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\\n    }\\n    return size / 100 * value;\\n  } else {\\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\\n    // if is an implicit unit, it's px, and we return just the value\\n    return value;\\n  }\\n}\\n\\n/**\\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\\n * @function\\n * @memberof {modifiers~offset}\\n * @private\\n * @argument {String} offset\\n * @argument {Object} popperOffsets\\n * @argument {Object} referenceOffsets\\n * @argument {String} basePlacement\\n * @returns {Array} a two cells array with x and y offsets in numbers\\n */\\nfunction parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {\\n  var offsets = [0, 0];\\n\\n  // Use height if placement is left or right and index is 0 otherwise use width\\n  // in this way the first offset will use an axis and the second one\\n  // will use the other one\\n  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\\n\\n  // Split the offset string to obtain a list of values and operands\\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\\n  var fragments = offset.split(/(\\\\+|\\\\-)/).map(function (frag) {\\n    return frag.trim();\\n  });\\n\\n  // Detect if the offset string contains a pair of values or a single one\\n  // they could be separated by comma or space\\n  var divider = fragments.indexOf(find(fragments, function (frag) {\\n    return frag.search(/,|\\\\s/) !== -1;\\n  }));\\n\\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\\n    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');\\n  }\\n\\n  // If divider is found, we divide the list of values and operands to divide\\n  // them by ofset X and Y.\\n  var splitRegex = /\\\\s*,\\\\s*|\\\\s+/;\\n  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];\\n\\n  // Convert the values with units to absolute pixels to allow our computations\\n  ops = ops.map(function (op, index) {\\n    // Most of the units rely on the orientation of the popper\\n    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';\\n    var mergeWithPrevious = false;\\n    return op\\n    // This aggregates any `+` or `-` sign that aren't considered operators\\n    // e.g.: 10 + +5 => [10, +, +5]\\n    .reduce(function (a, b) {\\n      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\\n        a[a.length - 1] = b;\\n        mergeWithPrevious = true;\\n        return a;\\n      } else if (mergeWithPrevious) {\\n        a[a.length - 1] += b;\\n        mergeWithPrevious = false;\\n        return a;\\n      } else {\\n        return a.concat(b);\\n      }\\n    }, [])\\n    // Here we convert the string values into number values (in px)\\n    .map(function (str) {\\n      return toValue(str, measurement, popperOffsets, referenceOffsets);\\n    });\\n  });\\n\\n  // Loop trough the offsets arrays and execute the operations\\n  ops.forEach(function (op, index) {\\n    op.forEach(function (frag, index2) {\\n      if (isNumeric(frag)) {\\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\\n      }\\n    });\\n  });\\n  return offsets;\\n}\\n\\n/**\\n * @function\\n * @memberof Modifiers\\n * @argument {Object} data - The data object generated by update method\\n * @argument {Object} options - Modifiers configuration and options\\n * @argument {Number|String} options.offset=0\\n * The offset value as described in the modifier description\\n * @returns {Object} The data object, properly modified\\n */\\nfunction offset(data, _ref) {\\n  var offset = _ref.offset;\\n  var placement = data.placement,\\n      _data$offsets = data.offsets,\\n      popper = _data$offsets.popper,\\n      reference = _data$offsets.reference;\\n\\n  var basePlacement = placement.split('-')[0];\\n\\n  var offsets = void 0;\\n  if (isNumeric(+offset)) {\\n    offsets = [+offset, 0];\\n  } else {\\n    offsets = parseOffset(offset, popper, reference, basePlacement);\\n  }\\n\\n  if (basePlacement === 'left') {\\n    popper.top += offsets[0];\\n    popper.left -= offsets[1];\\n  } else if (basePlacement === 'right') {\\n    popper.top += offsets[0];\\n    popper.left += offsets[1];\\n  } else if (basePlacement === 'top') {\\n    popper.left += offsets[0];\\n    popper.top -= offsets[1];\\n  } else if (basePlacement === 'bottom') {\\n    popper.left += offsets[0];\\n    popper.top += offsets[1];\\n  }\\n\\n  data.popper = popper;\\n  return data;\\n}\\n\\n/**\\n * @function\\n * @memberof Modifiers\\n * @argument {Object} data - The data object generated by `update` method\\n * @argument {Object} options - Modifiers configuration and options\\n * @returns {Object} The data object, properly modified\\n */\\nfunction preventOverflow(data, options) {\\n  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);\\n\\n  // If offsetParent is the reference element, we really want to\\n  // go one step up and use the next offsetParent as reference to\\n  // avoid to make this modifier completely useless and look like broken\\n  if (data.instance.reference === boundariesElement) {\\n    boundariesElement = getOffsetParent(boundariesElement);\\n  }\\n\\n  // NOTE: DOM access here\\n  // resets the popper's position so that the document size can be calculated excluding\\n  // the size of the popper element itself\\n  var transformProp = getSupportedPropertyName('transform');\\n  var popperStyles = data.instance.popper.style; // assignment to help minification\\n  var top = popperStyles.top,\\n      left = popperStyles.left,\\n      transform = popperStyles[transformProp];\\n\\n  popperStyles.top = '';\\n  popperStyles.left = '';\\n  popperStyles[transformProp] = '';\\n\\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);\\n\\n  // NOTE: DOM access here\\n  // restores the original style properties after the offsets have been computed\\n  popperStyles.top = top;\\n  popperStyles.left = left;\\n  popperStyles[transformProp] = transform;\\n\\n  options.boundaries = boundaries;\\n\\n  var order = options.priority;\\n  var popper = data.offsets.popper;\\n\\n  var check = {\\n    primary: function primary(placement) {\\n      var value = popper[placement];\\n      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {\\n        value = Math.max(popper[placement], boundaries[placement]);\\n      }\\n      return defineProperty({}, placement, value);\\n    },\\n    secondary: function secondary(placement) {\\n      var mainSide = placement === 'right' ? 'left' : 'top';\\n      var value = popper[mainSide];\\n      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {\\n        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));\\n      }\\n      return defineProperty({}, mainSide, value);\\n    }\\n  };\\n\\n  order.forEach(function (placement) {\\n    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\\n    popper = _extends({}, popper, check[side](placement));\\n  });\\n\\n  data.offsets.popper = popper;\\n\\n  return data;\\n}\\n\\n/**\\n * @function\\n * @memberof Modifiers\\n * @argument {Object} data - The data object generated by `update` method\\n * @argument {Object} options - Modifiers configuration and options\\n * @returns {Object} The data object, properly modified\\n */\\nfunction shift(data) {\\n  var placement = data.placement;\\n  var basePlacement = placement.split('-')[0];\\n  var shiftvariation = placement.split('-')[1];\\n\\n  // if shift shiftvariation is specified, run the modifier\\n  if (shiftvariation) {\\n    var _data$offsets = data.offsets,\\n        reference = _data$offsets.reference,\\n        popper = _data$offsets.popper;\\n\\n    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\\n    var side = isVertical ? 'left' : 'top';\\n    var measurement = isVertical ? 'width' : 'height';\\n\\n    var shiftOffsets = {\\n      start: defineProperty({}, side, reference[side]),\\n      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])\\n    };\\n\\n    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);\\n  }\\n\\n  return data;\\n}\\n\\n/**\\n * @function\\n * @memberof Modifiers\\n * @argument {Object} data - The data object generated by update method\\n * @argument {Object} options - Modifiers configuration and options\\n * @returns {Object} The data object, properly modified\\n */\\nfunction hide(data) {\\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\\n    return data;\\n  }\\n\\n  var refRect = data.offsets.reference;\\n  var bound = find(data.instance.modifiers, function (modifier) {\\n    return modifier.name === 'preventOverflow';\\n  }).boundaries;\\n\\n  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {\\n    // Avoid unnecessary DOM access if visibility hasn't changed\\n    if (data.hide === true) {\\n      return data;\\n    }\\n\\n    data.hide = true;\\n    data.attributes['x-out-of-boundaries'] = '';\\n  } else {\\n    // Avoid unnecessary DOM access if visibility hasn't changed\\n    if (data.hide === false) {\\n      return data;\\n    }\\n\\n    data.hide = false;\\n    data.attributes['x-out-of-boundaries'] = false;\\n  }\\n\\n  return data;\\n}\\n\\n/**\\n * @function\\n * @memberof Modifiers\\n * @argument {Object} data - The data object generated by `update` method\\n * @argument {Object} options - Modifiers configuration and options\\n * @returns {Object} The data object, properly modified\\n */\\nfunction inner(data) {\\n  var placement = data.placement;\\n  var basePlacement = placement.split('-')[0];\\n  var _data$offsets = data.offsets,\\n      popper = _data$offsets.popper,\\n      reference = _data$offsets.reference;\\n\\n  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\\n\\n  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\\n\\n  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\\n\\n  data.placement = getOppositePlacement(placement);\\n  data.offsets.popper = getClientRect(popper);\\n\\n  return data;\\n}\\n\\n/**\\n * Modifier function, each modifier can have a function of this type assigned\\n * to its `fn` property.<br />\\n * These functions will be called on each update, this means that you must\\n * make sure they are performant enough to avoid performance bottlenecks.\\n *\\n * @function ModifierFn\\n * @argument {dataObject} data - The data object generated by `update` method\\n * @argument {Object} options - Modifiers configuration and options\\n * @returns {dataObject} The data object, properly modified\\n */\\n\\n/**\\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\\n * needed by the library.\\n *\\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\\n * All the other properties are configurations that could be tweaked.\\n * @namespace modifiers\\n */\\nvar modifiers = {\\n  /**\\n   * Modifier used to shift the popper on the start or end of its reference\\n   * element.<br />\\n   * It will read the variation of the `placement` property.<br />\\n   * It can be one either `-end` or `-start`.\\n   * @memberof modifiers\\n   * @inner\\n   */\\n  shift: {\\n    /** @prop {number} order=100 - Index used to define the order of execution */\\n    order: 100,\\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\\n    enabled: true,\\n    /** @prop {ModifierFn} */\\n    fn: shift\\n  },\\n\\n  /**\\n   * The `offset` modifier can shift your popper on both its axis.\\n   *\\n   * It accepts the following units:\\n   * - `px` or unit-less, interpreted as pixels\\n   * - `%` or `%r`, percentage relative to the length of the reference element\\n   * - `%p`, percentage relative to the length of the popper element\\n   * - `vw`, CSS viewport width unit\\n   * - `vh`, CSS viewport height unit\\n   *\\n   * For length is intended the main axis relative to the placement of the popper.<br />\\n   * This means that if the placement is `top` or `bottom`, the length will be the\\n   * `width`. In case of `left` or `right`, it will be the `height`.\\n   *\\n   * You can provide a single value (as `Number` or `String`), or a pair of values\\n   * as `String` divided by a comma or one (or more) white spaces.<br />\\n   * The latter is a deprecated method because it leads to confusion and will be\\n   * removed in v2.<br />\\n   * Additionally, it accepts additions and subtractions between different units.\\n   * Note that multiplications and divisions aren't supported.\\n   *\\n   * Valid examples are:\\n   * ```\\n   * 10\\n   * '10%'\\n   * '10, 10'\\n   * '10%, 10'\\n   * '10 + 10%'\\n   * '10 - 5vh + 3%'\\n   * '-10px + 5vh, 5px - 6%'\\n   * ```\\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\\n   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).\\n   *\\n   * @memberof modifiers\\n   * @inner\\n   */\\n  offset: {\\n    /** @prop {number} order=200 - Index used to define the order of execution */\\n    order: 200,\\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\\n    enabled: true,\\n    /** @prop {ModifierFn} */\\n    fn: offset,\\n    /** @prop {Number|String} offset=0\\n     * The offset value as described in the modifier description\\n     */\\n    offset: 0\\n  },\\n\\n  /**\\n   * Modifier used to prevent the popper from being positioned outside the boundary.\\n   *\\n   * A scenario exists where the reference itself is not within the boundaries.<br />\\n   * We can say it has \\\"escaped the boundaries\\\" — or just \\\"escaped\\\".<br />\\n   * In this case we need to decide whether the popper should either:\\n   *\\n   * - detach from the reference and remain \\\"trapped\\\" in the boundaries, or\\n   * - if it should ignore the boundary and \\\"escape with its reference\\\"\\n   *\\n   * When `escapeWithReference` is set to`true` and reference is completely\\n   * outside its boundaries, the popper will overflow (or completely leave)\\n   * the boundaries in order to remain attached to the edge of the reference.\\n   *\\n   * @memberof modifiers\\n   * @inner\\n   */\\n  preventOverflow: {\\n    /** @prop {number} order=300 - Index used to define the order of execution */\\n    order: 300,\\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\\n    enabled: true,\\n    /** @prop {ModifierFn} */\\n    fn: preventOverflow,\\n    /**\\n     * @prop {Array} [priority=['left','right','top','bottom']]\\n     * Popper will try to prevent overflow following these priorities by default,\\n     * then, it could overflow on the left and on top of the `boundariesElement`\\n     */\\n    priority: ['left', 'right', 'top', 'bottom'],\\n    /**\\n     * @prop {number} padding=5\\n     * Amount of pixel used to define a minimum distance between the boundaries\\n     * and the popper. This makes sure the popper always has a little padding\\n     * between the edges of its container\\n     */\\n    padding: 5,\\n    /**\\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\\n     * Boundaries used by the modifier. Can be `scrollParent`, `window`,\\n     * `viewport` or any DOM element.\\n     */\\n    boundariesElement: 'scrollParent'\\n  },\\n\\n  /**\\n   * Modifier used to make sure the reference and its popper stay near each other\\n   * without leaving any gap between the two. Especially useful when the arrow is\\n   * enabled and you want to ensure that it points to its reference element.\\n   * It cares only about the first axis. You can still have poppers with margin\\n   * between the popper and its reference element.\\n   * @memberof modifiers\\n   * @inner\\n   */\\n  keepTogether: {\\n    /** @prop {number} order=400 - Index used to define the order of execution */\\n    order: 400,\\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\\n    enabled: true,\\n    /** @prop {ModifierFn} */\\n    fn: keepTogether\\n  },\\n\\n  /**\\n   * This modifier is used to move the `arrowElement` of the popper to make\\n   * sure it is positioned between the reference element and its popper element.\\n   * It will read the outer size of the `arrowElement` node to detect how many\\n   * pixels of conjunction are needed.\\n   *\\n   * It has no effect if no `arrowElement` is provided.\\n   * @memberof modifiers\\n   * @inner\\n   */\\n  arrow: {\\n    /** @prop {number} order=500 - Index used to define the order of execution */\\n    order: 500,\\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\\n    enabled: true,\\n    /** @prop {ModifierFn} */\\n    fn: arrow,\\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\\n    element: '[x-arrow]'\\n  },\\n\\n  /**\\n   * Modifier used to flip the popper's placement when it starts to overlap its\\n   * reference element.\\n   *\\n   * Requires the `preventOverflow` modifier before it in order to work.\\n   *\\n   * **NOTE:** this modifier will interrupt the current update cycle and will\\n   * restart it if it detects the need to flip the placement.\\n   * @memberof modifiers\\n   * @inner\\n   */\\n  flip: {\\n    /** @prop {number} order=600 - Index used to define the order of execution */\\n    order: 600,\\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\\n    enabled: true,\\n    /** @prop {ModifierFn} */\\n    fn: flip,\\n    /**\\n     * @prop {String|Array} behavior='flip'\\n     * The behavior used to change the popper's placement. It can be one of\\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\\n     * placements (with optional variations)\\n     */\\n    behavior: 'flip',\\n    /**\\n     * @prop {number} padding=5\\n     * The popper will flip if it hits the edges of the `boundariesElement`\\n     */\\n    padding: 5,\\n    /**\\n     * @prop {String|HTMLElement} boundariesElement='viewport'\\n     * The element which will define the boundaries of the popper position.\\n     * The popper will never be placed outside of the defined boundaries\\n     * (except if `keepTogether` is enabled)\\n     */\\n    boundariesElement: 'viewport'\\n  },\\n\\n  /**\\n   * Modifier used to make the popper flow toward the inner of the reference element.\\n   * By default, when this modifier is disabled, the popper will be placed outside\\n   * the reference element.\\n   * @memberof modifiers\\n   * @inner\\n   */\\n  inner: {\\n    /** @prop {number} order=700 - Index used to define the order of execution */\\n    order: 700,\\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\\n    enabled: false,\\n    /** @prop {ModifierFn} */\\n    fn: inner\\n  },\\n\\n  /**\\n   * Modifier used to hide the popper when its reference element is outside of the\\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\\n   * be used to hide with a CSS selector the popper when its reference is\\n   * out of boundaries.\\n   *\\n   * Requires the `preventOverflow` modifier before it in order to work.\\n   * @memberof modifiers\\n   * @inner\\n   */\\n  hide: {\\n    /** @prop {number} order=800 - Index used to define the order of execution */\\n    order: 800,\\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\\n    enabled: true,\\n    /** @prop {ModifierFn} */\\n    fn: hide\\n  },\\n\\n  /**\\n   * Computes the style that will be applied to the popper element to gets\\n   * properly positioned.\\n   *\\n   * Note that this modifier will not touch the DOM, it just prepares the styles\\n   * so that `applyStyle` modifier can apply it. This separation is useful\\n   * in case you need to replace `applyStyle` with a custom implementation.\\n   *\\n   * This modifier has `850` as `order` value to maintain backward compatibility\\n   * with previous versions of Popper.js. Expect the modifiers ordering method\\n   * to change in future major versions of the library.\\n   *\\n   * @memberof modifiers\\n   * @inner\\n   */\\n  computeStyle: {\\n    /** @prop {number} order=850 - Index used to define the order of execution */\\n    order: 850,\\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\\n    enabled: true,\\n    /** @prop {ModifierFn} */\\n    fn: computeStyle,\\n    /**\\n     * @prop {Boolean} gpuAcceleration=true\\n     * If true, it uses the CSS 3D transformation to position the popper.\\n     * Otherwise, it will use the `top` and `left` properties\\n     */\\n    gpuAcceleration: true,\\n    /**\\n     * @prop {string} [x='bottom']\\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\\n     * Change this if your popper should grow in a direction different from `bottom`\\n     */\\n    x: 'bottom',\\n    /**\\n     * @prop {string} [x='left']\\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\\n     * Change this if your popper should grow in a direction different from `right`\\n     */\\n    y: 'right'\\n  },\\n\\n  /**\\n   * Applies the computed styles to the popper element.\\n   *\\n   * All the DOM manipulations are limited to this modifier. This is useful in case\\n   * you want to integrate Popper.js inside a framework or view library and you\\n   * want to delegate all the DOM manipulations to it.\\n   *\\n   * Note that if you disable this modifier, you must make sure the popper element\\n   * has its position set to `absolute` before Popper.js can do its work!\\n   *\\n   * Just disable this modifier and define your own to achieve the desired effect.\\n   *\\n   * @memberof modifiers\\n   * @inner\\n   */\\n  applyStyle: {\\n    /** @prop {number} order=900 - Index used to define the order of execution */\\n    order: 900,\\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\\n    enabled: true,\\n    /** @prop {ModifierFn} */\\n    fn: applyStyle,\\n    /** @prop {Function} */\\n    onLoad: applyStyleOnLoad,\\n    /**\\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\\n     * @prop {Boolean} gpuAcceleration=true\\n     * If true, it uses the CSS 3D transformation to position the popper.\\n     * Otherwise, it will use the `top` and `left` properties\\n     */\\n    gpuAcceleration: undefined\\n  }\\n};\\n\\n/**\\n * The `dataObject` is an object containing all the information used by Popper.js.\\n * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\\n * @name dataObject\\n * @property {Object} data.instance The Popper.js instance\\n * @property {String} data.placement Placement applied to popper\\n * @property {String} data.originalPlacement Placement originally defined on init\\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper\\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)\\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)\\n * @property {Object} data.boundaries Offsets of the popper boundaries\\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements\\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\\n */\\n\\n/**\\n * Default options provided to Popper.js constructor.<br />\\n * These can be overridden using the `options` argument of Popper.js.<br />\\n * To override an option, simply pass an object with the same\\n * structure of the `options` object, as the 3rd argument. For example:\\n * ```\\n * new Popper(ref, pop, {\\n *   modifiers: {\\n *     preventOverflow: { enabled: false }\\n *   }\\n * })\\n * ```\\n * @type {Object}\\n * @static\\n * @memberof Popper\\n */\\nvar Defaults = {\\n  /**\\n   * Popper's placement.\\n   * @prop {Popper.placements} placement='bottom'\\n   */\\n  placement: 'bottom',\\n\\n  /**\\n   * Set this to true if you want popper to position it self in 'fixed' mode\\n   * @prop {Boolean} positionFixed=false\\n   */\\n  positionFixed: false,\\n\\n  /**\\n   * Whether events (resize, scroll) are initially enabled.\\n   * @prop {Boolean} eventsEnabled=true\\n   */\\n  eventsEnabled: true,\\n\\n  /**\\n   * Set to true if you want to automatically remove the popper when\\n   * you call the `destroy` method.\\n   * @prop {Boolean} removeOnDestroy=false\\n   */\\n  removeOnDestroy: false,\\n\\n  /**\\n   * Callback called when the popper is created.<br />\\n   * By default, it is set to no-op.<br />\\n   * Access Popper.js instance with `data.instance`.\\n   * @prop {onCreate}\\n   */\\n  onCreate: function onCreate() {},\\n\\n  /**\\n   * Callback called when the popper is updated. This callback is not called\\n   * on the initialization/creation of the popper, but only on subsequent\\n   * updates.<br />\\n   * By default, it is set to no-op.<br />\\n   * Access Popper.js instance with `data.instance`.\\n   * @prop {onUpdate}\\n   */\\n  onUpdate: function onUpdate() {},\\n\\n  /**\\n   * List of modifiers used to modify the offsets before they are applied to the popper.\\n   * They provide most of the functionalities of Popper.js.\\n   * @prop {modifiers}\\n   */\\n  modifiers: modifiers\\n};\\n\\n/**\\n * @callback onCreate\\n * @param {dataObject} data\\n */\\n\\n/**\\n * @callback onUpdate\\n * @param {dataObject} data\\n */\\n\\n// Utils\\n// Methods\\nvar Popper = function () {\\n  /**\\n   * Creates a new Popper.js instance.\\n   * @class Popper\\n   * @param {HTMLElement|referenceObject} reference - The reference element used to position the popper\\n   * @param {HTMLElement} popper - The HTML element used as the popper\\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\\n   * @return {Object} instance - The generated Popper.js instance\\n   */\\n  function Popper(reference, popper) {\\n    var _this = this;\\n\\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\\n    classCallCheck(this, Popper);\\n\\n    this.scheduleUpdate = function () {\\n      return requestAnimationFrame(_this.update);\\n    };\\n\\n    // make update() debounced, so that it only runs at most once-per-tick\\n    this.update = debounce(this.update.bind(this));\\n\\n    // with {} we create a new object with the options inside it\\n    this.options = _extends({}, Popper.Defaults, options);\\n\\n    // init state\\n    this.state = {\\n      isDestroyed: false,\\n      isCreated: false,\\n      scrollParents: []\\n    };\\n\\n    // get reference and popper elements (allow jQuery wrappers)\\n    this.reference = reference && reference.jquery ? reference[0] : reference;\\n    this.popper = popper && popper.jquery ? popper[0] : popper;\\n\\n    // Deep merge modifiers options\\n    this.options.modifiers = {};\\n    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {\\n      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});\\n    });\\n\\n    // Refactoring modifiers' list (Object => Array)\\n    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {\\n      return _extends({\\n        name: name\\n      }, _this.options.modifiers[name]);\\n    })\\n    // sort the modifiers by order\\n    .sort(function (a, b) {\\n      return a.order - b.order;\\n    });\\n\\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\\n    // such code is executed in the same order of its modifier\\n    // they could add new properties to their options configuration\\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\\n    this.modifiers.forEach(function (modifierOptions) {\\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\\n        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);\\n      }\\n    });\\n\\n    // fire the first update to position the popper in the right place\\n    this.update();\\n\\n    var eventsEnabled = this.options.eventsEnabled;\\n    if (eventsEnabled) {\\n      // setup event listeners, they will take care of update the position in specific situations\\n      this.enableEventListeners();\\n    }\\n\\n    this.state.eventsEnabled = eventsEnabled;\\n  }\\n\\n  // We can't use class properties because they don't get listed in the\\n  // class prototype and break stuff like Sinon stubs\\n\\n\\n  createClass(Popper, [{\\n    key: 'update',\\n    value: function update$$1() {\\n      return update.call(this);\\n    }\\n  }, {\\n    key: 'destroy',\\n    value: function destroy$$1() {\\n      return destroy.call(this);\\n    }\\n  }, {\\n    key: 'enableEventListeners',\\n    value: function enableEventListeners$$1() {\\n      return enableEventListeners.call(this);\\n    }\\n  }, {\\n    key: 'disableEventListeners',\\n    value: function disableEventListeners$$1() {\\n      return disableEventListeners.call(this);\\n    }\\n\\n    /**\\n     * Schedules an update. It will run on the next UI update available.\\n     * @method scheduleUpdate\\n     * @memberof Popper\\n     */\\n\\n\\n    /**\\n     * Collection of utilities useful when writing custom modifiers.\\n     * Starting from version 1.7, this method is available only if you\\n     * include `popper-utils.js` before `popper.js`.\\n     *\\n     * **DEPRECATION**: This way to access PopperUtils is deprecated\\n     * and will be removed in v2! Use the PopperUtils module directly instead.\\n     * Due to the high instability of the methods contained in Utils, we can't\\n     * guarantee them to follow semver. Use them at your own risk!\\n     * @static\\n     * @private\\n     * @type {Object}\\n     * @deprecated since version 1.8\\n     * @member Utils\\n     * @memberof Popper\\n     */\\n\\n  }]);\\n  return Popper;\\n}();\\n\\n/**\\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\\n * and lets you use it as replacement of a real DOM node.<br />\\n * You can use this method to position a popper relatively to a set of coordinates\\n * in case you don't have a DOM node to use as reference.\\n *\\n * ```\\n * new Popper(referenceObject, popperNode);\\n * ```\\n *\\n * NB: This feature isn't supported in Internet Explorer 10.\\n * @name referenceObject\\n * @property {Function} data.getBoundingClientRect\\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\\n * @property {number} data.clientWidth\\n * An ES6 getter that will return the width of the virtual reference element.\\n * @property {number} data.clientHeight\\n * An ES6 getter that will return the height of the virtual reference element.\\n */\\n\\n\\nPopper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\\nPopper.placements = placements;\\nPopper.Defaults = Defaults;\\n\\nexport default Popper;\\n//# sourceMappingURL=popper.js.map\\n\"]}","code":"(window[\"webpackJsonp\"]=window[\"webpackJsonp\"]||[]).push([[\"chunk-2d22bf42\"],{f0bd:function(e,t,n){\"use strict\";n.r(t),function(e){for(\n/**!\n * @fileOverview Kickass library to create and place poppers near their reference elements.\n * @version 1.14.7\n * @license\n * Copyright (c) 2016 Federico Zivolo and contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar n=\"undefined\"!==typeof window&&\"undefined\"!==typeof document,o=[\"Edge\",\"Trident\",\"Firefox\"],r=0,i=0;i<o.length;i+=1)if(n&&navigator.userAgent.indexOf(o[i])>=0){r=1;break}function a(e){var t=!1;return function(){t||(t=!0,window.Promise.resolve().then(function(){t=!1,e()}))}}function s(e){var t=!1;return function(){t||(t=!0,setTimeout(function(){t=!1,e()},r))}}var f=n&&window.Promise,p=f?a:s;function l(e){var t={};return e&&\"[object Function]\"===t.toString.call(e)}function u(e,t){if(1!==e.nodeType)return[];var n=e.ownerDocument.defaultView,o=n.getComputedStyle(e,null);return t?o[t]:o}function d(e){return\"HTML\"===e.nodeName?e:e.parentNode||e.host}function c(e){if(!e)return document.body;switch(e.nodeName){case\"HTML\":case\"BODY\":return e.ownerDocument.body;case\"#document\":return e.body}var t=u(e),n=t.overflow,o=t.overflowX,r=t.overflowY;return/(auto|scroll|overlay)/.test(n+r+o)?e:c(d(e))}var h=n&&!(!window.MSInputMethodContext||!document.documentMode),m=n&&/MSIE 10/.test(navigator.userAgent);function v(e){return 11===e?h:10===e?m:h||m}function g(e){if(!e)return document.documentElement;var t=v(10)?document.body:null,n=e.offsetParent||null;while(n===t&&e.nextElementSibling)n=(e=e.nextElementSibling).offsetParent;var o=n&&n.nodeName;return o&&\"BODY\"!==o&&\"HTML\"!==o?-1!==[\"TH\",\"TD\",\"TABLE\"].indexOf(n.nodeName)&&\"static\"===u(n,\"position\")?g(n):n:e?e.ownerDocument.documentElement:document.documentElement}function b(e){var t=e.nodeName;return\"BODY\"!==t&&(\"HTML\"===t||g(e.firstElementChild)===e)}function w(e){return null!==e.parentNode?w(e.parentNode):e}function y(e,t){if(!e||!e.nodeType||!t||!t.nodeType)return document.documentElement;var n=e.compareDocumentPosition(t)&Node.DOCUMENT_POSITION_FOLLOWING,o=n?e:t,r=n?t:e,i=document.createRange();i.setStart(o,0),i.setEnd(r,0);var a=i.commonAncestorContainer;if(e!==a&&t!==a||o.contains(r))return b(a)?a:g(a);var s=w(e);return s.host?y(s.host,t):y(e,w(t).host)}function E(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"top\",n=\"top\"===t?\"scrollTop\":\"scrollLeft\",o=e.nodeName;if(\"BODY\"===o||\"HTML\"===o){var r=e.ownerDocument.documentElement,i=e.ownerDocument.scrollingElement||r;return i[n]}return e[n]}function x(e,t){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=E(t,\"top\"),r=E(t,\"left\"),i=n?-1:1;return e.top+=o*i,e.bottom+=o*i,e.left+=r*i,e.right+=r*i,e}function O(e,t){var n=\"x\"===t?\"Left\":\"Top\",o=\"Left\"===n?\"Right\":\"Bottom\";return parseFloat(e[\"border\"+n+\"Width\"],10)+parseFloat(e[\"border\"+o+\"Width\"],10)}function L(e,t,n,o){return Math.max(t[\"offset\"+e],t[\"scroll\"+e],n[\"client\"+e],n[\"offset\"+e],n[\"scroll\"+e],v(10)?parseInt(n[\"offset\"+e])+parseInt(o[\"margin\"+(\"Height\"===e?\"Top\":\"Left\")])+parseInt(o[\"margin\"+(\"Height\"===e?\"Bottom\":\"Right\")]):0)}function T(e){var t=e.body,n=e.documentElement,o=v(10)&&getComputedStyle(n);return{height:L(\"Height\",t,n,o),width:L(\"Width\",t,n,o)}}var D=function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")},M=function(){function e(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(t,n,o){return n&&e(t.prototype,n),o&&e(t,o),t}}(),N=function(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e},C=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e};function F(e){return C({},e,{right:e.left+e.width,bottom:e.top+e.height})}function k(e){var t={};try{if(v(10)){t=e.getBoundingClientRect();var n=E(e,\"top\"),o=E(e,\"left\");t.top+=n,t.left+=o,t.bottom+=n,t.right+=o}else t=e.getBoundingClientRect()}catch(d){}var r={left:t.left,top:t.top,width:t.right-t.left,height:t.bottom-t.top},i=\"HTML\"===e.nodeName?T(e.ownerDocument):{},a=i.width||e.clientWidth||r.right-r.left,s=i.height||e.clientHeight||r.bottom-r.top,f=e.offsetWidth-a,p=e.offsetHeight-s;if(f||p){var l=u(e);f-=O(l,\"x\"),p-=O(l,\"y\"),r.width-=f,r.height-=p}return F(r)}function S(e,t){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=v(10),r=\"HTML\"===t.nodeName,i=k(e),a=k(t),s=c(e),f=u(t),p=parseFloat(f.borderTopWidth,10),l=parseFloat(f.borderLeftWidth,10);n&&r&&(a.top=Math.max(a.top,0),a.left=Math.max(a.left,0));var d=F({top:i.top-a.top-p,left:i.left-a.left-l,width:i.width,height:i.height});if(d.marginTop=0,d.marginLeft=0,!o&&r){var h=parseFloat(f.marginTop,10),m=parseFloat(f.marginLeft,10);d.top-=p-h,d.bottom-=p-h,d.left-=l-m,d.right-=l-m,d.marginTop=h,d.marginLeft=m}return(o&&!n?t.contains(s):t===s&&\"BODY\"!==s.nodeName)&&(d=x(d,t)),d}function W(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=e.ownerDocument.documentElement,o=S(e,n),r=Math.max(n.clientWidth,window.innerWidth||0),i=Math.max(n.clientHeight,window.innerHeight||0),a=t?0:E(n),s=t?0:E(n,\"left\"),f={top:a-o.top+o.marginTop,left:s-o.left+o.marginLeft,width:r,height:i};return F(f)}function H(e){var t=e.nodeName;if(\"BODY\"===t||\"HTML\"===t)return!1;if(\"fixed\"===u(e,\"position\"))return!0;var n=d(e);return!!n&&H(n)}function P(e){if(!e||!e.parentElement||v())return document.documentElement;var t=e.parentElement;while(t&&\"none\"===u(t,\"transform\"))t=t.parentElement;return t||document.documentElement}function A(e,t,n,o){var r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],i={top:0,left:0},a=r?P(e):y(e,t);if(\"viewport\"===o)i=W(a,r);else{var s=void 0;\"scrollParent\"===o?(s=c(d(t)),\"BODY\"===s.nodeName&&(s=e.ownerDocument.documentElement)):s=\"window\"===o?e.ownerDocument.documentElement:o;var f=S(s,a,r);if(\"HTML\"!==s.nodeName||H(a))i=f;else{var p=T(e.ownerDocument),l=p.height,u=p.width;i.top+=f.top-f.marginTop,i.bottom=l+f.top,i.left+=f.left-f.marginLeft,i.right=u+f.left}}n=n||0;var h=\"number\"===typeof n;return i.left+=h?n:n.left||0,i.top+=h?n:n.top||0,i.right-=h?n:n.right||0,i.bottom-=h?n:n.bottom||0,i}function B(e){var t=e.width,n=e.height;return t*n}function I(e,t,n,o,r){var i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;if(-1===e.indexOf(\"auto\"))return e;var a=A(n,o,i,r),s={top:{width:a.width,height:t.top-a.top},right:{width:a.right-t.right,height:a.height},bottom:{width:a.width,height:a.bottom-t.bottom},left:{width:t.left-a.left,height:a.height}},f=Object.keys(s).map(function(e){return C({key:e},s[e],{area:B(s[e])})}).sort(function(e,t){return t.area-e.area}),p=f.filter(function(e){var t=e.width,o=e.height;return t>=n.clientWidth&&o>=n.clientHeight}),l=p.length>0?p[0].key:f[0].key,u=e.split(\"-\")[1];return l+(u?\"-\"+u:\"\")}function j(e,t,n){var o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=o?P(t):y(t,n);return S(n,r,o)}function R(e){var t=e.ownerDocument.defaultView,n=t.getComputedStyle(e),o=parseFloat(n.marginTop||0)+parseFloat(n.marginBottom||0),r=parseFloat(n.marginLeft||0)+parseFloat(n.marginRight||0),i={width:e.offsetWidth+r,height:e.offsetHeight+o};return i}function U(e){var t={left:\"right\",right:\"left\",bottom:\"top\",top:\"bottom\"};return e.replace(/left|right|bottom|top/g,function(e){return t[e]})}function Y(e,t,n){n=n.split(\"-\")[0];var o=R(e),r={width:o.width,height:o.height},i=-1!==[\"right\",\"left\"].indexOf(n),a=i?\"top\":\"left\",s=i?\"left\":\"top\",f=i?\"height\":\"width\",p=i?\"width\":\"height\";return r[a]=t[a]+t[f]/2-o[f]/2,r[s]=n===s?t[s]-o[p]:t[U(s)],r}function q(e,t){return Array.prototype.find?e.find(t):e.filter(t)[0]}function V(e,t,n){if(Array.prototype.findIndex)return e.findIndex(function(e){return e[t]===n});var o=q(e,function(e){return e[t]===n});return e.indexOf(o)}function K(e,t,n){var o=void 0===n?e:e.slice(0,V(e,\"name\",n));return o.forEach(function(e){e[\"function\"]&&console.warn(\"`modifier.function` is deprecated, use `modifier.fn`!\");var n=e[\"function\"]||e.fn;e.enabled&&l(n)&&(t.offsets.popper=F(t.offsets.popper),t.offsets.reference=F(t.offsets.reference),t=n(t,e))}),t}function z(){if(!this.state.isDestroyed){var e={instance:this,styles:{},arrowStyles:{},attributes:{},flipped:!1,offsets:{}};e.offsets.reference=j(this.state,this.popper,this.reference,this.options.positionFixed),e.placement=I(this.options.placement,e.offsets.reference,this.popper,this.reference,this.options.modifiers.flip.boundariesElement,this.options.modifiers.flip.padding),e.originalPlacement=e.placement,e.positionFixed=this.options.positionFixed,e.offsets.popper=Y(this.popper,e.offsets.reference,e.placement),e.offsets.popper.position=this.options.positionFixed?\"fixed\":\"absolute\",e=K(this.modifiers,e),this.state.isCreated?this.options.onUpdate(e):(this.state.isCreated=!0,this.options.onCreate(e))}}function G(e,t){return e.some(function(e){var n=e.name,o=e.enabled;return o&&n===t})}function J(e){for(var t=[!1,\"ms\",\"Webkit\",\"Moz\",\"O\"],n=e.charAt(0).toUpperCase()+e.slice(1),o=0;o<t.length;o++){var r=t[o],i=r?\"\"+r+n:e;if(\"undefined\"!==typeof document.body.style[i])return i}return null}function _(){return this.state.isDestroyed=!0,G(this.modifiers,\"applyStyle\")&&(this.popper.removeAttribute(\"x-placement\"),this.popper.style.position=\"\",this.popper.style.top=\"\",this.popper.style.left=\"\",this.popper.style.right=\"\",this.popper.style.bottom=\"\",this.popper.style.willChange=\"\",this.popper.style[J(\"transform\")]=\"\"),this.disableEventListeners(),this.options.removeOnDestroy&&this.popper.parentNode.removeChild(this.popper),this}function X(e){var t=e.ownerDocument;return t?t.defaultView:window}function Q(e,t,n,o){var r=\"BODY\"===e.nodeName,i=r?e.ownerDocument.defaultView:e;i.addEventListener(t,n,{passive:!0}),r||Q(c(i.parentNode),t,n,o),o.push(i)}function Z(e,t,n,o){n.updateBound=o,X(e).addEventListener(\"resize\",n.updateBound,{passive:!0});var r=c(e);return Q(r,\"scroll\",n.updateBound,n.scrollParents),n.scrollElement=r,n.eventsEnabled=!0,n}function $(){this.state.eventsEnabled||(this.state=Z(this.reference,this.options,this.state,this.scheduleUpdate))}function ee(e,t){return X(e).removeEventListener(\"resize\",t.updateBound),t.scrollParents.forEach(function(e){e.removeEventListener(\"scroll\",t.updateBound)}),t.updateBound=null,t.scrollParents=[],t.scrollElement=null,t.eventsEnabled=!1,t}function te(){this.state.eventsEnabled&&(cancelAnimationFrame(this.scheduleUpdate),this.state=ee(this.reference,this.state))}function ne(e){return\"\"!==e&&!isNaN(parseFloat(e))&&isFinite(e)}function oe(e,t){Object.keys(t).forEach(function(n){var o=\"\";-1!==[\"width\",\"height\",\"top\",\"right\",\"bottom\",\"left\"].indexOf(n)&&ne(t[n])&&(o=\"px\"),e.style[n]=t[n]+o})}function re(e,t){Object.keys(t).forEach(function(n){var o=t[n];!1!==o?e.setAttribute(n,t[n]):e.removeAttribute(n)})}function ie(e){return oe(e.instance.popper,e.styles),re(e.instance.popper,e.attributes),e.arrowElement&&Object.keys(e.arrowStyles).length&&oe(e.arrowElement,e.arrowStyles),e}function ae(e,t,n,o,r){var i=j(r,t,e,n.positionFixed),a=I(n.placement,i,t,e,n.modifiers.flip.boundariesElement,n.modifiers.flip.padding);return t.setAttribute(\"x-placement\",a),oe(t,{position:n.positionFixed?\"fixed\":\"absolute\"}),n}function se(e,t){var n=e.offsets,o=n.popper,r=n.reference,i=Math.round,a=Math.floor,s=function(e){return e},f=i(r.width),p=i(o.width),l=-1!==[\"left\",\"right\"].indexOf(e.placement),u=-1!==e.placement.indexOf(\"-\"),d=f%2===p%2,c=f%2===1&&p%2===1,h=t?l||u||d?i:a:s,m=t?i:s;return{left:h(c&&!u&&t?o.left-1:o.left),top:m(o.top),bottom:m(o.bottom),right:h(o.right)}}var fe=n&&/Firefox/i.test(navigator.userAgent);function pe(e,t){var n=t.x,o=t.y,r=e.offsets.popper,i=q(e.instance.modifiers,function(e){return\"applyStyle\"===e.name}).gpuAcceleration;void 0!==i&&console.warn(\"WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!\");var a=void 0!==i?i:t.gpuAcceleration,s=g(e.instance.popper),f=k(s),p={position:r.position},l=se(e,window.devicePixelRatio<2||!fe),u=\"bottom\"===n?\"top\":\"bottom\",d=\"right\"===o?\"left\":\"right\",c=J(\"transform\"),h=void 0,m=void 0;if(m=\"bottom\"===u?\"HTML\"===s.nodeName?-s.clientHeight+l.bottom:-f.height+l.bottom:l.top,h=\"right\"===d?\"HTML\"===s.nodeName?-s.clientWidth+l.right:-f.width+l.right:l.left,a&&c)p[c]=\"translate3d(\"+h+\"px, \"+m+\"px, 0)\",p[u]=0,p[d]=0,p.willChange=\"transform\";else{var v=\"bottom\"===u?-1:1,b=\"right\"===d?-1:1;p[u]=m*v,p[d]=h*b,p.willChange=u+\", \"+d}var w={\"x-placement\":e.placement};return e.attributes=C({},w,e.attributes),e.styles=C({},p,e.styles),e.arrowStyles=C({},e.offsets.arrow,e.arrowStyles),e}function le(e,t,n){var o=q(e,function(e){var n=e.name;return n===t}),r=!!o&&e.some(function(e){return e.name===n&&e.enabled&&e.order<o.order});if(!r){var i=\"`\"+t+\"`\",a=\"`\"+n+\"`\";console.warn(a+\" modifier is required by \"+i+\" modifier in order to work, be sure to include it before \"+i+\"!\")}return r}function ue(e,t){var n;if(!le(e.instance.modifiers,\"arrow\",\"keepTogether\"))return e;var o=t.element;if(\"string\"===typeof o){if(o=e.instance.popper.querySelector(o),!o)return e}else if(!e.instance.popper.contains(o))return console.warn(\"WARNING: `arrow.element` must be child of its popper element!\"),e;var r=e.placement.split(\"-\")[0],i=e.offsets,a=i.popper,s=i.reference,f=-1!==[\"left\",\"right\"].indexOf(r),p=f?\"height\":\"width\",l=f?\"Top\":\"Left\",d=l.toLowerCase(),c=f?\"left\":\"top\",h=f?\"bottom\":\"right\",m=R(o)[p];s[h]-m<a[d]&&(e.offsets.popper[d]-=a[d]-(s[h]-m)),s[d]+m>a[h]&&(e.offsets.popper[d]+=s[d]+m-a[h]),e.offsets.popper=F(e.offsets.popper);var v=s[d]+s[p]/2-m/2,g=u(e.instance.popper),b=parseFloat(g[\"margin\"+l],10),w=parseFloat(g[\"border\"+l+\"Width\"],10),y=v-e.offsets.popper[d]-b-w;return y=Math.max(Math.min(a[p]-m,y),0),e.arrowElement=o,e.offsets.arrow=(n={},N(n,d,Math.round(y)),N(n,c,\"\"),n),e}function de(e){return\"end\"===e?\"start\":\"start\"===e?\"end\":e}var ce=[\"auto-start\",\"auto\",\"auto-end\",\"top-start\",\"top\",\"top-end\",\"right-start\",\"right\",\"right-end\",\"bottom-end\",\"bottom\",\"bottom-start\",\"left-end\",\"left\",\"left-start\"],he=ce.slice(3);function me(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=he.indexOf(e),o=he.slice(n+1).concat(he.slice(0,n));return t?o.reverse():o}var ve={FLIP:\"flip\",CLOCKWISE:\"clockwise\",COUNTERCLOCKWISE:\"counterclockwise\"};function ge(e,t){if(G(e.instance.modifiers,\"inner\"))return e;if(e.flipped&&e.placement===e.originalPlacement)return e;var n=A(e.instance.popper,e.instance.reference,t.padding,t.boundariesElement,e.positionFixed),o=e.placement.split(\"-\")[0],r=U(o),i=e.placement.split(\"-\")[1]||\"\",a=[];switch(t.behavior){case ve.FLIP:a=[o,r];break;case ve.CLOCKWISE:a=me(o);break;case ve.COUNTERCLOCKWISE:a=me(o,!0);break;default:a=t.behavior}return a.forEach(function(s,f){if(o!==s||a.length===f+1)return e;o=e.placement.split(\"-\")[0],r=U(o);var p=e.offsets.popper,l=e.offsets.reference,u=Math.floor,d=\"left\"===o&&u(p.right)>u(l.left)||\"right\"===o&&u(p.left)<u(l.right)||\"top\"===o&&u(p.bottom)>u(l.top)||\"bottom\"===o&&u(p.top)<u(l.bottom),c=u(p.left)<u(n.left),h=u(p.right)>u(n.right),m=u(p.top)<u(n.top),v=u(p.bottom)>u(n.bottom),g=\"left\"===o&&c||\"right\"===o&&h||\"top\"===o&&m||\"bottom\"===o&&v,b=-1!==[\"top\",\"bottom\"].indexOf(o),w=!!t.flipVariations&&(b&&\"start\"===i&&c||b&&\"end\"===i&&h||!b&&\"start\"===i&&m||!b&&\"end\"===i&&v);(d||g||w)&&(e.flipped=!0,(d||g)&&(o=a[f+1]),w&&(i=de(i)),e.placement=o+(i?\"-\"+i:\"\"),e.offsets.popper=C({},e.offsets.popper,Y(e.instance.popper,e.offsets.reference,e.placement)),e=K(e.instance.modifiers,e,\"flip\"))}),e}function be(e){var t=e.offsets,n=t.popper,o=t.reference,r=e.placement.split(\"-\")[0],i=Math.floor,a=-1!==[\"top\",\"bottom\"].indexOf(r),s=a?\"right\":\"bottom\",f=a?\"left\":\"top\",p=a?\"width\":\"height\";return n[s]<i(o[f])&&(e.offsets.popper[f]=i(o[f])-n[p]),n[f]>i(o[s])&&(e.offsets.popper[f]=i(o[s])),e}function we(e,t,n,o){var r=e.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/),i=+r[1],a=r[2];if(!i)return e;if(0===a.indexOf(\"%\")){var s=void 0;switch(a){case\"%p\":s=n;break;case\"%\":case\"%r\":default:s=o}var f=F(s);return f[t]/100*i}if(\"vh\"===a||\"vw\"===a){var p=void 0;return p=\"vh\"===a?Math.max(document.documentElement.clientHeight,window.innerHeight||0):Math.max(document.documentElement.clientWidth,window.innerWidth||0),p/100*i}return i}function ye(e,t,n,o){var r=[0,0],i=-1!==[\"right\",\"left\"].indexOf(o),a=e.split(/(\\+|\\-)/).map(function(e){return e.trim()}),s=a.indexOf(q(a,function(e){return-1!==e.search(/,|\\s/)}));a[s]&&-1===a[s].indexOf(\",\")&&console.warn(\"Offsets separated by white space(s) are deprecated, use a comma (,) instead.\");var f=/\\s*,\\s*|\\s+/,p=-1!==s?[a.slice(0,s).concat([a[s].split(f)[0]]),[a[s].split(f)[1]].concat(a.slice(s+1))]:[a];return p=p.map(function(e,o){var r=(1===o?!i:i)?\"height\":\"width\",a=!1;return e.reduce(function(e,t){return\"\"===e[e.length-1]&&-1!==[\"+\",\"-\"].indexOf(t)?(e[e.length-1]=t,a=!0,e):a?(e[e.length-1]+=t,a=!1,e):e.concat(t)},[]).map(function(e){return we(e,r,t,n)})}),p.forEach(function(e,t){e.forEach(function(n,o){ne(n)&&(r[t]+=n*(\"-\"===e[o-1]?-1:1))})}),r}function Ee(e,t){var n=t.offset,o=e.placement,r=e.offsets,i=r.popper,a=r.reference,s=o.split(\"-\")[0],f=void 0;return f=ne(+n)?[+n,0]:ye(n,i,a,s),\"left\"===s?(i.top+=f[0],i.left-=f[1]):\"right\"===s?(i.top+=f[0],i.left+=f[1]):\"top\"===s?(i.left+=f[0],i.top-=f[1]):\"bottom\"===s&&(i.left+=f[0],i.top+=f[1]),e.popper=i,e}function xe(e,t){var n=t.boundariesElement||g(e.instance.popper);e.instance.reference===n&&(n=g(n));var o=J(\"transform\"),r=e.instance.popper.style,i=r.top,a=r.left,s=r[o];r.top=\"\",r.left=\"\",r[o]=\"\";var f=A(e.instance.popper,e.instance.reference,t.padding,n,e.positionFixed);r.top=i,r.left=a,r[o]=s,t.boundaries=f;var p=t.priority,l=e.offsets.popper,u={primary:function(e){var n=l[e];return l[e]<f[e]&&!t.escapeWithReference&&(n=Math.max(l[e],f[e])),N({},e,n)},secondary:function(e){var n=\"right\"===e?\"left\":\"top\",o=l[n];return l[e]>f[e]&&!t.escapeWithReference&&(o=Math.min(l[n],f[e]-(\"right\"===e?l.width:l.height))),N({},n,o)}};return p.forEach(function(e){var t=-1!==[\"left\",\"top\"].indexOf(e)?\"primary\":\"secondary\";l=C({},l,u[t](e))}),e.offsets.popper=l,e}function Oe(e){var t=e.placement,n=t.split(\"-\")[0],o=t.split(\"-\")[1];if(o){var r=e.offsets,i=r.reference,a=r.popper,s=-1!==[\"bottom\",\"top\"].indexOf(n),f=s?\"left\":\"top\",p=s?\"width\":\"height\",l={start:N({},f,i[f]),end:N({},f,i[f]+i[p]-a[p])};e.offsets.popper=C({},a,l[o])}return e}function Le(e){if(!le(e.instance.modifiers,\"hide\",\"preventOverflow\"))return e;var t=e.offsets.reference,n=q(e.instance.modifiers,function(e){return\"preventOverflow\"===e.name}).boundaries;if(t.bottom<n.top||t.left>n.right||t.top>n.bottom||t.right<n.left){if(!0===e.hide)return e;e.hide=!0,e.attributes[\"x-out-of-boundaries\"]=\"\"}else{if(!1===e.hide)return e;e.hide=!1,e.attributes[\"x-out-of-boundaries\"]=!1}return e}function Te(e){var t=e.placement,n=t.split(\"-\")[0],o=e.offsets,r=o.popper,i=o.reference,a=-1!==[\"left\",\"right\"].indexOf(n),s=-1===[\"top\",\"left\"].indexOf(n);return r[a?\"left\":\"top\"]=i[n]-(s?r[a?\"width\":\"height\"]:0),e.placement=U(t),e.offsets.popper=F(r),e}var De={shift:{order:100,enabled:!0,fn:Oe},offset:{order:200,enabled:!0,fn:Ee,offset:0},preventOverflow:{order:300,enabled:!0,fn:xe,priority:[\"left\",\"right\",\"top\",\"bottom\"],padding:5,boundariesElement:\"scrollParent\"},keepTogether:{order:400,enabled:!0,fn:be},arrow:{order:500,enabled:!0,fn:ue,element:\"[x-arrow]\"},flip:{order:600,enabled:!0,fn:ge,behavior:\"flip\",padding:5,boundariesElement:\"viewport\"},inner:{order:700,enabled:!1,fn:Te},hide:{order:800,enabled:!0,fn:Le},computeStyle:{order:850,enabled:!0,fn:pe,gpuAcceleration:!0,x:\"bottom\",y:\"right\"},applyStyle:{order:900,enabled:!0,fn:ie,onLoad:ae,gpuAcceleration:void 0}},Me={placement:\"bottom\",positionFixed:!1,eventsEnabled:!0,removeOnDestroy:!1,onCreate:function(){},onUpdate:function(){},modifiers:De},Ne=function(){function e(t,n){var o=this,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};D(this,e),this.scheduleUpdate=function(){return requestAnimationFrame(o.update)},this.update=p(this.update.bind(this)),this.options=C({},e.Defaults,r),this.state={isDestroyed:!1,isCreated:!1,scrollParents:[]},this.reference=t&&t.jquery?t[0]:t,this.popper=n&&n.jquery?n[0]:n,this.options.modifiers={},Object.keys(C({},e.Defaults.modifiers,r.modifiers)).forEach(function(t){o.options.modifiers[t]=C({},e.Defaults.modifiers[t]||{},r.modifiers?r.modifiers[t]:{})}),this.modifiers=Object.keys(this.options.modifiers).map(function(e){return C({name:e},o.options.modifiers[e])}).sort(function(e,t){return e.order-t.order}),this.modifiers.forEach(function(e){e.enabled&&l(e.onLoad)&&e.onLoad(o.reference,o.popper,o.options,e,o.state)}),this.update();var i=this.options.eventsEnabled;i&&this.enableEventListeners(),this.state.eventsEnabled=i}return M(e,[{key:\"update\",value:function(){return z.call(this)}},{key:\"destroy\",value:function(){return _.call(this)}},{key:\"enableEventListeners\",value:function(){return $.call(this)}},{key:\"disableEventListeners\",value:function(){return te.call(this)}}]),e}();Ne.Utils=(\"undefined\"!==typeof window?window:e).PopperUtils,Ne.placements=ce,Ne.Defaults=Me,t[\"default\"]=Ne}.call(this,n(\"c8ba\"))}}]);","extractedComments":[]}
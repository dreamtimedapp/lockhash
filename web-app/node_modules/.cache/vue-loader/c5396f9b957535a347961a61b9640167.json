{"remainingRequest":"/root/lockhash/web-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/root/lockhash/web-app/src/modules/auth/register.vue?vue&type=script&lang=js&","dependencies":[{"path":"/root/lockhash/web-app/src/modules/auth/register.vue","mtime":1553930633241},{"path":"/root/lockhash/web-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/root/lockhash/web-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/root/lockhash/web-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapActions } from 'vuex'\nimport GooglePlus from '$icons/GooglePlus'\nimport FacebookIcon from '$icons/Facebook'\nimport QqIcon from '$icons/Qqchat'\nimport GithubIcon from '$icons/GithubCircle'\nimport qs from 'qs'\n\nexport default {\n  name: 'register',\n  components: { GooglePlus, FacebookIcon, QqIcon, GithubIcon },\n  data () {\n    return {\n      username: '',\n      email: '',\n      password: '',\n      ticket: null,\n      randstr: null,\n      error: true,\n      regex: {\n        email: /^[a-zA-Z0-9-_.]+@[a-zA-Z0-9-.]+.(com|io|cc|co|li|it|sh|cn|net|org|jp|tw|me|info|us|in|la|pro|im|so|at|my)$/,\n        username: /^[a-zA-Z]+[a-zA-Z0-9_-]+$/\n      }\n    }\n  },\n  watch: {\n    username () {\n      this.$refs['usernameInput'].classList.remove('is-invalid')\n    },\n    email () {\n      this.$refs['emailInput'].classList.remove('is-invalid')\n    }\n  },\n  computed: {\n    formReady () {\n      return (\n        !this.error &&\n        this.email.match(this.regex.email) &&\n        this.username.match(this.regex.username) &&\n        this.username.length >= 5 &&\n        this.username.length <= 12 &&\n        this.password.length >= 6 &&\n        this.password.length <= 32\n      )\n    }\n  },\n  methods: {\n    ...mapActions(['attemptRegister']),\n    validateUsername () {\n      this.error = false\n\n      if (\n        !this.username.match(this.regex.username) ||\n        this.username.length < 5\n      ) {\n        this.error = true\n        this.$refs['usernameInput'].classList.add('is-invalid')\n        return this.$message.error('请输入 5 ~ 12 位正确格式用户名')\n      }\n\n      this.$http\n        .post('user/exists',qs.stringify({ username: this.username }))\n        .then(response => {\n          if (!response.success) {\n            this.error = true\n            this.$refs['usernameInput'].classList.add('is-invalid')\n            return this.$message.error('用户名已经存在！')\n          }\n        })\n    },\n    validateEmail () {\n      this.error = false\n\n      if (!this.email.match(this.regex.email)) {\n        this.error = true\n        this.$refs['emailInput'].classList.add('is-invalid')\n        return this.$message.error('请输入正确的邮箱地址')\n      }\n\n      this.$http.post('user/exists', qs.stringify({ email: this.email }),).then(response => {\n        if (!response.success) {\n          this.error = true\n          this.$refs['emailInput'].classList.add('is-invalid')\n          return this.$message.error('邮箱已经存在！')\n        }\n      })\n    },\n    showCaptcha () {\n      let captcha = new window.TencentCaptcha(\n        '2024993958',\n        res => {\n          if (res.ret === 0) {\n            this.ticket = res.ticket\n            this.randstr = res.randstr\n            this.submit()\n          } else {\n            return this.$message.error('请先完成验证！')\n          }\n        }\n      )\n      captcha.show()\n    },\n    async submit () {\n      if (!this.ticket) {\n        return this.$message.error('请先完成验证！')\n      }\n\n      try {\n        await this.attemptRegister(this.$data)\n        this.$message.warning('注册成功，请先验证你邮箱地址！')\n        this.$router.push({ name: 'home' })\n      } catch (e) {\n        if (e.status !== 422) {\n          this.$message.error('注册失败！')\n        }\n      }\n    }\n  }\n}\n",{"version":3,"sources":["register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"register.vue","sourceRoot":"src/modules/auth","sourcesContent":["<template>\n  <div class=\"row pt-3\">\n    <div class=\"offset-sm-4 col-sm-4\">\n      <div class=\"box\">\n        <h4 class=\"text-center font-weight-normal mt-2\">用户注册</h4>\n        <form @submit.prevent=\"showCaptcha\">\n          <div class=\"form-group\">\n            <label>邮箱地址</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              ref=\"emailInput\"\n              placeholder=\"example@yike.io\"\n              v-model=\"email\"\n              @blur=\"validateEmail\"\n              required\n            >\n          </div>\n          <div class=\"form-group\">\n            <label>用户名</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              ref=\"usernameInput\"\n              placeholder=\"5 ~ 12 位字母或数字\"\n              v-model=\"username\"\n              @blur=\"validateUsername\"\n              required\n            >\n          </div>\n          <div class=\"form-group\">\n            <label>密码</label>\n            <input\n              type=\"password\"\n              class=\"form-control\"\n              ref=\"passwordInput\"\n              placeholder=\"6 ~ 32 位安全密码\"\n              v-model=\"password\"\n              required\n            >\n          </div>\n          <button type=\"submit\" :disabled=\"!formReady\" class=\"my-2 btn btn-primary w-100\">注册</button>\n        </form>\n      </div>\n    </div>\n    <div class=\"offset-sm-3 col-sm-6 text-center mt-2\">\n      <p>\n        已有账号？\n        <router-link class=\"text-blue\" :to=\"{ name: 'auth.login' }\">快速登录</router-link>\n      </p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapActions } from 'vuex'\nimport GooglePlus from '$icons/GooglePlus'\nimport FacebookIcon from '$icons/Facebook'\nimport QqIcon from '$icons/Qqchat'\nimport GithubIcon from '$icons/GithubCircle'\nimport qs from 'qs'\n\nexport default {\n  name: 'register',\n  components: { GooglePlus, FacebookIcon, QqIcon, GithubIcon },\n  data () {\n    return {\n      username: '',\n      email: '',\n      password: '',\n      ticket: null,\n      randstr: null,\n      error: true,\n      regex: {\n        email: /^[a-zA-Z0-9-_.]+@[a-zA-Z0-9-.]+.(com|io|cc|co|li|it|sh|cn|net|org|jp|tw|me|info|us|in|la|pro|im|so|at|my)$/,\n        username: /^[a-zA-Z]+[a-zA-Z0-9_-]+$/\n      }\n    }\n  },\n  watch: {\n    username () {\n      this.$refs['usernameInput'].classList.remove('is-invalid')\n    },\n    email () {\n      this.$refs['emailInput'].classList.remove('is-invalid')\n    }\n  },\n  computed: {\n    formReady () {\n      return (\n        !this.error &&\n        this.email.match(this.regex.email) &&\n        this.username.match(this.regex.username) &&\n        this.username.length >= 5 &&\n        this.username.length <= 12 &&\n        this.password.length >= 6 &&\n        this.password.length <= 32\n      )\n    }\n  },\n  methods: {\n    ...mapActions(['attemptRegister']),\n    validateUsername () {\n      this.error = false\n\n      if (\n        !this.username.match(this.regex.username) ||\n        this.username.length < 5\n      ) {\n        this.error = true\n        this.$refs['usernameInput'].classList.add('is-invalid')\n        return this.$message.error('请输入 5 ~ 12 位正确格式用户名')\n      }\n\n      this.$http\n        .post('user/exists',qs.stringify({ username: this.username }))\n        .then(response => {\n          if (!response.success) {\n            this.error = true\n            this.$refs['usernameInput'].classList.add('is-invalid')\n            return this.$message.error('用户名已经存在！')\n          }\n        })\n    },\n    validateEmail () {\n      this.error = false\n\n      if (!this.email.match(this.regex.email)) {\n        this.error = true\n        this.$refs['emailInput'].classList.add('is-invalid')\n        return this.$message.error('请输入正确的邮箱地址')\n      }\n\n      this.$http.post('user/exists', qs.stringify({ email: this.email }),).then(response => {\n        if (!response.success) {\n          this.error = true\n          this.$refs['emailInput'].classList.add('is-invalid')\n          return this.$message.error('邮箱已经存在！')\n        }\n      })\n    },\n    showCaptcha () {\n      let captcha = new window.TencentCaptcha(\n        '2024993958',\n        res => {\n          if (res.ret === 0) {\n            this.ticket = res.ticket\n            this.randstr = res.randstr\n            this.submit()\n          } else {\n            return this.$message.error('请先完成验证！')\n          }\n        }\n      )\n      captcha.show()\n    },\n    async submit () {\n      if (!this.ticket) {\n        return this.$message.error('请先完成验证！')\n      }\n\n      try {\n        await this.attemptRegister(this.$data)\n        this.$message.warning('注册成功，请先验证你邮箱地址！')\n        this.$router.push({ name: 'home' })\n      } catch (e) {\n        if (e.status !== 422) {\n          this.$message.error('注册失败！')\n        }\n      }\n    }\n  }\n}\n</script>\n"]}]}
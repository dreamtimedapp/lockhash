{"remainingRequest":"/root/lockhash/web-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/root/lockhash/web-app/src/components/comments.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/root/lockhash/web-app/src/components/comments.vue","mtime":1553930101451},{"path":"/root/lockhash/web-app/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/root/lockhash/web-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/root/lockhash/web-app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/root/lockhash/web-app/node_modules/sass-loader/lib/loader.js","mtime":1533139052000},{"path":"/root/lockhash/web-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/root/lockhash/web-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.comments {\n  .pop-comment-form {\n    border: none;\n    max-height: 0;\n\n    &.show {\n      max-height: 320px;\n    }\n  }\n  .comment-editor .CodeMirror {\n    height: auto;\n    min-height: 100px;\n    max-height: 180px;\n  }\n  .pop-comment-form {\n    position: sticky;\n    bottom: 55px;\n    min-width: 500px;\n    max-width: 100%;\n    max-height: 0;\n    overflow: hidden;\n    transition: max-height 0.5s;\n  }\n\n  .markdown-body.comment-content p:last-child {\n    margin-bottom: 0;\n  }\n}\n",{"version":3,"sources":["comments.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkRA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"comments.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"comments\" name=\"comments\">\n    <div class=\"py-2\">\n      <div class=\"text-16 text-gray-50\">{{ comments.meta ? comments.meta.total : 0 }} 条评论</div>\n    </div>\n    <div class=\"box mb-3\" v-if=\"currentUser.id\">\n      <template v-if=\"currentUser.has_activated\">\n        <div class=\"d-flex align-items-center\">\n          <img :src=\"currentUser.avatar\" class=\"avatar-40\" :alt=\"currentUser.username\" />\n          <div class=\"text-18 text-muted ml-2 w-100\" @click=\"writing = true\">撰写评论...</div>\n        </div>\n      </template>\n      <template v-else>\n        <div class=\"text-18 ml-2 text-muted text-center\">您需要激活账户才能评论~</div>\n      </template>\n    </div>\n    <div v-else>\n      <div class=\"box mb-3\" v-if=\"currentUser\">\n        <div class=\"text-18 ml-2 text-center\">\n          您需要\n          <router-link :to=\"{ name: 'auth.login' }\" tag=\"a\" class=\"text-blue\">登录</router-link>\n          或\n          <router-link :to=\"{ name: 'auth.register' }\" tag=\"a\" class=\"text-blue\">注册</router-link>\n          才能发表评论\n        </div>\n      </div>\n    </div>\n\n    <paginator :meta=\"comments.meta\" @change=\"handlePaginate\"></paginator>\n\n    <div class=\"box box-flush\">\n      <div class=\"border-bottom box-body py-2\" :class=\"{'animated flash': $route.hash === '#comment-' + item.id}\" v-if=\"item.content && item.content.body\" v-for=\"(item,index) in comments.data\" :key=\"item.id\" :id=\"'comment-' + item.id\" :name=\"'comment-' + item.id\">\n        <user-media :user=\"item.user\">\n          <template slot=\"name-appends\">\n            <router-link tag=\"a\" class=\"text-muted text-12 ml-1\" :to=\"{name: 'users.show', params: {username: item.user.username}}\">{{ item.user.username }}</router-link>\n          </template>\n          <small slot=\"description\"><a :href=\"'#comment-' + item.id\" class=\"text-gray-70\">{{ item.created_at_timeago }}</a></small>\n          <div class=\"text-16 text-gray-60 ml-auto d-flex align-items-center\" slot=\"appends\">\n            <div class=\"mx-1 cursor-pointer d-flex\" @click=\"vote('up', item, index)\">\n              <button class=\"btn btn-icon btn-light text-gray-60\" v-if=\"!item.has_up_voted\">\n                <thumb-up-outline />\n              </button>\n              <button class=\"btn btn-icon btn-primary\" v-else>\n                <thumb-up />\n              </button>\n              <span class=\"ml-1 align-self-center\">{{ item.up_voters }}</span>\n            </div>\n            <div class=\"mx-1 cursor-pointer d-flex\" @click=\"vote('down', item, index)\">\n              <button class=\"btn btn-icon btn-light text-gray-60\" v-if=\"!item.has_down_voted\">\n                <thumb-down-outline />\n              </button>\n              <button class=\"btn btn-icon btn-danger\" v-else>\n                <thumb-down />\n              </button>\n              <span class=\"ml-1 align-self-center\">{{ item.down_voters }}</span>\n            </div>\n            <div class=\"mx-1 cursor-pointer\" @click=\"reply(item)\">\n              <button class=\"btn btn-icon btn-light text-gray-60\">\n                <reply /></button>\n            </div>\n          </div>\n        </user-media>\n        <markdown-body class=\"comment-content text-gray-40 pt-2\" v-model=\"item.content.body\"></markdown-body>\n      </div>\n    </div>\n\n    <paginator :meta=\"comments.meta\" @change=\"handlePaginate\"></paginator>\n\n    <div class=\"card card-flush shadow-30 pop-comment-form\" :class=\"{'show': writing}\">\n      <editor v-model=\"content\" class=\"comment-editor\" ref=\"editor\" placeholder=\"请使用 markdown 语法\" :options=\"editorOptions\"></editor>\n      <div class=\"p-2 d-flex align-items-center justify-content-between\">\n        <div class=\"d-flex align-items-end\">\n          <a href=\"https://guides.github.com/features/mastering-markdown/\" class=\"text-gray-50\" target=\"_blank\"><span class=\"text-14 material-design-icon\"><svg class=\"material-design-icon__svg\" viewBox=\"0 0 16 16\" version=\"1.1\" aria-hidden=\"true\">\n                <path fill-rule=\"evenodd\" d=\"M14.85 3H1.15C.52 3 0 3.52 0 4.15v7.69C0 12.48.52 13 1.15 13h13.69c.64 0 1.15-.52 1.15-1.15v-7.7C16 3.52 15.48 3 14.85 3zM9 11H7V8L5.5 9.92 4 8v3H2V5h2l1.5 2L7 5h2v6zm2.99.5L9.5 8H11V5h2v3h1.5l-2.51 3.5z\"></path>\n              </svg></span> Markdown 语法指南</a>\n        </div>\n        <div class=\"pop-form-btns\">\n          <button type=\"button\" class=\"btn btn-sm btn-primary\" :disabled=\"!formReady\" @click=\"submit\">提交</button>\n          <button type=\"button\" class=\"ml-2 btn btn-sm btn-secondary\" @click=\"writing=false\">取消</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Editor from '$components/editor'\nimport Paginator from '$components/paginator'\nimport MarkdownBody from '$components/markdown-body'\nimport UserMedia from '$components/user-media'\nimport localforage from 'localforage'\nimport { mapGetters } from 'vuex'\n\nimport ThumbUp from '$icons/ThumbUp'\nimport Reply from '$icons/Reply'\nimport Markdown from '$icons/Markdown'\nimport ThumbDown from '$icons/ThumbDown'\nimport ThumbUpOutline from '$icons/ThumbUpOutline'\nimport ThumbDownOutline from '$icons/ThumbDownOutline'\n\nexport default {\n  name: 'comments',\n  components: {\n    Editor,\n    UserMedia,\n    Markdown,\n    MarkdownBody,\n    Paginator,\n    ThumbUp,\n    Reply,\n    ThumbDown,\n    ThumbUpOutline,\n    ThumbDownOutline\n  },\n  computed: {\n    ...mapGetters(['currentUser']),\n    formReady () {\n      return this.content.length >= 3\n    },\n    cacheKey () {\n      return (\n        'comment.content_' +\n        this.objectType.replace('\\\\\\\\', '_').toLowerCase() +\n        '_' +\n        this.objectId\n      )\n    }\n  },\n  props: {\n    objectId: {\n      type: Number,\n      required: true\n    },\n    objectType: {\n      type: String,\n      default: 'App\\\\Thread'\n    }\n  },\n  data () {\n    return {\n      writing: false,\n      content: '',\n      comments: [],\n      editorOptions: {\n        minLines: 3,\n        maxLines: 20\n      },\n      query: Object.assign(\n        {\n          page: 1\n        },\n        this.$route.query\n      )\n    }\n  },\n  watch: {\n    query: {\n      deep: true,\n      handler () {\n        this.$router.replace({ query: this.query })\n        this.loadComments()\n      }\n    },\n    content () {\n      localforage.setItem(this.cacheKey, this.content)\n    },\n    writing () {\n      if (!this.writing) {\n        this.content = ''\n        localforage.removeItem(this.cacheKey)\n        this.$refs['editor'].editor.setValue('')\n      } else {\n        let editor = this.$refs['editor'].editor\n        editor.focus()\n        setTimeout(() => {\n          editor.setCursor(editor.lineCount(), 0)\n        })\n      }\n    }\n  },\n  mounted () {\n    this.loadComments().then(() => {\n      if (window.location.hash.length > 0) {\n        setTimeout(() => {\n          window.location.replace(window.location.hash)\n        })\n      }\n    })\n    this.syncCachedContent()\n  },\n  methods: {\n    handlePaginate (page) {\n      this.query.page = page\n    },\n    vote (type = 'up', item, index) {\n      if (!this.$user().id) {\n        return this.$router.push({ name: 'auth.login' })\n      }\n\n      let reverse = type == 'up' ? 'down' : 'up'\n\n      if (item[`has_${type}_voted`]) {\n        this.$http.post(`comments/${item.id}/cancel-vote`)\n\n        this.comments.data[index][`${type}_voters`]--\n        this.comments.data[index][`has_${type}_voted`] = false\n      } else {\n        this.$http.post(`comments/${item.id}/${type}-vote`)\n\n        if (item[`has_${reverse}_voted`]) {\n          this.comments.data[index][`${reverse}_voters`]--\n          this.comments.data[index][`has_${reverse}_voted`] = false\n        }\n        this.comments.data[index][`${type}_voters`]++\n        this.comments.data[index][`has_${type}_voted`] = true\n      }\n    },\n    reply (item) {\n      if (!this.$user().id) {\n        return this.$router.push({ name: 'auth.login' })\n      }\n      this.content = `@${item.user.username} `\n      this.writing = true\n      window.scrollTo(0, document.querySelector('[name=\"comments\"]').offsetTop)\n    },\n    submit () {\n      this.$http\n        .post('comments', {\n          commentable_type: this.objectType,\n          commentable_id: this.objectId,\n          content: {\n            markdown: this.content,\n            type: 'markdown'\n          }\n        })\n        .then(() => {\n          this.content = ''\n          this.writing = false\n          this.$message.success('评论成功！')\n          this.$emit('created')\n          this.loadComments()\n        })\n    },\n    syncCachedContent () {\n      localforage.getItem(this.cacheKey, (err, content) => {\n        if (!err && content && content.length > 0) {\n          this.writing = true\n          this.content = content\n        }\n      })\n    },\n    loadComments () {\n      return this.$http\n        .get(\n          `comments?commentable_type=${this.objectType}&commentable_id=${\n            this.objectId\n          }&page=${this.query.page}`\n        )\n        .then(comments => {\n          this.comments = comments\n          this.mapCommentsUserForMention(comments.data)\n        })\n    },\n    mapCommentsUserForMention (comments) {\n      comments.map(comment => {\n        window.pageUsers.some(u => u.id === comment.user_id) ||\n          window.pageUsers.push(comment.user)\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.comments {\n  .pop-comment-form {\n    border: none;\n    max-height: 0;\n\n    &.show {\n      max-height: 320px;\n    }\n  }\n  .comment-editor .CodeMirror {\n    height: auto;\n    min-height: 100px;\n    max-height: 180px;\n  }\n  .pop-comment-form {\n    position: sticky;\n    bottom: 55px;\n    min-width: 500px;\n    max-width: 100%;\n    max-height: 0;\n    overflow: hidden;\n    transition: max-height 0.5s;\n  }\n\n  .markdown-body.comment-content p:last-child {\n    margin-bottom: 0;\n  }\n}\n</style>\n"]}]}
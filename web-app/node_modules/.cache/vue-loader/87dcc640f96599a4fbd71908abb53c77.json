{"remainingRequest":"/root/lockhash/web-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/root/lockhash/web-app/src/components/buttons/relation-btn.vue?vue&type=script&lang=js&","dependencies":[{"path":"/root/lockhash/web-app/src/components/buttons/relation-btn.vue","mtime":1553930101451},{"path":"/root/lockhash/web-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/root/lockhash/web-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/root/lockhash/web-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  props: {\n    relation: {\n      type: String,\n      required: true\n    },\n    action: {\n      type: String,\n      required: true\n    },\n    item: {\n      type: Object,\n      required: true,\n      default () {\n        return {}\n      }\n    }\n  },\n  data () {\n    return {\n      types: {\n        thread: 'App\\\\Thread',\n        user: 'App\\\\User',\n        node: 'App\\\\Node'\n      },\n      actions: {\n        like: 'has_liked',\n        follow: 'has_followed',\n        subscribe: 'has_subscribed'\n      }\n    }\n  },\n  methods: {\n    toggle () {\n      // let action = !this.item[this.actions[this.action]] ? this.action : `${this.action}`\n\n      this.post(`relations/${this.action}`, {\n        followable_type: this.types[this.relation],\n        followable_id: this.item.id\n      }).then(() => {\n        this.item[this.actions[this.action]] = !this.item[\n          this.actions[this.action]\n        ]\n        this.$emit('after-toggle', this.item[this.actions[this.action]])\n      })\n    }\n  }\n}\n",{"version":3,"sources":["relation-btn.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"relation-btn.vue","sourceRoot":"src/components/buttons","sourcesContent":["<template>\n  <div @click=\"toggle\">\n    <template v-if=\"!item[actions[action]]\">\n      <slot name=\"on\"></slot>\n    </template>\n    <template v-else>\n      <slot name=\"off\"></slot>\n    </template>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    relation: {\n      type: String,\n      required: true\n    },\n    action: {\n      type: String,\n      required: true\n    },\n    item: {\n      type: Object,\n      required: true,\n      default () {\n        return {}\n      }\n    }\n  },\n  data () {\n    return {\n      types: {\n        thread: 'App\\\\Thread',\n        user: 'App\\\\User',\n        node: 'App\\\\Node'\n      },\n      actions: {\n        like: 'has_liked',\n        follow: 'has_followed',\n        subscribe: 'has_subscribed'\n      }\n    }\n  },\n  methods: {\n    toggle () {\n      // let action = !this.item[this.actions[this.action]] ? this.action : `${this.action}`\n\n      this.post(`relations/${this.action}`, {\n        followable_type: this.types[this.relation],\n        followable_id: this.item.id\n      }).then(() => {\n        this.item[this.actions[this.action]] = !this.item[\n          this.actions[this.action]\n        ]\n        this.$emit('after-toggle', this.item[this.actions[this.action]])\n      })\n    }\n  }\n}\n</script>\n"]}]}
{"remainingRequest":"/root/lockhash/web-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/root/lockhash/web-app/src/modules/threads/form.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/root/lockhash/web-app/src/modules/threads/form.vue","mtime":1553930101455},{"path":"/root/lockhash/web-app/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/root/lockhash/web-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/root/lockhash/web-app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/root/lockhash/web-app/node_modules/sass-loader/lib/loader.js","mtime":1533139052000},{"path":"/root/lockhash/web-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/root/lockhash/web-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.editor-container {\n  overflow: auto;\n  height: calc(100vh - 370px);\n}\n",{"version":3,"sources":["form.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmMA;AACA;AACA;AACA","file":"form.vue","sourceRoot":"src/modules/threads","sourcesContent":["<template>\n  <div class=\"page-threads-show\" v-if=\"ready\">\n    <div v-if=\"currentUser.has_banned\">\n      <user-locked />\n    </div>\n    <div v-else-if=\"$user() && !$user().has_activated\">\n      <div class=\"box-body py-4 text-center\">\n        <h1 class=\"display-4 text-gray-40\">\n          <alert />\n        </h1>\n        您需要先激活账户以使用此功能\n      </div>\n    </div>\n    <div class=\"row\" v-else>\n      <div class=\"col-md-9 m-auto\">\n        <div class=\"box box-flush\">\n          <form>\n            <div class=\"card\">\n              <div class=\"card-header pt-3 border-bottom-0\">\n                <div class=\"input-group input-group\">\n                  <input type=\"text\" ref=\"title_input\" class=\"form-control form-control-lg\" v-model=\"form.title\" placeholder=\"请在这里输入标题（请精准表达）\">\n                </div>\n              </div>\n              <editor v-model=\"form.content.markdown\" :toolbar=\"false\" :options=\"{maxLines: Infinity}\" placeholder=\"请使用 Markdown 格式详细并精准的表达，不得少于30个字符~\"></editor>\n              <div class=\"card-footer border-top p-2 d-flex justify-content-between\">\n                <div class=\"left-actions d-flex align-items-center\">\n                  <span class=\"text-muted\">发布到</span>\n                  <div class=\"dropdown ml-1\">\n                    <el-select filterable v-model=\"form.node_id\">\n                      <el-option v-for=\"item in nodes\" :key=\"item.id\" :value=\"item.id\" :label=\"item.title\"></el-option>\n                    </el-select>\n                  </div>\n                </div>\n                <div class=\"right-actions\">\n                  <button type=\"button\" class=\"btn btn-primary\" :disabled=\"!formReady\" @click=\"showCaptcha(false)\">立即发布</button>\n                  <button type=\"button\" class=\"btn btn-secondary ml-1\" :disabled=\"!formReady\" @click=\"submit(true)\">保存为草稿</button>\n                </div>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nimport Editor from '$components/editor'\nimport UserLocked from '$components/user-locked'\nimport localforage from 'localforage'\nimport Alert from '$icons/Alert'\nimport { Select as ElSelect, Option as ElOption } from 'element-ui'\nimport 'element-ui/lib/theme-chalk/select.css'\n\nexport default {\n  name: 'thread-form',\n  components: {\n    Editor,\n    Alert,\n    ElSelect,\n    ElOption,\n    UserLocked\n  },\n  data () {\n    return {\n      ready: false,\n      nodes: [],\n      busing: false,\n      form: {\n        node_id: null,\n        type: 'markdown',\n        is_draft: true,\n        title: '',\n        content: {\n          markdown: '',\n          body: ''\n        },\n        ticket: null,\n        randstr: null\n      }\n    }\n  },\n  watch: {\n    form: {\n      deep: true,\n      handler () {\n        localforage.setItem('thread.form', this.form)\n      }\n    }\n  },\n  computed: {\n    ...mapGetters(['currentUser']),\n    formReady () {\n      return (\n        !this.busing &&\n        this.form.title.length >= 5 &&\n        this.form.node_id > 0 &&\n        this.form.content.markdown &&\n        this.form.content.markdown.length >= 30\n      )\n    }\n  },\n  mounted () {\n    this.loadNodes()\n    if (this.$route.name == 'threads.edit') {\n      this.loadThread(this.$route.params.id)\n        .then(this.syncFromCache)\n        .then(() => {\n          this.ready = true\n        })\n    } else {\n      this.syncFromCache()\n      this.ready = true\n    }\n    this.$nextTick(() => {\n      this.$refs['title_input'].focus()\n    })\n  },\n  methods: {\n    syncFromCache () {\n      localforage.getItem('thread.form', (err, form) => {\n        if (!err && typeof form === 'object') {\n          this.form = Object.assign(this.form, form)\n        }\n      })\n    },\n    clearCache () {\n      localforage.removeItem('thread.form')\n    },\n    loadNodes () {\n      this.busing = true\n      return this.$http\n        .get('nodes')\n        .then(response => {\n          this.nodes = response.data\n          this.busing = false\n        })\n        .finally(() => (this.busing = false))\n    },\n    loadThread (id) {\n      return this.$http\n        .get(`threads/${id}`)\n        .then(thread => (this.form = Object.assign(this.form, thread)))\n    },\n    showCaptcha (draft) {\n      let captcha = new TencentCaptcha(\n        process.env.VUE_APP_CAPTCHA_ID_PUBLISH,\n        res => {\n          if (res.ret === 0) {\n            this.form.ticket = res.ticket\n            this.form.randstr = res.randstr\n            this.submit(draft)\n          } else {\n            return this.$message.error('请先完成验证！')\n          }\n        }\n      )\n      captcha.show()\n    },\n    submit (draft = true) {\n      if (!this.form.ticket) {\n        return this.$message.error('请先完成验证！')\n      }\n      this.form.is_draft = draft\n      this.busing = true\n      let promise = null\n      let isEdit = this.$route.name == 'threads.edit'\n\n      if (isEdit) {\n        promise = this.$http\n          .patch(`threads/${this.$route.params.id}`)\n          .patch(this.form)\n      } else {\n        promise = this.$http.post('threads', this.form)\n      }\n\n      promise\n        .then(response => {\n          this.$message.success(\n            '内容已' + (draft ? '保存为草稿' : isEdit ? '更新' : '发布')\n          )\n          this.$router.replace({\n            name: 'threads.show',\n            params: { id: response.id }\n          })\n          this.clearCache()\n        })\n        .finally(() => (this.busing = false))\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.editor-container {\n  overflow: auto;\n  height: calc(100vh - 370px);\n}\n</style>\n"]}]}
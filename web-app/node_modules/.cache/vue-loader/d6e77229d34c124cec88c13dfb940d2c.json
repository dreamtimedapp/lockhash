{"remainingRequest":"/root/lockhash/web-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/root/lockhash/web-app/src/modules/users/profile/avatar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/root/lockhash/web-app/src/modules/users/profile/avatar.vue","mtime":1553930101455},{"path":"/root/lockhash/web-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/root/lockhash/web-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/root/lockhash/web-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport AvatarCropper from 'vue-avatar-cropper'\nimport { mapGetters } from 'vuex'\n\nexport default {\n  components: { AvatarCropper },\n  data () {\n    return {\n      url: this.$parent.currentUser.avatar,\n      newUrl: null\n    }\n  },\n  computed: {\n    ...mapGetters(['authToken']),\n    uploadUrl () {\n      return this.$http.defaults.baseURL + '/files/upload'\n    },\n    uploadHeaders () {\n      return {\n        Authorization: `Bearer ${this.authToken}`\n      }\n    }\n  },\n  methods: {\n    handleUploaded (response) {\n      if (!response.success) {\n        this.$message.error(response.error)\n      }\n\n      this.url = this.newUrl = response.url\n    },\n    async submit () {\n      await this.$http\n        .patch(`users/${this.$parent.currentUser.username}`, {\n          avatar: this.newUrl\n        })\n        .then(() => {\n          this.$message.success('头像已更新')\n          this.$store.dispatch('loadUser')\n        })\n    }\n  }\n}\n",{"version":3,"sources":["avatar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"avatar.vue","sourceRoot":"src/modules/users/profile","sourcesContent":["<template>\n  <div class=\"box\">\n    <div class=\"box-heading border-bottom\">\n      <h5>修改头像</h5>\n    </div>\n    <img :src=\"url\" class=\"rounded-circle shadow-6 avatar-120\" alt=\"user avatar\">\n    <img :src=\"url\" class=\"rounded-circle shadow-6 ml-2 avatar-60\" alt=\"user avatar\">\n    <img :src=\"url\" class=\"rounded-circle shadow-6 ml-2 avatar-30\" alt=\"user avatar\">\n\n    <button class=\"btn btn-light d-block mt-2\" id=\"pick-avatar\">选择新头像</button>\n\n    <avatar-cropper @uploaded=\"handleUploaded\" trigger=\"#pick-avatar\" :upload-url=\"uploadUrl\" :upload-headers=\"uploadHeaders\" />\n\n    <button class=\"btn btn-primary mt-2\" @click=\"submit\" :disabled=\"!newUrl\">保存</button>\n  </div>\n</template>\n\n<script>\nimport AvatarCropper from 'vue-avatar-cropper'\nimport { mapGetters } from 'vuex'\n\nexport default {\n  components: { AvatarCropper },\n  data () {\n    return {\n      url: this.$parent.currentUser.avatar,\n      newUrl: null\n    }\n  },\n  computed: {\n    ...mapGetters(['authToken']),\n    uploadUrl () {\n      return this.$http.defaults.baseURL + '/files/upload'\n    },\n    uploadHeaders () {\n      return {\n        Authorization: `Bearer ${this.authToken}`\n      }\n    }\n  },\n  methods: {\n    handleUploaded (response) {\n      if (!response.success) {\n        this.$message.error(response.error)\n      }\n\n      this.url = this.newUrl = response.url\n    },\n    async submit () {\n      await this.$http\n        .patch(`users/${this.$parent.currentUser.username}`, {\n          avatar: this.newUrl\n        })\n        .then(() => {\n          this.$message.success('头像已更新')\n          this.$store.dispatch('loadUser')\n        })\n    }\n  }\n}\n</script>\n"]}]}